{
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _serve = _interopRequireDefault(require(\"./gulp/tasks/serve\"));\n\nvar _watch = _interopRequireDefault(require(\"./gulp/tasks/watch\"));\n\nvar _clean = _interopRequireDefault(require(\"./gulp/tasks/clean\"));\n\nvar _html = _interopRequireDefault(require(\"./gulp/tasks/html\"));\n\nvar _fonts = _interopRequireDefault(require(\"./gulp/tasks/fonts\"));\n\nvar _images = _interopRequireDefault(require(\"./gulp/tasks/images\"));\n\nvar _sprite_svg = require(\"./gulp/tasks/sprite_svg\");\n\nvar _js = require(\"./gulp/tasks/js\");\n\nvar _postcss = require(\"./gulp/tasks/postcss\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_gulp.default.task(_serve.default);\n\n_gulp.default.task(_watch.default);\n\n_gulp.default.task(_clean.default);\n\n_gulp.default.task(_html.default);\n\n_gulp.default.task(_fonts.default);\n\n_gulp.default.task(_images.default);\n\n_gulp.default.task(_sprite_svg.cleanSvgSprite);\n\n_gulp.default.task(_sprite_svg.generateSvgSprite);\n\n_gulp.default.task(_sprite_svg.copySvgSprite);\n\n_gulp.default.task(_js.jsInternal);\n\n_gulp.default.task(_js.jsExternal);\n\n_gulp.default.task(_postcss.postcssInternal);\n\n_gulp.default.task(_postcss.postcssExternal);\n\n_gulp.default.task('js', _gulp.default.parallel('jsInternal', 'jsExternal'));\n\n_gulp.default.task('postcss', _gulp.default.parallel('postcssInternal', 'postcssExternal'));\n\n_gulp.default.task('spriteSvg', _gulp.default.series('cleanSvgSprite', _gulp.default.parallel('generateSvgSprite'), 'copySvgSprite', 'html'));\n\n_gulp.default.task('build', _gulpUtil.default.env.env === 'prod' ? _gulp.default.series('clean', _gulp.default.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'images') : _gulp.default.series('clean', _gulp.default.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'html', 'images'));\n\n_gulp.default.task('default', _gulpUtil.default.env.env === 'prod' ? _gulp.default.series('build') : _gulp.default.series('build', _gulp.default.parallel('serve', 'watch')));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJ0YXNrIiwic2VydmUiLCJ3YXRjaCIsImNsZWFuIiwiaHRtbCIsImZvbnRzIiwiaW1hZ2VzIiwiY2xlYW5TdmdTcHJpdGUiLCJnZW5lcmF0ZVN2Z1Nwcml0ZSIsImNvcHlTdmdTcHJpdGUiLCJqc0ludGVybmFsIiwianNFeHRlcm5hbCIsInBvc3Rjc3NJbnRlcm5hbCIsInBvc3Rjc3NFeHRlcm5hbCIsInBhcmFsbGVsIiwic2VyaWVzIiwiZ3V0aWwiLCJlbnYiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFHQUEsY0FBS0MsSUFBTCxDQUFVQyxjQUFWOztBQUNBRixjQUFLQyxJQUFMLENBQVVFLGNBQVY7O0FBQ0FILGNBQUtDLElBQUwsQ0FBVUcsY0FBVjs7QUFDQUosY0FBS0MsSUFBTCxDQUFVSSxhQUFWOztBQUNBTCxjQUFLQyxJQUFMLENBQVVLLGNBQVY7O0FBQ0FOLGNBQUtDLElBQUwsQ0FBVU0sZUFBVjs7QUFDQVAsY0FBS0MsSUFBTCxDQUFVTywwQkFBVjs7QUFDQVIsY0FBS0MsSUFBTCxDQUFVUSw2QkFBVjs7QUFDQVQsY0FBS0MsSUFBTCxDQUFVUyx5QkFBVjs7QUFDQVYsY0FBS0MsSUFBTCxDQUFVVSxjQUFWOztBQUNBWCxjQUFLQyxJQUFMLENBQVVXLGNBQVY7O0FBQ0FaLGNBQUtDLElBQUwsQ0FBVVksd0JBQVY7O0FBQ0FiLGNBQUtDLElBQUwsQ0FBVWEsd0JBQVY7O0FBR0FkLGNBQUtDLElBQUwsQ0FBVSxJQUFWLEVBQWdCRCxjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixDQUFoQjs7QUFDQWYsY0FBS0MsSUFBTCxDQUFVLFNBQVYsRUFBcUJELGNBQUtlLFFBQUwsQ0FBYyxpQkFBZCxFQUFpQyxpQkFBakMsQ0FBckI7O0FBQ0FmLGNBQUtDLElBQUwsQ0FBVSxXQUFWLEVBQXVCRCxjQUFLZ0IsTUFBTCxDQUFZLGdCQUFaLEVBQThCaEIsY0FBS2UsUUFBTCxDQUFjLG1CQUFkLENBQTlCLEVBQWtFLGVBQWxFLEVBQW1GLE1BQW5GLENBQXZCOztBQUdBZixjQUFLQyxJQUFMLENBQVUsT0FBVixFQUFtQmdCLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJsQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixFQUEwQyxpQkFBMUMsRUFBNkQsaUJBQTdELEVBQWdGLFdBQWhGLEVBQTZGLE9BQTdGLENBQXJCLEVBQTRILFFBQTVILENBQTNCLEdBQW1LZixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixFQUEwQyxpQkFBMUMsRUFBNkQsaUJBQTdELEVBQWdGLFdBQWhGLEVBQTZGLE9BQTdGLENBQXJCLEVBQTRILE1BQTVILEVBQW9JLFFBQXBJLENBQXRMOztBQUVBZixjQUFLQyxJQUFMLENBQVUsU0FBVixFQUFxQmdCLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJsQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosQ0FBM0IsR0FBa0RoQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsT0FBZCxFQUF1QixPQUF2QixDQUFyQixDQUF2RSIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXEtzZW5tYXJ0XFxrc2VubWFydFxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBndXRpbCBmcm9tICdndWxwLXV0aWwnO1xyXG5cclxuaW1wb3J0IHNlcnZlIGZyb20gJy4vZ3VscC90YXNrcy9zZXJ2ZSc7XHJcbmltcG9ydCB3YXRjaCBmcm9tICcuL2d1bHAvdGFza3Mvd2F0Y2gnO1xyXG5pbXBvcnQgY2xlYW4gZnJvbSAnLi9ndWxwL3Rhc2tzL2NsZWFuJztcclxuaW1wb3J0IGh0bWwgZnJvbSAnLi9ndWxwL3Rhc2tzL2h0bWwnO1xyXG5pbXBvcnQgZm9udHMgZnJvbSAnLi9ndWxwL3Rhc2tzL2ZvbnRzJztcclxuaW1wb3J0IGltYWdlcyBmcm9tICcuL2d1bHAvdGFza3MvaW1hZ2VzJztcclxuaW1wb3J0IHtjbGVhblN2Z1Nwcml0ZSwgZ2VuZXJhdGVTdmdTcHJpdGUsIGNvcHlTdmdTcHJpdGV9IGZyb20gJy4vZ3VscC90YXNrcy9zcHJpdGVfc3ZnJztcclxuaW1wb3J0IHtqc0ludGVybmFsLCBqc0V4dGVybmFsfSBmcm9tICcuL2d1bHAvdGFza3MvanMnO1xyXG5pbXBvcnQge3Bvc3Rjc3NJbnRlcm5hbCwgcG9zdGNzc0V4dGVybmFsfSBmcm9tICcuL2d1bHAvdGFza3MvcG9zdGNzcyc7XHJcblxyXG5cclxuZ3VscC50YXNrKHNlcnZlKTtcclxuZ3VscC50YXNrKHdhdGNoKTtcclxuZ3VscC50YXNrKGNsZWFuKTtcclxuZ3VscC50YXNrKGh0bWwpO1xyXG5ndWxwLnRhc2soZm9udHMpO1xyXG5ndWxwLnRhc2soaW1hZ2VzKTtcclxuZ3VscC50YXNrKGNsZWFuU3ZnU3ByaXRlKTtcclxuZ3VscC50YXNrKGdlbmVyYXRlU3ZnU3ByaXRlKTtcclxuZ3VscC50YXNrKGNvcHlTdmdTcHJpdGUpO1xyXG5ndWxwLnRhc2soanNJbnRlcm5hbCk7XHJcbmd1bHAudGFzayhqc0V4dGVybmFsKTtcclxuZ3VscC50YXNrKHBvc3Rjc3NJbnRlcm5hbCk7XHJcbmd1bHAudGFzayhwb3N0Y3NzRXh0ZXJuYWwpO1xyXG5cclxuXHJcbmd1bHAudGFzaygnanMnLCBndWxwLnBhcmFsbGVsKCdqc0ludGVybmFsJywgJ2pzRXh0ZXJuYWwnKSk7XHJcbmd1bHAudGFzaygncG9zdGNzcycsIGd1bHAucGFyYWxsZWwoJ3Bvc3Rjc3NJbnRlcm5hbCcsICdwb3N0Y3NzRXh0ZXJuYWwnKSk7XHJcbmd1bHAudGFzaygnc3ByaXRlU3ZnJywgZ3VscC5zZXJpZXMoJ2NsZWFuU3ZnU3ByaXRlJywgZ3VscC5wYXJhbGxlbCgnZ2VuZXJhdGVTdmdTcHJpdGUnKSwgJ2NvcHlTdmdTcHJpdGUnLCAnaHRtbCcpKTtcclxuXHJcblxyXG5ndWxwLnRhc2soJ2J1aWxkJywgZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3VscC5zZXJpZXMoJ2NsZWFuJywgZ3VscC5wYXJhbGxlbCgnanNJbnRlcm5hbCcsICdqc0V4dGVybmFsJywgJ3Bvc3Rjc3NJbnRlcm5hbCcsICdwb3N0Y3NzRXh0ZXJuYWwnLCAnc3ByaXRlU3ZnJywgJ2ZvbnRzJyksICdpbWFnZXMnKSA6IGd1bHAuc2VyaWVzKCdjbGVhbicsIGd1bHAucGFyYWxsZWwoJ2pzSW50ZXJuYWwnLCAnanNFeHRlcm5hbCcsICdwb3N0Y3NzSW50ZXJuYWwnLCAncG9zdGNzc0V4dGVybmFsJywgJ3Nwcml0ZVN2ZycsICdmb250cycpLCAnaHRtbCcsICdpbWFnZXMnKSk7XHJcblxyXG5ndWxwLnRhc2soJ2RlZmF1bHQnLCBndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndWxwLnNlcmllcygnYnVpbGQnKSA6IGd1bHAuc2VyaWVzKCdidWlsZCcsIGd1bHAucGFyYWxsZWwoJ3NlcnZlJywgJ3dhdGNoJykpKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "task",
        "serve",
        "watch",
        "clean",
        "html",
        "fonts",
        "images",
        "cleanSvgSprite",
        "generateSvgSprite",
        "copySvgSprite",
        "jsInternal",
        "jsExternal",
        "postcssInternal",
        "postcssExternal",
        "parallel",
        "series",
        "gutil",
        "env"
      ],
      "mappings": ";;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGAA,cAAKC,IAAL,CAAUC,cAAV;;AACAF,cAAKC,IAAL,CAAUE,cAAV;;AACAH,cAAKC,IAAL,CAAUG,cAAV;;AACAJ,cAAKC,IAAL,CAAUI,aAAV;;AACAL,cAAKC,IAAL,CAAUK,cAAV;;AACAN,cAAKC,IAAL,CAAUM,eAAV;;AACAP,cAAKC,IAAL,CAAUO,0BAAV;;AACAR,cAAKC,IAAL,CAAUQ,6BAAV;;AACAT,cAAKC,IAAL,CAAUS,yBAAV;;AACAV,cAAKC,IAAL,CAAUU,cAAV;;AACAX,cAAKC,IAAL,CAAUW,cAAV;;AACAZ,cAAKC,IAAL,CAAUY,wBAAV;;AACAb,cAAKC,IAAL,CAAUa,wBAAV;;AAGAd,cAAKC,IAAL,CAAU,IAAV,EAAgBD,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,CAAhB;;AACAf,cAAKC,IAAL,CAAU,SAAV,EAAqBD,cAAKe,QAAL,CAAc,iBAAd,EAAiC,iBAAjC,CAArB;;AACAf,cAAKC,IAAL,CAAU,WAAV,EAAuBD,cAAKgB,MAAL,CAAY,gBAAZ,EAA8BhB,cAAKe,QAAL,CAAc,mBAAd,CAA9B,EAAkE,eAAlE,EAAmF,MAAnF,CAAvB;;AAGAf,cAAKC,IAAL,CAAU,OAAV,EAAmBgB,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BlB,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,EAA0C,iBAA1C,EAA6D,iBAA7D,EAAgF,WAAhF,EAA6F,OAA7F,CAArB,EAA4H,QAA5H,CAA3B,GAAmKf,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,EAA0C,iBAA1C,EAA6D,iBAA7D,EAAgF,WAAhF,EAA6F,OAA7F,CAArB,EAA4H,MAA5H,EAAoI,QAApI,CAAtL;;AAEAf,cAAKC,IAAL,CAAU,SAAV,EAAqBgB,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BlB,cAAKgB,MAAL,CAAY,OAAZ,CAA3B,GAAkDhB,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,OAAd,EAAuB,OAAvB,CAArB,CAAvE",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\n\r\nimport serve from './gulp/tasks/serve';\r\nimport watch from './gulp/tasks/watch';\r\nimport clean from './gulp/tasks/clean';\r\nimport html from './gulp/tasks/html';\r\nimport fonts from './gulp/tasks/fonts';\r\nimport images from './gulp/tasks/images';\r\nimport {cleanSvgSprite, generateSvgSprite, copySvgSprite} from './gulp/tasks/sprite_svg';\r\nimport {jsInternal, jsExternal} from './gulp/tasks/js';\r\nimport {postcssInternal, postcssExternal} from './gulp/tasks/postcss';\r\n\r\n\r\ngulp.task(serve);\r\ngulp.task(watch);\r\ngulp.task(clean);\r\ngulp.task(html);\r\ngulp.task(fonts);\r\ngulp.task(images);\r\ngulp.task(cleanSvgSprite);\r\ngulp.task(generateSvgSprite);\r\ngulp.task(copySvgSprite);\r\ngulp.task(jsInternal);\r\ngulp.task(jsExternal);\r\ngulp.task(postcssInternal);\r\ngulp.task(postcssExternal);\r\n\r\n\r\ngulp.task('js', gulp.parallel('jsInternal', 'jsExternal'));\r\ngulp.task('postcss', gulp.parallel('postcssInternal', 'postcssExternal'));\r\ngulp.task('spriteSvg', gulp.series('cleanSvgSprite', gulp.parallel('generateSvgSprite'), 'copySvgSprite', 'html'));\r\n\r\n\r\ngulp.task('build', gutil.env.env === 'prod' ? gulp.series('clean', gulp.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'images') : gulp.series('clean', gulp.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'html', 'images'));\r\n\r\ngulp.task('default', gutil.env.env === 'prod' ? gulp.series('build') : gulp.series('build', gulp.parallel('serve', 'watch')));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\serve.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\serve.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\serve.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\serve.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
        "sourceFileName": "serve.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Запуск вебсервера BrowserSync\r\n */\nfunction serve(done) {\n  var serveCreate = _browserSync.default.create();\n\n  serveCreate.init(_config.default.browsersync);\n}\n\nserve.description = 'Запускает вебсервер из директории /build';\nvar _default = serve;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlLmpzIl0sIm5hbWVzIjpbInNlcnZlIiwiZG9uZSIsInNlcnZlQ3JlYXRlIiwiYnJvd3NlcnN5bmMiLCJjcmVhdGUiLCJpbml0IiwiY29uZmlnIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxLQUFULENBQWVDLElBQWYsRUFBcUI7QUFDakIsTUFBTUMsV0FBVyxHQUFHQyxxQkFBWUMsTUFBWixFQUFwQjs7QUFDQUYsRUFBQUEsV0FBVyxDQUFDRyxJQUFaLENBQWlCQyxnQkFBT0gsV0FBeEI7QUFDSDs7QUFDREgsS0FBSyxDQUFDTyxXQUFOLEdBQW9CLDBDQUFwQjtlQUVlUCxLIiwic291cmNlUm9vdCI6IkM6XFxwcm9qZWN0c1xcbXktcHJvamVjdFxcS3Nlbm1hcnRcXGtzZW5tYXJ0XFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCdcclxuaW1wb3J0IGJyb3dzZXJzeW5jIGZyb20gJ2Jyb3dzZXItc3luYydcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnXHJcblxyXG4vKlxyXG4gKiDQl9Cw0L/Rg9GB0Log0LLQtdCx0YHQtdGA0LLQtdGA0LAgQnJvd3NlclN5bmNcclxuICovXHJcblxyXG5mdW5jdGlvbiBzZXJ2ZShkb25lKSB7XHJcbiAgICBjb25zdCBzZXJ2ZUNyZWF0ZSA9IGJyb3dzZXJzeW5jLmNyZWF0ZSgpO1xyXG4gICAgc2VydmVDcmVhdGUuaW5pdChjb25maWcuYnJvd3NlcnN5bmMpO1xyXG59XHJcbnNlcnZlLmRlc2NyaXB0aW9uID0gJ9CX0LDQv9GD0YHQutCw0LXRgiDQstC10LHRgdC10YDQstC10YAg0LjQtyDQtNC40YDQtdC60YLQvtGA0LjQuCAvYnVpbGQnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgc2VydmU7Il19",
    "map": {
      "version": 3,
      "sources": [
        "serve.js"
      ],
      "names": [
        "serve",
        "done",
        "serveCreate",
        "browsersync",
        "create",
        "init",
        "config",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjB,MAAMC,WAAW,GAAGC,qBAAYC,MAAZ,EAApB;;AACAF,EAAAA,WAAW,CAACG,IAAZ,CAAiBC,gBAAOH,WAAxB;AACH;;AACDH,KAAK,CAACO,WAAN,GAAoB,0CAApB;eAEeP,K",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp'\r\nimport browsersync from 'browser-sync'\r\nimport config from '../config'\r\n\r\n/*\r\n * Запуск вебсервера BrowserSync\r\n */\r\n\r\nfunction serve(done) {\r\n    const serveCreate = browsersync.create();\r\n    serveCreate.init(config.browsersync);\r\n}\r\nserve.description = 'Запускает вебсервер из директории /build';\r\n\r\nexport default serve;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\config.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar developmentDir = 'build/',\n    productionDir = '../public/assets/build/';\nvar path = {\n  dest: _gulpUtil.default.env.env === 'prod' ? productionDir : developmentDir,\n  build: {\n    html: developmentDir,\n    js: 'js/',\n    css: 'css/',\n    img: 'img/',\n    sprite: 'src/img/',\n    svgSprite: 'img/svg/',\n    fonts: 'fonts/'\n  },\n  src: {\n    html: 'src/*.html',\n    jsInternal: 'src/js/internal.js',\n    jsExternal: 'src/js/external.js',\n    styleInternal: _gulpUtil.default.env.env === 'prod' ? 'src/style/internal.pcss' : ['src/style/internal.pcss', 'src/style/ui_kit.pcss'],\n    styleExternal: 'src/style/external.pcss',\n    styleInclude: ['src/style/', './bower_components'],\n    img: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*'],\n    imgProduction: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/inhtml/**/*.*'],\n    sprite: 'src/img/sprite/**/*.*',\n    svg: 'src/img/svg/',\n    svgSpriteBuild: 'src/img/svg/',\n    svgSprite: 'src/img/svg/sprite/*.svg',\n    generatedSvgSprite: 'src/img/svg/sprite.svg',\n    fonts: 'src/fonts/**/*.*'\n  },\n  watch: {\n    html: 'src/**/*.html',\n    jsInternal: ['src/js/**/*.js', '!src/js/**/external.js', '!src/js/vendor/**/*.js'],\n    jsExternal: ['src/js/**/external.js', 'src/js/vendor/**/*.js'],\n    styleInternal: ['src/style/**/*.pcss', 'src/style/**/internal.pcss', '!src/style/**/external.pcss'],\n    styleExternal: 'src/style/external.pcss',\n    img: ['src/img/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/svg/sprite.svg'],\n    svgSprite: 'src/img/svg/sprite/*.svg',\n    fonts: 'src/fonts/**/*.*'\n  }\n};\nvar config = {\n  browsersync: {\n    server: {\n      baseDir: \"./\".concat(developmentDir)\n    },\n    tunnel: false,\n    open: false,\n    host: 'localhost',\n    port: 3000,\n    logPrefix: 'Blank'\n  },\n  html: {\n    src: path.src.html,\n    dest: path.build.html\n  },\n  js: {\n    srcInternal: path.src.jsInternal,\n    srcExternal: path.src.jsExternal,\n    dest: \"\".concat(path.dest).concat(path.build.js),\n    destJquery: \"\".concat(path.dest).concat(path.build.jquery)\n  },\n  css: {\n    srcInternal: path.src.styleInternal,\n    srcExternal: path.src.styleExternal,\n    options: {\n      includePaths: path.src.styleInclude,\n      sourceMap: true,\n      errLogToConsole: true\n    },\n    dest: \"\".concat(path.dest).concat(path.build.css)\n  },\n  images: {\n    src: path.src.img,\n    srcProduction: path.src.imgProduction,\n    dest: \"\".concat(path.dest).concat(path.build.img)\n  },\n  svg: {\n    svgInStyle: {\n      path: path.src.svg\n    },\n    sprite: path.src.svgSprite,\n    spriteGenerateDest: path.src.svgSpriteBuild,\n    spriteDest: path.dest + path.build.svgSprite,\n    generated: path.src.generatedSvgSprite\n  },\n  sprites: {\n    imagePath: path.src.sprite,\n    spritePath: path.build.sprite\n  },\n  fonts: {\n    src: path.src.fonts,\n    dest: path.dest + path.build.fonts\n  },\n  watch: {\n    html: path.watch.html,\n    jsInternal: path.watch.jsInternal,\n    jsExternal: path.watch.jsExternal,\n    cssInternal: path.watch.styleInternal,\n    cssExternal: path.watch.styleExternal,\n    images: path.watch.img,\n    svgSprite: path.watch.svgSprite,\n    fonts: path.watch.fonts\n  },\n  clean: {\n    dest: \"./\".concat(path.dest)\n  },\n  cssnano: {\n    zindex: false,\n    svgo: false,\n    // svgo отключен из-за ie11\n    autoprefixer: false,\n    reduceIdents: false\n  },\n  uglify: {\n    mangle: {\n      keep_fnames: true\n    },\n    compress: {\n      // unsafe: false,\n      // unsafe_Func: false,\n      unsafe_comps: false,\n      unsafe_math: false,\n      unsafe_proto: false,\n      unsafe_regexp: false,\n      typeofs: false,\n      reduce_vars: false,\n      reduce_funcs: false,\n      pure_getters: true,\n      properties: false,\n      collapse_vars: false\n    }\n  }\n};\nvar _default = config;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "developmentDir",
        "productionDir",
        "path",
        "dest",
        "gutil",
        "env",
        "build",
        "html",
        "js",
        "css",
        "img",
        "sprite",
        "svgSprite",
        "fonts",
        "src",
        "jsInternal",
        "jsExternal",
        "styleInternal",
        "styleExternal",
        "styleInclude",
        "imgProduction",
        "svg",
        "svgSpriteBuild",
        "generatedSvgSprite",
        "watch",
        "config",
        "browsersync",
        "server",
        "baseDir",
        "tunnel",
        "open",
        "host",
        "port",
        "logPrefix",
        "srcInternal",
        "srcExternal",
        "destJquery",
        "jquery",
        "options",
        "includePaths",
        "sourceMap",
        "errLogToConsole",
        "images",
        "srcProduction",
        "svgInStyle",
        "spriteGenerateDest",
        "spriteDest",
        "generated",
        "sprites",
        "imagePath",
        "spritePath",
        "cssInternal",
        "cssExternal",
        "clean",
        "cssnano",
        "zindex",
        "svgo",
        "autoprefixer",
        "reduceIdents",
        "uglify",
        "mangle",
        "keep_fnames",
        "compress",
        "unsafe_comps",
        "unsafe_math",
        "unsafe_proto",
        "unsafe_regexp",
        "typeofs",
        "reduce_vars",
        "reduce_funcs",
        "pure_getters",
        "properties",
        "collapse_vars"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,cAAc,GAAG,QAAvB;AAAA,IACIC,aAAa,GAAI,yBADrB;AAGA,IAAMC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAEC,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BJ,aAA3B,GAA2CD,cADxC;AAGTM,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEP,cADH;AAGHQ,IAAAA,EAAE,EAAE,KAHD;AAKHC,IAAAA,GAAG,EAAE,MALF;AAOHC,IAAAA,GAAG,EAAE,MAPF;AAQHC,IAAAA,MAAM,EAAE,UARL;AASHC,IAAAA,SAAS,EAAE,UATR;AAWHC,IAAAA,KAAK,EAAE;AAXJ,GAHE;AAgBTC,EAAAA,GAAG,EAAE;AACDP,IAAAA,IAAI,EAAE,YADL;AAGDQ,IAAAA,UAAU,EAAE,oBAHX;AAIDC,IAAAA,UAAU,EAAE,oBAJX;AAMDC,IAAAA,aAAa,EAAEb,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,yBAA3B,GAAuD,CAAC,yBAAD,EAA4B,uBAA5B,CANrE;AAODa,IAAAA,aAAa,EAAE,yBAPd;AAQDC,IAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,oBAAf,CARb;AAUDT,IAAAA,GAAG,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,4BAA7C,CAVJ;AAWDU,IAAAA,aAAa,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,4BAA7C,EAA2E,wBAA3E,CAXd;AAYDT,IAAAA,MAAM,EAAE,uBAZP;AAaDU,IAAAA,GAAG,EAAE,cAbJ;AAeDC,IAAAA,cAAc,EAAE,cAff;AAgBDV,IAAAA,SAAS,EAAE,0BAhBV;AAiBDW,IAAAA,kBAAkB,EAAE,wBAjBnB;AAmBDV,IAAAA,KAAK,EAAE;AAnBN,GAhBI;AAqCTW,EAAAA,KAAK,EAAE;AACHjB,IAAAA,IAAI,EAAE,eADH;AAGHQ,IAAAA,UAAU,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,wBAA7C,CAHT;AAIHC,IAAAA,UAAU,EAAE,CAAC,uBAAD,EAA0B,uBAA1B,CAJT;AAMHC,IAAAA,aAAa,EAAE,CAAC,qBAAD,EAAwB,4BAAxB,EAAsD,6BAAtD,CANZ;AAOHC,IAAAA,aAAa,EAAE,yBAPZ;AASHR,IAAAA,GAAG,EAAE,CAAC,gBAAD,EAAmB,4BAAnB,EAAiD,yBAAjD,CATF;AAWHE,IAAAA,SAAS,EAAE,0BAXR;AAaHC,IAAAA,KAAK,EAAE;AAbJ;AArCE,CAAb;AAsDA,IAAMY,MAAM,GAAG;AACXC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,cAAO5B,cAAP;AADH,KADC;AAIT6B,IAAAA,MAAM,EAAE,KAJC;AAKTC,IAAAA,IAAI,EAAE,KALG;AAMTC,IAAAA,IAAI,EAAE,WANG;AAOTC,IAAAA,IAAI,EAAE,IAPG;AAQTC,IAAAA,SAAS,EAAE;AARF,GADF;AAWX1B,EAAAA,IAAI,EAAE;AACFO,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASP,IADZ;AAEFJ,IAAAA,IAAI,EAAED,IAAI,CAACI,KAAL,CAAWC;AAFf,GAXK;AAeXC,EAAAA,EAAE,EAAE;AACA0B,IAAAA,WAAW,EAAEhC,IAAI,CAACY,GAAL,CAASC,UADtB;AAEAoB,IAAAA,WAAW,EAAEjC,IAAI,CAACY,GAAL,CAASE,UAFtB;AAGAb,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWE,EAA5B,CAHJ;AAIA4B,IAAAA,UAAU,YAAKlC,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAW+B,MAA5B;AAJV,GAfO;AAqBX5B,EAAAA,GAAG,EAAE;AACDyB,IAAAA,WAAW,EAAEhC,IAAI,CAACY,GAAL,CAASG,aADrB;AAEDkB,IAAAA,WAAW,EAAEjC,IAAI,CAACY,GAAL,CAASI,aAFrB;AAGDoB,IAAAA,OAAO,EAAE;AACLC,MAAAA,YAAY,EAAErC,IAAI,CAACY,GAAL,CAASK,YADlB;AAELqB,MAAAA,SAAS,EAAE,IAFN;AAGLC,MAAAA,eAAe,EAAE;AAHZ,KAHR;AAQDtC,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWG,GAA5B;AARH,GArBM;AA+BXiC,EAAAA,MAAM,EAAE;AACJ5B,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASJ,GADV;AAEJiC,IAAAA,aAAa,EAAEzC,IAAI,CAACY,GAAL,CAASM,aAFpB;AAGJjB,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWI,GAA5B;AAHA,GA/BG;AAoCXW,EAAAA,GAAG,EAAE;AACDuB,IAAAA,UAAU,EAAE;AACR1C,MAAAA,IAAI,EAAEA,IAAI,CAACY,GAAL,CAASO;AADP,KADX;AAIDV,IAAAA,MAAM,EAAET,IAAI,CAACY,GAAL,CAASF,SAJhB;AAKDiC,IAAAA,kBAAkB,EAAE3C,IAAI,CAACY,GAAL,CAASQ,cAL5B;AAMDwB,IAAAA,UAAU,EAAE5C,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACI,KAAL,CAAWM,SANlC;AAODmC,IAAAA,SAAS,EAAE7C,IAAI,CAACY,GAAL,CAASS;AAPnB,GApCM;AA6CXyB,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE/C,IAAI,CAACY,GAAL,CAASH,MADf;AAELuC,IAAAA,UAAU,EAAEhD,IAAI,CAACI,KAAL,CAAWK;AAFlB,GA7CE;AAiDXE,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASD,KADX;AAEHV,IAAAA,IAAI,EAAED,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACI,KAAL,CAAWO;AAF1B,GAjDI;AAqDXW,EAAAA,KAAK,EAAE;AACHjB,IAAAA,IAAI,EAAEL,IAAI,CAACsB,KAAL,CAAWjB,IADd;AAEHQ,IAAAA,UAAU,EAAEb,IAAI,CAACsB,KAAL,CAAWT,UAFpB;AAGHC,IAAAA,UAAU,EAAEd,IAAI,CAACsB,KAAL,CAAWR,UAHpB;AAIHmC,IAAAA,WAAW,EAAEjD,IAAI,CAACsB,KAAL,CAAWP,aAJrB;AAKHmC,IAAAA,WAAW,EAAElD,IAAI,CAACsB,KAAL,CAAWN,aALrB;AAMHwB,IAAAA,MAAM,EAAExC,IAAI,CAACsB,KAAL,CAAWd,GANhB;AAOHE,IAAAA,SAAS,EAAEV,IAAI,CAACsB,KAAL,CAAWZ,SAPnB;AAQHC,IAAAA,KAAK,EAAEX,IAAI,CAACsB,KAAL,CAAWX;AARf,GArDI;AA+DXwC,EAAAA,KAAK,EAAE;AACHlD,IAAAA,IAAI,cAAOD,IAAI,CAACC,IAAZ;AADD,GA/DI;AAkEXmD,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,IAAI,EAAE,KAFD;AAEQ;AACbC,IAAAA,YAAY,EAAE,KAHT;AAILC,IAAAA,YAAY,EAAE;AAJT,GAlEE;AAwEXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE;AACJC,MAAAA,WAAW,EAAE;AADT,KADJ;AAIJC,IAAAA,QAAQ,EAAE;AACN;AACA;AACAC,MAAAA,YAAY,EAAE,KAHR;AAINC,MAAAA,WAAW,EAAE,KAJP;AAKNC,MAAAA,YAAY,EAAE,KALR;AAMNC,MAAAA,aAAa,EAAE,KANT;AAONC,MAAAA,OAAO,EAAE,KAPH;AAQNC,MAAAA,WAAW,EAAE,KARP;AASNC,MAAAA,YAAY,EAAE,KATR;AAUNC,MAAAA,YAAY,EAAE,IAVR;AAWNC,MAAAA,UAAU,EAAE,KAXN;AAYNC,MAAAA,aAAa,EAAE;AAZT;AAJN;AAxEG,CAAf;eA6Fe/C,M",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\n\r\nconst developmentDir = 'build/',\r\n    productionDir  = '../public/assets/build/';\r\n\r\nconst path = {\r\n    dest: gutil.env.env === 'prod' ? productionDir : developmentDir,\r\n\r\n    build: {\r\n        html: developmentDir,\r\n\r\n        js: 'js/',\r\n\r\n        css: 'css/',\r\n\r\n        img: 'img/',\r\n        sprite: 'src/img/',\r\n        svgSprite: 'img/svg/',\r\n\r\n        fonts: 'fonts/'\r\n    },\r\n    src: {\r\n        html: 'src/*.html',\r\n\r\n        jsInternal: 'src/js/internal.js',\r\n        jsExternal: 'src/js/external.js',\r\n\r\n        styleInternal: gutil.env.env === 'prod' ? 'src/style/internal.pcss' : ['src/style/internal.pcss', 'src/style/ui_kit.pcss'],\r\n        styleExternal: 'src/style/external.pcss',\r\n        styleInclude: ['src/style/', './bower_components'],\r\n\r\n        img: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*'],\r\n        imgProduction: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/inhtml/**/*.*'],\r\n        sprite: 'src/img/sprite/**/*.*',\r\n        svg: 'src/img/svg/',\r\n\r\n        svgSpriteBuild: 'src/img/svg/',\r\n        svgSprite: 'src/img/svg/sprite/*.svg',\r\n        generatedSvgSprite: 'src/img/svg/sprite.svg',\r\n\r\n        fonts: 'src/fonts/**/*.*'\r\n    },\r\n    watch: {\r\n        html: 'src/**/*.html',\r\n\r\n        jsInternal: ['src/js/**/*.js', '!src/js/**/external.js', '!src/js/vendor/**/*.js'],\r\n        jsExternal: ['src/js/**/external.js', 'src/js/vendor/**/*.js'],\r\n\r\n        styleInternal: ['src/style/**/*.pcss', 'src/style/**/internal.pcss', '!src/style/**/external.pcss'],\r\n        styleExternal: 'src/style/external.pcss',\r\n\r\n        img: ['src/img/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/svg/sprite.svg'],\r\n\r\n        svgSprite: 'src/img/svg/sprite/*.svg',\r\n\r\n        fonts: 'src/fonts/**/*.*'\r\n    }\r\n};\r\n\r\nconst config = {\r\n    browsersync: {\r\n        server: {\r\n            baseDir: `./${developmentDir}`\r\n        },\r\n        tunnel: false,\r\n        open: false,\r\n        host: 'localhost',\r\n        port: 3000,\r\n        logPrefix: 'Blank'\r\n    },\r\n    html: {\r\n        src: path.src.html,\r\n        dest: path.build.html\r\n    },\r\n    js: {\r\n        srcInternal: path.src.jsInternal,\r\n        srcExternal: path.src.jsExternal,\r\n        dest: `${path.dest}${path.build.js}`,\r\n        destJquery: `${path.dest}${path.build.jquery}`\r\n    },\r\n    css: {\r\n        srcInternal: path.src.styleInternal,\r\n        srcExternal: path.src.styleExternal,\r\n        options: {\r\n            includePaths: path.src.styleInclude,\r\n            sourceMap: true,\r\n            errLogToConsole: true\r\n        },\r\n        dest: `${path.dest}${path.build.css}`\r\n    },\r\n    images: {\r\n        src: path.src.img,\r\n        srcProduction: path.src.imgProduction,\r\n        dest: `${path.dest}${path.build.img}`\r\n    },\r\n    svg: {\r\n        svgInStyle: {\r\n            path: path.src.svg\r\n        },\r\n        sprite: path.src.svgSprite,\r\n        spriteGenerateDest: path.src.svgSpriteBuild,\r\n        spriteDest: path.dest + path.build.svgSprite,\r\n        generated: path.src.generatedSvgSprite\r\n    },\r\n    sprites: {\r\n        imagePath: path.src.sprite,\r\n        spritePath: path.build.sprite\r\n    },\r\n    fonts: {\r\n        src: path.src.fonts,\r\n        dest: path.dest + path.build.fonts\r\n    },\r\n    watch: {\r\n        html: path.watch.html,\r\n        jsInternal: path.watch.jsInternal,\r\n        jsExternal: path.watch.jsExternal,\r\n        cssInternal: path.watch.styleInternal,\r\n        cssExternal: path.watch.styleExternal,\r\n        images: path.watch.img,\r\n        svgSprite: path.watch.svgSprite,\r\n        fonts: path.watch.fonts\r\n    },\r\n    clean: {\r\n        dest: `./${path.dest}`\r\n    },\r\n    cssnano: {\r\n        zindex: false,\r\n        svgo: false, // svgo отключен из-за ie11\r\n        autoprefixer: false,\r\n        reduceIdents: false\r\n    },\r\n    uglify: {\r\n        mangle: {\r\n            keep_fnames: true\r\n        },\r\n        compress: {\r\n            // unsafe: false,\r\n            // unsafe_Func: false,\r\n            unsafe_comps: false,\r\n            unsafe_math: false,\r\n            unsafe_proto: false,\r\n            unsafe_regexp: false,\r\n            typeofs: false,\r\n            reduce_vars: false,\r\n            reduce_funcs: false,\r\n            pure_getters: true,\r\n            properties: false,\r\n            collapse_vars: false\r\n        }\r\n    }\r\n};\r\n\r\nexport default config;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\watch.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\watch.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\watch.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\watch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
        "sourceFileName": "watch.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Смотрит за изменениями\r\n */\nfunction watch() {\n  _gulp.default.watch(_config.default.watch.html, _gulp.default.series('html'));\n\n  _gulp.default.watch(_config.default.watch.cssInternal, _gulp.default.series('postcssInternal'));\n\n  _gulp.default.watch(_config.default.watch.cssExternal, _gulp.default.series('postcssExternal'));\n\n  _gulp.default.watch(_config.default.watch.jsInternal, _gulp.default.series('jsInternal'));\n\n  _gulp.default.watch(_config.default.watch.jsExternal, _gulp.default.series('jsExternal'));\n\n  _gulp.default.watch(_config.default.watch.images, _gulp.default.series('images'));\n\n  _gulp.default.watch(_config.default.watch.svgSprite, _gulp.default.series('spriteSvg'));\n\n  _gulp.default.watch(_config.default.watch.fonts, _gulp.default.series('fonts'));\n}\n\n;\nwatch.description = 'Смотрит за изменениями файлов';\nvar _default = watch;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdGNoLmpzIl0sIm5hbWVzIjpbIndhdGNoIiwiZ3VscCIsImNvbmZpZyIsImh0bWwiLCJzZXJpZXMiLCJjc3NJbnRlcm5hbCIsImNzc0V4dGVybmFsIiwianNJbnRlcm5hbCIsImpzRXh0ZXJuYWwiLCJpbWFnZXMiLCJzdmdTcHJpdGUiLCJmb250cyIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTs7O0FBSUEsU0FBU0EsS0FBVCxHQUFpQjtBQUNiQyxnQkFBS0QsS0FBTCxDQUFXRSxnQkFBT0YsS0FBUCxDQUFhRyxJQUF4QixFQUE4QkYsY0FBS0csTUFBTCxDQUFZLE1BQVosQ0FBOUI7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFLLFdBQXhCLEVBQXFDSixjQUFLRyxNQUFMLENBQVksaUJBQVosQ0FBckM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFNLFdBQXhCLEVBQXFDTCxjQUFLRyxNQUFMLENBQVksaUJBQVosQ0FBckM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFPLFVBQXhCLEVBQW9DTixjQUFLRyxNQUFMLENBQVksWUFBWixDQUFwQzs7QUFDQUgsZ0JBQUtELEtBQUwsQ0FBV0UsZ0JBQU9GLEtBQVAsQ0FBYVEsVUFBeEIsRUFBb0NQLGNBQUtHLE1BQUwsQ0FBWSxZQUFaLENBQXBDOztBQUNBSCxnQkFBS0QsS0FBTCxDQUFXRSxnQkFBT0YsS0FBUCxDQUFhUyxNQUF4QixFQUFnQ1IsY0FBS0csTUFBTCxDQUFZLFFBQVosQ0FBaEM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFVLFNBQXhCLEVBQW1DVCxjQUFLRyxNQUFMLENBQVksV0FBWixDQUFuQzs7QUFDQUgsZ0JBQUtELEtBQUwsQ0FBV0UsZ0JBQU9GLEtBQVAsQ0FBYVcsS0FBeEIsRUFBK0JWLGNBQUtHLE1BQUwsQ0FBWSxPQUFaLENBQS9CO0FBQ0g7O0FBQUE7QUFDREosS0FBSyxDQUFDWSxXQUFOLEdBQW9CLCtCQUFwQjtlQUVlWixLIiwic291cmNlUm9vdCI6IkM6XFxwcm9qZWN0c1xcbXktcHJvamVjdFxcS3Nlbm1hcnRcXGtzZW5tYXJ0XFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0KHQvNC+0YLRgNC40YIg0LfQsCDQuNC30LzQtdC90LXQvdC40Y/QvNC4XHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gd2F0Y2goKSB7XHJcbiAgICBndWxwLndhdGNoKGNvbmZpZy53YXRjaC5odG1sLCBndWxwLnNlcmllcygnaHRtbCcpKTtcclxuICAgIGd1bHAud2F0Y2goY29uZmlnLndhdGNoLmNzc0ludGVybmFsLCBndWxwLnNlcmllcygncG9zdGNzc0ludGVybmFsJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guY3NzRXh0ZXJuYWwsIGd1bHAuc2VyaWVzKCdwb3N0Y3NzRXh0ZXJuYWwnKSk7XHJcbiAgICBndWxwLndhdGNoKGNvbmZpZy53YXRjaC5qc0ludGVybmFsLCBndWxwLnNlcmllcygnanNJbnRlcm5hbCcpKTtcclxuICAgIGd1bHAud2F0Y2goY29uZmlnLndhdGNoLmpzRXh0ZXJuYWwsIGd1bHAuc2VyaWVzKCdqc0V4dGVybmFsJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guaW1hZ2VzLCBndWxwLnNlcmllcygnaW1hZ2VzJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guc3ZnU3ByaXRlLCBndWxwLnNlcmllcygnc3ByaXRlU3ZnJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guZm9udHMsIGd1bHAuc2VyaWVzKCdmb250cycpKTtcclxufTtcclxud2F0Y2guZGVzY3JpcHRpb24gPSAn0KHQvNC+0YLRgNC40YIg0LfQsCDQuNC30LzQtdC90LXQvdC40Y/QvNC4INGE0LDQudC70L7Qsic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB3YXRjaDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "watch.js"
      ],
      "names": [
        "watch",
        "gulp",
        "config",
        "html",
        "series",
        "cssInternal",
        "cssExternal",
        "jsInternal",
        "jsExternal",
        "images",
        "svgSprite",
        "fonts",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;AAIA,SAASA,KAAT,GAAiB;AACbC,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaG,IAAxB,EAA8BF,cAAKG,MAAL,CAAY,MAAZ,CAA9B;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaK,WAAxB,EAAqCJ,cAAKG,MAAL,CAAY,iBAAZ,CAArC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaM,WAAxB,EAAqCL,cAAKG,MAAL,CAAY,iBAAZ,CAArC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaO,UAAxB,EAAoCN,cAAKG,MAAL,CAAY,YAAZ,CAApC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaQ,UAAxB,EAAoCP,cAAKG,MAAL,CAAY,YAAZ,CAApC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaS,MAAxB,EAAgCR,cAAKG,MAAL,CAAY,QAAZ,CAAhC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaU,SAAxB,EAAmCT,cAAKG,MAAL,CAAY,WAAZ,CAAnC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaW,KAAxB,EAA+BV,cAAKG,MAAL,CAAY,OAAZ,CAA/B;AACH;;AAAA;AACDJ,KAAK,CAACY,WAAN,GAAoB,+BAApB;eAEeZ,K",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport config from '../config'\r\n\r\n/*\r\n * Смотрит за изменениями\r\n */\r\n\r\nfunction watch() {\r\n    gulp.watch(config.watch.html, gulp.series('html'));\r\n    gulp.watch(config.watch.cssInternal, gulp.series('postcssInternal'));\r\n    gulp.watch(config.watch.cssExternal, gulp.series('postcssExternal'));\r\n    gulp.watch(config.watch.jsInternal, gulp.series('jsInternal'));\r\n    gulp.watch(config.watch.jsExternal, gulp.series('jsExternal'));\r\n    gulp.watch(config.watch.images, gulp.series('images'));\r\n    gulp.watch(config.watch.svgSprite, gulp.series('spriteSvg'));\r\n    gulp.watch(config.watch.fonts, gulp.series('fonts'));\r\n};\r\nwatch.description = 'Смотрит за изменениями файлов';\r\n\r\nexport default watch;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\clean.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\clean.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\clean.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\clean.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
        "sourceFileName": "clean.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Удаление папки build\r\n */\nfunction clean(done) {\n  (0, _rimraf.default)(_config.default.clean.dest, done);\n}\n\nclean.description = 'Удаляет build директорию';\nvar _default = clean;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFuLmpzIl0sIm5hbWVzIjpbImNsZWFuIiwiZG9uZSIsImNvbmZpZyIsImRlc3QiLCJkZXNjcmlwdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBR0E7OztBQUlBLFNBQVNBLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtBQUNqQix1QkFBT0MsZ0JBQU9GLEtBQVAsQ0FBYUcsSUFBcEIsRUFBMEJGLElBQTFCO0FBQ0g7O0FBQ0RELEtBQUssQ0FBQ0ksV0FBTixHQUFvQiwwQkFBcEI7ZUFFZUosSyIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXEtzZW5tYXJ0XFxrc2VubWFydFxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnXHJcbmltcG9ydCByaW1yYWYgZnJvbSAncmltcmFmJ1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZydcclxuXHJcblxyXG4vKlxyXG4gKiDQo9C00LDQu9C10L3QuNC1INC/0LDQv9C60LggYnVpbGRcclxuICovXHJcblxyXG5mdW5jdGlvbiBjbGVhbihkb25lKSB7XHJcbiAgICByaW1yYWYoY29uZmlnLmNsZWFuLmRlc3QsIGRvbmUpO1xyXG59XHJcbmNsZWFuLmRlc2NyaXB0aW9uID0gJ9Cj0LTQsNC70Y/QtdGCIGJ1aWxkINC00LjRgNC10LrRgtC+0YDQuNGOJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsZWFuOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "clean.js"
      ],
      "names": [
        "clean",
        "done",
        "config",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAGA;;;AAIA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjB,uBAAOC,gBAAOF,KAAP,CAAaG,IAApB,EAA0BF,IAA1B;AACH;;AACDD,KAAK,CAACI,WAAN,GAAoB,0BAApB;eAEeJ,K",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp'\r\nimport rimraf from 'rimraf'\r\nimport config from '../config'\r\n\r\n\r\n/*\r\n * Удаление папки build\r\n */\r\n\r\nfunction clean(done) {\r\n    rimraf(config.clean.dest, done);\r\n}\r\nclean.description = 'Удаляет build директорию';\r\n\r\nexport default clean;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\html.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\html.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\html.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\html.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
        "sourceFileName": "html.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpFileInclude = _interopRequireDefault(require(\"gulp-file-include\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сборка html\r\n */\nfunction html(done) {\n  _browserSync.default.notify('Compiling html');\n\n  return _gulp.default.src(_config.default.html.src).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'HTML',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe(_gulp.default.dest(_config.default.html.dest));\n}\n\nhtml.description = 'Сборка html';\nvar _default = html;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0bWwuanMiXSwibmFtZXMiOlsiaHRtbCIsImRvbmUiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwicHJlZml4IiwiYmFzZXBhdGgiLCJpbmRlbnQiLCJkZXN0IiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxJQUFULENBQWNDLElBQWQsRUFBb0I7QUFDaEJDLHVCQUFZQyxNQUFaLENBQW1CLGdCQUFuQjs7QUFFQSxTQUFPQyxjQUFLQyxHQUFMLENBQVNDLGdCQUFPTixJQUFQLENBQVlLLEdBQXJCLEVBQ0ZFLElBREUsQ0FDRywwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVMLG9CQUFPTSxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxNQUQwQjtBQUVqQ0MsUUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsT0FBTDtBQUFBLEtBQWxCO0FBREosR0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyw4QkFBWTtBQUNkTyxJQUFBQSxNQUFNLEVBQUUsSUFETTtBQUVkQyxJQUFBQSxRQUFRLEVBQUUsT0FGSTtBQUdkQyxJQUFBQSxNQUFNLEVBQUU7QUFITSxHQUFaLENBUEgsRUFZRlQsSUFaRSxDQVlHSCxjQUFLYSxJQUFMLENBQVVYLGdCQUFPTixJQUFQLENBQVlpQixJQUF0QixDQVpILENBQVA7QUFhSDs7QUFDRGpCLElBQUksQ0FBQ2tCLFdBQUwsR0FBbUIsYUFBbkI7ZUFFZWxCLEkiLCJzb3VyY2VSb290IjoiQzpcXHByb2plY3RzXFxteS1wcm9qZWN0XFxLc2VubWFydFxca3Nlbm1hcnRcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgZmlsZWluY2x1ZGUgZnJvbSAnZ3VscC1maWxlLWluY2x1ZGUnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZydcclxuXHJcbi8qXHJcbiAqINCh0LHQvtGA0LrQsCBodG1sXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gaHRtbChkb25lKSB7XHJcbiAgICBicm93c2Vyc3luYy5ub3RpZnkoJ0NvbXBpbGluZyBodG1sJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5odG1sLnNyYylcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSFRNTCcsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShmaWxlaW5jbHVkZSh7XHJcbiAgICAgICAgICAgIHByZWZpeDogJ0BAJyxcclxuICAgICAgICAgICAgYmFzZXBhdGg6ICdAZmlsZScsXHJcbiAgICAgICAgICAgIGluZGVudDogdHJ1ZVxyXG4gICAgICAgIH0pKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChjb25maWcuaHRtbC5kZXN0KSk7XHJcbn1cclxuaHRtbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaHRtbCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBodG1sOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "html.js"
      ],
      "names": [
        "html",
        "done",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "prefix",
        "basepath",
        "indent",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAChBC,uBAAYC,MAAZ,CAAmB,gBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAON,IAAP,CAAYK,GAArB,EACFE,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEL,oBAAOM,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,MAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOG,8BAAY;AACdO,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CAPH,EAYFT,IAZE,CAYGH,cAAKa,IAAL,CAAUX,gBAAON,IAAP,CAAYiB,IAAtB,CAZH,CAAP;AAaH;;AACDjB,IAAI,CAACkB,WAAL,GAAmB,aAAnB;eAEelB,I",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport fileinclude from 'gulp-file-include';\r\nimport config from '../config'\r\n\r\n/*\r\n * Сборка html\r\n */\r\n\r\nfunction html(done) {\r\n    browsersync.notify('Compiling html');\r\n\r\n    return gulp.src(config.html.src)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'HTML',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(gulp.dest(config.html.dest));\r\n}\r\nhtml.description = 'Сборка html';\r\n\r\nexport default html;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\fonts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\fonts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\fonts.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\fonts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
        "sourceFileName": "fonts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Копирование шрифтов\r\n */\nfunction fonts(done) {\n  _gulp.default.src(_config.default.fonts.src).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Fonts',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulp.default.dest(_config.default.fonts.dest));\n\n  done();\n}\n\nfonts.description = 'Копирует шрифты в /build директорию';\nvar _default = fonts;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvbnRzLmpzIl0sIm5hbWVzIjpbImZvbnRzIiwiZG9uZSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwibm90aWZ5Iiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwiZGVzdCIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTs7O0FBS0EsU0FBU0EsS0FBVCxDQUFlQyxJQUFmLEVBQXFCO0FBQ2pCQyxnQkFBS0MsR0FBTCxDQUFTQyxnQkFBT0osS0FBUCxDQUFhRyxHQUF0QixFQUNLRSxJQURMLENBQ1UsMEJBQVE7QUFDVkMsSUFBQUEsWUFBWSxFQUFFQyxvQkFBT0MsT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxhQUFLO0FBQ2pDQyxRQUFBQSxLQUFLLEVBQUUsT0FEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FEVixFQU9LUCxJQVBMLENBT1VILGNBQUtXLElBQUwsQ0FBVVQsZ0JBQU9KLEtBQVAsQ0FBYWEsSUFBdkIsQ0FQVjs7QUFTQVosRUFBQUEsSUFBSTtBQUNQOztBQUNERCxLQUFLLENBQUNjLFdBQU4sR0FBb0IscUNBQXBCO2VBRWVkLEsiLCJzb3VyY2VSb290IjoiQzpcXHByb2plY3RzXFxteS1wcm9qZWN0XFxLc2VubWFydFxca3Nlbm1hcnRcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0JrQvtC/0LjRgNC+0LLQsNC90LjQtSDRiNGA0LjRhNGC0L7QslxyXG4gKi9cclxuXHJcblxyXG5mdW5jdGlvbiBmb250cyhkb25lKSB7XHJcbiAgICBndWxwLnNyYyhjb25maWcuZm9udHMuc3JjKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdGb250cycsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmZvbnRzLmRlc3QpKTtcclxuXHJcbiAgICBkb25lKCk7XHJcbn1cclxuZm9udHMuZGVzY3JpcHRpb24gPSAn0JrQvtC/0LjRgNGD0LXRgiDRiNGA0LjRhNGC0Ysg0LIgL2J1aWxkINC00LjRgNC10LrRgtC+0YDQuNGOJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZvbnRzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "fonts.js"
      ],
      "names": [
        "fonts",
        "done",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "notify",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;;;AAKA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjBC,gBAAKC,GAAL,CAASC,gBAAOJ,KAAP,CAAaG,GAAtB,EACKE,IADL,CACU,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,OAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADV,EAOKP,IAPL,CAOUH,cAAKW,IAAL,CAAUT,gBAAOJ,KAAP,CAAaa,IAAvB,CAPV;;AASAZ,EAAAA,IAAI;AACP;;AACDD,KAAK,CAACc,WAAN,GAAoB,qCAApB;eAEed,K",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport config from '../config'\r\n\r\n/*\r\n * Копирование шрифтов\r\n */\r\n\r\n\r\nfunction fonts(done) {\r\n    gulp.src(config.fonts.src)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Fonts',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gulp.dest(config.fonts.dest));\r\n\r\n    done();\r\n}\r\nfonts.description = 'Копирует шрифты в /build директорию';\r\n\r\nexport default fonts;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\images.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\images.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\images.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\images.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
        "sourceFileName": "images.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpNewer = _interopRequireDefault(require(\"gulp-newer\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сжатие картинок\r\n */\nfunction images(done) {\n  _browserSync.default.notify('Compiling images'); // отключаю оптимизацию картинок для дева\n\n\n  if (_gulpUtil.default.env.env !== 'prod') {\n    return _gulp.default.src(_config.default.images.src).pipe((0, _gulpPlumber.default)({\n      errorHandler: _gulpNotify.default.onError(function (err) {\n        return {\n          title: 'Image dev copy',\n          message: err.toString()\n        };\n      })\n    })).pipe((0, _gulpNewer.default)(_config.default.images.dest)).pipe(_gulp.default.dest(_config.default.images.dest));\n  } else {\n    return _gulp.default.src(_config.default.images.srcProduction).pipe((0, _gulpPlumber.default)({\n      errorHandler: _gulpNotify.default.onError(function (err) {\n        return {\n          title: 'Image optimizer',\n          message: err.toString()\n        };\n      })\n    })).pipe((0, _gulpNewer.default)(_config.default.images.dest)).pipe((0, _gulpImagemin.default)([_gulpImagemin.default.gifsicle({\n      optimizationLevel: 3\n    }), _gulpImagemin.default.jpegtran({\n      quality: 65,\n      progressive: true\n    }), _gulpImagemin.default.optipng({\n      optimizationLevel: 5\n    }), _gulpImagemin.default.svgo({\n      plugins: [{\n        removeViewBox: false\n      }, {\n        convertStyleToAttrs: true\n      }]\n    })])).pipe(_gulp.default.dest(_config.default.images.dest));\n  }\n}\n\nimages.description = 'Оптимизация картинок';\nvar _default = images;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlcy5qcyJdLCJuYW1lcyI6WyJpbWFnZXMiLCJkb25lIiwiYnJvd3NlcnN5bmMiLCJub3RpZnkiLCJndXRpbCIsImVudiIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwiZGVzdCIsInNyY1Byb2R1Y3Rpb24iLCJpbWFnZW1pbiIsImdpZnNpY2xlIiwib3B0aW1pemF0aW9uTGV2ZWwiLCJqcGVndHJhbiIsInF1YWxpdHkiLCJwcm9ncmVzc2l2ZSIsIm9wdGlwbmciLCJzdmdvIiwicGx1Z2lucyIsInJlbW92ZVZpZXdCb3giLCJjb252ZXJ0U3R5bGVUb0F0dHJzIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxNQUFULENBQWdCQyxJQUFoQixFQUFzQjtBQUNsQkMsdUJBQVlDLE1BQVosQ0FBbUIsa0JBQW5CLEVBRGtCLENBRWxCOzs7QUFDQSxNQUFJQyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQXRCLEVBQThCO0FBQzFCLFdBQU9DLGNBQUtDLEdBQUwsQ0FBU0MsZ0JBQU9SLE1BQVAsQ0FBY08sR0FBdkIsRUFDRkUsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLE1BQUFBLFlBQVksRUFBRVAsb0JBQU9RLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsZUFBSztBQUNqQ0MsVUFBQUEsS0FBSyxFQUFFLGdCQUQwQjtBQUVqQ0MsVUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsU0FBTDtBQUFBLE9BQWxCO0FBREosS0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyx3QkFBTUQsZ0JBQU9SLE1BQVAsQ0FBY2dCLElBQXBCLENBUEgsRUFRRlAsSUFSRSxDQVFHSCxjQUFLVSxJQUFMLENBQVVSLGdCQUFPUixNQUFQLENBQWNnQixJQUF4QixDQVJILENBQVA7QUFTSCxHQVZELE1BVU87QUFDSCxXQUFPVixjQUFLQyxHQUFMLENBQVNDLGdCQUFPUixNQUFQLENBQWNpQixhQUF2QixFQUNGUixJQURFLENBQ0csMEJBQVE7QUFDVkMsTUFBQUEsWUFBWSxFQUFFUCxvQkFBT1EsT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxlQUFLO0FBQ2pDQyxVQUFBQSxLQUFLLEVBQUUsaUJBRDBCO0FBRWpDQyxVQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixTQUFMO0FBQUEsT0FBbEI7QUFESixLQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HLHdCQUFNRCxnQkFBT1IsTUFBUCxDQUFjZ0IsSUFBcEIsQ0FQSCxFQVFGUCxJQVJFLENBUUcsMkJBQVMsQ0FDWFMsc0JBQVNDLFFBQVQsQ0FBa0I7QUFDZEMsTUFBQUEsaUJBQWlCLEVBQUU7QUFETCxLQUFsQixDQURXLEVBSVhGLHNCQUFTRyxRQUFULENBQWtCO0FBQ2RDLE1BQUFBLE9BQU8sRUFBRSxFQURLO0FBRWRDLE1BQUFBLFdBQVcsRUFBRTtBQUZDLEtBQWxCLENBSlcsRUFRWEwsc0JBQVNNLE9BQVQsQ0FBaUI7QUFDYkosTUFBQUEsaUJBQWlCLEVBQUU7QUFETixLQUFqQixDQVJXLEVBV1hGLHNCQUFTTyxJQUFULENBQWM7QUFDVkMsTUFBQUEsT0FBTyxFQUFFLENBQ0w7QUFBQ0MsUUFBQUEsYUFBYSxFQUFFO0FBQWhCLE9BREssRUFFTDtBQUFDQyxRQUFBQSxtQkFBbUIsRUFBRTtBQUF0QixPQUZLO0FBREMsS0FBZCxDQVhXLENBQVQsQ0FSSCxFQTBCRm5CLElBMUJFLENBMEJHSCxjQUFLVSxJQUFMLENBQVVSLGdCQUFPUixNQUFQLENBQWNnQixJQUF4QixDQTFCSCxDQUFQO0FBMkJIO0FBQ0o7O0FBQ0RoQixNQUFNLENBQUM2QixXQUFQLEdBQXFCLHNCQUFyQjtlQUVlN0IsTSIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXEtzZW5tYXJ0XFxrc2VubWFydFxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xyXG5pbXBvcnQgZ3V0aWwgZnJvbSAnZ3VscC11dGlsJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgbmV3ZXIgZnJvbSAnZ3VscC1uZXdlcic7XHJcbmltcG9ydCBpbWFnZW1pbiBmcm9tICdndWxwLWltYWdlbWluJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnO1xyXG5cclxuLypcclxuICog0KHQttCw0YLQuNC1INC60LDRgNGC0LjQvdC+0LpcclxuICovXHJcblxyXG5mdW5jdGlvbiBpbWFnZXMoZG9uZSkge1xyXG4gICAgYnJvd3NlcnN5bmMubm90aWZ5KCdDb21waWxpbmcgaW1hZ2VzJyk7XHJcbiAgICAvLyDQvtGC0LrQu9GO0YfQsNGOINC+0L/RgtC40LzQuNC30LDRhtC40Y4g0LrQsNGA0YLQuNC90L7QuiDQtNC70Y8g0LTQtdCy0LBcclxuICAgIGlmIChndXRpbC5lbnYuZW52ICE9PSAncHJvZCcpIHtcclxuICAgICAgICByZXR1cm4gZ3VscC5zcmMoY29uZmlnLmltYWdlcy5zcmMpXHJcbiAgICAgICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0ltYWdlIGRldiBjb3B5JyxcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICAucGlwZShuZXdlcihjb25maWcuaW1hZ2VzLmRlc3QpKVxyXG4gICAgICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmltYWdlcy5kZXN0KSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBndWxwLnNyYyhjb25maWcuaW1hZ2VzLnNyY1Byb2R1Y3Rpb24pXHJcbiAgICAgICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0ltYWdlIG9wdGltaXplcicsXHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICAgICAgLnBpcGUobmV3ZXIoY29uZmlnLmltYWdlcy5kZXN0KSlcclxuICAgICAgICAgICAgLnBpcGUoaW1hZ2VtaW4oW1xyXG4gICAgICAgICAgICAgICAgaW1hZ2VtaW4uZ2lmc2ljbGUoe1xyXG4gICAgICAgICAgICAgICAgICAgIG9wdGltaXphdGlvbkxldmVsOiAzXHJcbiAgICAgICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgICAgIGltYWdlbWluLmpwZWd0cmFuKHtcclxuICAgICAgICAgICAgICAgICAgICBxdWFsaXR5OiA2NSxcclxuICAgICAgICAgICAgICAgICAgICBwcm9ncmVzc2l2ZTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICAgICBpbWFnZW1pbi5vcHRpcG5nKHtcclxuICAgICAgICAgICAgICAgICAgICBvcHRpbWl6YXRpb25MZXZlbDogNVxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICAgICBpbWFnZW1pbi5zdmdvKHtcclxuICAgICAgICAgICAgICAgICAgICBwbHVnaW5zOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtyZW1vdmVWaWV3Qm94OiBmYWxzZX0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtjb252ZXJ0U3R5bGVUb0F0dHJzOiB0cnVlfVxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIF0pKVxyXG4gICAgICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmltYWdlcy5kZXN0KSk7XHJcbiAgICB9XHJcbn1cclxuaW1hZ2VzLmRlc2NyaXB0aW9uID0gJ9Ce0L/RgtC40LzQuNC30LDRhtC40Y8g0LrQsNGA0YLQuNC90L7Quic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBpbWFnZXM7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "images.js"
      ],
      "names": [
        "images",
        "done",
        "browsersync",
        "notify",
        "gutil",
        "env",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "dest",
        "srcProduction",
        "imagemin",
        "gifsicle",
        "optimizationLevel",
        "jpegtran",
        "quality",
        "progressive",
        "optipng",
        "svgo",
        "plugins",
        "removeViewBox",
        "convertStyleToAttrs",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AAClBC,uBAAYC,MAAZ,CAAmB,kBAAnB,EADkB,CAElB;;;AACA,MAAIC,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAtB,EAA8B;AAC1B,WAAOC,cAAKC,GAAL,CAASC,gBAAOR,MAAP,CAAcO,GAAvB,EACFE,IADE,CACG,0BAAQ;AACVC,MAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,eAAK;AACjCC,UAAAA,KAAK,EAAE,gBAD0B;AAEjCC,UAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,SAAL;AAAA,OAAlB;AADJ,KAAR,CADH,EAOFN,IAPE,CAOG,wBAAMD,gBAAOR,MAAP,CAAcgB,IAApB,CAPH,EAQFP,IARE,CAQGH,cAAKU,IAAL,CAAUR,gBAAOR,MAAP,CAAcgB,IAAxB,CARH,CAAP;AASH,GAVD,MAUO;AACH,WAAOV,cAAKC,GAAL,CAASC,gBAAOR,MAAP,CAAciB,aAAvB,EACFR,IADE,CACG,0BAAQ;AACVC,MAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,eAAK;AACjCC,UAAAA,KAAK,EAAE,iBAD0B;AAEjCC,UAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,SAAL;AAAA,OAAlB;AADJ,KAAR,CADH,EAOFN,IAPE,CAOG,wBAAMD,gBAAOR,MAAP,CAAcgB,IAApB,CAPH,EAQFP,IARE,CAQG,2BAAS,CACXS,sBAASC,QAAT,CAAkB;AACdC,MAAAA,iBAAiB,EAAE;AADL,KAAlB,CADW,EAIXF,sBAASG,QAAT,CAAkB;AACdC,MAAAA,OAAO,EAAE,EADK;AAEdC,MAAAA,WAAW,EAAE;AAFC,KAAlB,CAJW,EAQXL,sBAASM,OAAT,CAAiB;AACbJ,MAAAA,iBAAiB,EAAE;AADN,KAAjB,CARW,EAWXF,sBAASO,IAAT,CAAc;AACVC,MAAAA,OAAO,EAAE,CACL;AAACC,QAAAA,aAAa,EAAE;AAAhB,OADK,EAEL;AAACC,QAAAA,mBAAmB,EAAE;AAAtB,OAFK;AADC,KAAd,CAXW,CAAT,CARH,EA0BFnB,IA1BE,CA0BGH,cAAKU,IAAL,CAAUR,gBAAOR,MAAP,CAAcgB,IAAxB,CA1BH,CAAP;AA2BH;AACJ;;AACDhB,MAAM,CAAC6B,WAAP,GAAqB,sBAArB;eAEe7B,M",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport newer from 'gulp-newer';\r\nimport imagemin from 'gulp-imagemin';\r\nimport config from '../config';\r\n\r\n/*\r\n * Сжатие картинок\r\n */\r\n\r\nfunction images(done) {\r\n    browsersync.notify('Compiling images');\r\n    // отключаю оптимизацию картинок для дева\r\n    if (gutil.env.env !== 'prod') {\r\n        return gulp.src(config.images.src)\r\n            .pipe(plumber({\r\n                errorHandler: notify.onError(err => ({\r\n                    title: 'Image dev copy',\r\n                    message: err.toString()\r\n                }))\r\n            }))\r\n            .pipe(newer(config.images.dest))\r\n            .pipe(gulp.dest(config.images.dest));\r\n    } else {\r\n        return gulp.src(config.images.srcProduction)\r\n            .pipe(plumber({\r\n                errorHandler: notify.onError(err => ({\r\n                    title: 'Image optimizer',\r\n                    message: err.toString()\r\n                }))\r\n            }))\r\n            .pipe(newer(config.images.dest))\r\n            .pipe(imagemin([\r\n                imagemin.gifsicle({\r\n                    optimizationLevel: 3\r\n                }),\r\n                imagemin.jpegtran({\r\n                    quality: 65,\r\n                    progressive: true\r\n                }),\r\n                imagemin.optipng({\r\n                    optimizationLevel: 5\r\n                }),\r\n                imagemin.svgo({\r\n                    plugins: [\r\n                        {removeViewBox: false},\r\n                        {convertStyleToAttrs: true}\r\n                    ]\r\n                })\r\n            ]))\r\n            .pipe(gulp.dest(config.images.dest));\r\n    }\r\n}\r\nimages.description = 'Оптимизация картинок';\r\n\r\nexport default images;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\sprite_svg.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\sprite_svg.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\sprite_svg.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\sprite_svg.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
        "sourceFileName": "sprite_svg.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanSvgSprite = cleanSvgSprite;\nexports.generateSvgSprite = generateSvgSprite;\nexports.copySvgSprite = copySvgSprite;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _gulpSvgSprites = _interopRequireDefault(require(\"gulp-svg-sprites\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Удаляет svg спрайт /src/img/svg/sprite.svg\r\n */\nfunction cleanSvgSprite(done) {\n  (0, _rimraf.default)(_config.default.svg.generated, done);\n}\n\n;\ncleanSvgSprite.description = 'Удаляет svg спрайт';\n/*\r\n * Генрит svg спрайт из файлов /src/img/svg/sprite/*.svg\r\n */\n\nfunction generateSvgSprite(done) {\n  return _gulp.default.src(_config.default.svg.sprite).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Svg sprite',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpSvgSprites.default)({\n    mode: 'symbols',\n    selector: 'icon-%f',\n    cssFile: false,\n    svg: {\n      sprite: 'sprite.svg',\n      symbols: 'sprite.svg'\n    },\n    preview: false\n  })).pipe(_gulp.default.dest(_config.default.svg.spriteGenerateDest));\n}\n\n;\ngenerateSvgSprite.description = 'Создает svg спрайт';\n\nfunction copySvgSprite(done) {\n  _gulp.default.src(_config.default.svg.generated).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Copy svg sprite',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulp.default.dest(_config.default.svg.spriteDest));\n\n  done();\n}\n\n;\ncopySvgSprite.description = 'Копирует svg спрайт в /build директорию';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwcml0ZV9zdmcuanMiXSwibmFtZXMiOlsiY2xlYW5TdmdTcHJpdGUiLCJkb25lIiwiY29uZmlnIiwic3ZnIiwiZ2VuZXJhdGVkIiwiZGVzY3JpcHRpb24iLCJnZW5lcmF0ZVN2Z1Nwcml0ZSIsImd1bHAiLCJzcmMiLCJzcHJpdGUiLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwibm90aWZ5Iiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwibW9kZSIsInNlbGVjdG9yIiwiY3NzRmlsZSIsInN5bWJvbHMiLCJwcmV2aWV3IiwiZGVzdCIsInNwcml0ZUdlbmVyYXRlRGVzdCIsImNvcHlTdmdTcHJpdGUiLCJzcHJpdGVEZXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBOzs7QUFJTyxTQUFTQSxjQUFULENBQXdCQyxJQUF4QixFQUE4QjtBQUNqQyx1QkFBT0MsZ0JBQU9DLEdBQVAsQ0FBV0MsU0FBbEIsRUFBNkJILElBQTdCO0FBQ0g7O0FBQUE7QUFDREQsY0FBYyxDQUFDSyxXQUFmLEdBQTZCLG9CQUE3QjtBQUVBOzs7O0FBSU8sU0FBU0MsaUJBQVQsQ0FBMkJMLElBQTNCLEVBQWlDO0FBQ3BDLFNBQU9NLGNBQUtDLEdBQUwsQ0FBU04sZ0JBQU9DLEdBQVAsQ0FBV00sTUFBcEIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRUMsb0JBQU9DLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLFlBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRlAsSUFQRSxDQU9HLDZCQUFVO0FBQ1pRLElBQUFBLElBQUksRUFBRSxTQURNO0FBRVpDLElBQUFBLFFBQVEsRUFBRSxTQUZFO0FBR1pDLElBQUFBLE9BQU8sRUFBRSxLQUhHO0FBSVpqQixJQUFBQSxHQUFHLEVBQUU7QUFDRE0sTUFBQUEsTUFBTSxFQUFFLFlBRFA7QUFFRFksTUFBQUEsT0FBTyxFQUFFO0FBRlIsS0FKTztBQVFaQyxJQUFBQSxPQUFPLEVBQUU7QUFSRyxHQUFWLENBUEgsRUFpQkZaLElBakJFLENBaUJHSCxjQUFLZ0IsSUFBTCxDQUFVckIsZ0JBQU9DLEdBQVAsQ0FBV3FCLGtCQUFyQixDQWpCSCxDQUFQO0FBa0JIOztBQUFBO0FBQ0RsQixpQkFBaUIsQ0FBQ0QsV0FBbEIsR0FBZ0Msb0JBQWhDOztBQUdPLFNBQVNvQixhQUFULENBQXVCeEIsSUFBdkIsRUFBNkI7QUFDaENNLGdCQUFLQyxHQUFMLENBQVNOLGdCQUFPQyxHQUFQLENBQVdDLFNBQXBCLEVBQ0tNLElBREwsQ0FDVSwwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVDLG9CQUFPQyxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxpQkFEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FEVixFQU9LUCxJQVBMLENBT1VILGNBQUtnQixJQUFMLENBQVVyQixnQkFBT0MsR0FBUCxDQUFXdUIsVUFBckIsQ0FQVjs7QUFTQXpCLEVBQUFBLElBQUk7QUFDUDs7QUFBQTtBQUNEd0IsYUFBYSxDQUFDcEIsV0FBZCxHQUE0Qix5Q0FBNUIiLCJzb3VyY2VSb290IjoiQzpcXHByb2plY3RzXFxteS1wcm9qZWN0XFxLc2VubWFydFxca3Nlbm1hcnRcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCByaW1yYWYgZnJvbSAncmltcmFmJztcclxuaW1wb3J0IHN2Z1Nwcml0ZSBmcm9tICdndWxwLXN2Zy1zcHJpdGVzJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnXHJcblxyXG5cclxuLypcclxuICog0KPQtNCw0LvRj9C10YIgc3ZnINGB0L/RgNCw0LnRgiAvc3JjL2ltZy9zdmcvc3ByaXRlLnN2Z1xyXG4gKi9cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjbGVhblN2Z1Nwcml0ZShkb25lKSB7XHJcbiAgICByaW1yYWYoY29uZmlnLnN2Zy5nZW5lcmF0ZWQsIGRvbmUpO1xyXG59O1xyXG5jbGVhblN2Z1Nwcml0ZS5kZXNjcmlwdGlvbiA9ICfQo9C00LDQu9GP0LXRgiBzdmcg0YHQv9GA0LDQudGCJztcclxuXHJcbi8qXHJcbiAqINCT0LXQvdGA0LjRgiBzdmcg0YHQv9GA0LDQudGCINC40Lcg0YTQsNC50LvQvtCyIC9zcmMvaW1nL3N2Zy9zcHJpdGUvKi5zdmdcclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTdmdTcHJpdGUoZG9uZSkge1xyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5zdmcuc3ByaXRlKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdTdmcgc3ByaXRlJyxcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVyci50b1N0cmluZygpXHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgIH0pKVxyXG4gICAgICAgIC5waXBlKHN2Z1Nwcml0ZSh7XHJcbiAgICAgICAgICAgIG1vZGU6ICdzeW1ib2xzJyxcclxuICAgICAgICAgICAgc2VsZWN0b3I6ICdpY29uLSVmJyxcclxuICAgICAgICAgICAgY3NzRmlsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHN2Zzoge1xyXG4gICAgICAgICAgICAgICAgc3ByaXRlOiAnc3ByaXRlLnN2ZycsXHJcbiAgICAgICAgICAgICAgICBzeW1ib2xzOiAnc3ByaXRlLnN2ZydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcHJldmlldzogZmFsc2VcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLnN2Zy5zcHJpdGVHZW5lcmF0ZURlc3QpKTtcclxufTtcclxuZ2VuZXJhdGVTdmdTcHJpdGUuZGVzY3JpcHRpb24gPSAn0KHQvtC30LTQsNC10YIgc3ZnINGB0L/RgNCw0LnRgic7XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvcHlTdmdTcHJpdGUoZG9uZSkge1xyXG4gICAgZ3VscC5zcmMoY29uZmlnLnN2Zy5nZW5lcmF0ZWQpXHJcbiAgICAgICAgLnBpcGUocGx1bWJlcih7XHJcbiAgICAgICAgICAgIGVycm9ySGFuZGxlcjogbm90aWZ5Lm9uRXJyb3IoZXJyID0+ICh7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0NvcHkgc3ZnIHNwcml0ZScsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLnN2Zy5zcHJpdGVEZXN0KSk7XHJcblxyXG4gICAgZG9uZSgpO1xyXG59O1xyXG5jb3B5U3ZnU3ByaXRlLmRlc2NyaXB0aW9uID0gJ9Ca0L7Qv9C40YDRg9C10YIgc3ZnINGB0L/RgNCw0LnRgiDQsiAvYnVpbGQg0LTQuNGA0LXQutGC0L7RgNC40Y4nOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "sprite_svg.js"
      ],
      "names": [
        "cleanSvgSprite",
        "done",
        "config",
        "svg",
        "generated",
        "description",
        "generateSvgSprite",
        "gulp",
        "src",
        "sprite",
        "pipe",
        "errorHandler",
        "notify",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "mode",
        "selector",
        "cssFile",
        "symbols",
        "preview",
        "dest",
        "spriteGenerateDest",
        "copySvgSprite",
        "spriteDest"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGA;;;AAIO,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,uBAAOC,gBAAOC,GAAP,CAAWC,SAAlB,EAA6BH,IAA7B;AACH;;AAAA;AACDD,cAAc,CAACK,WAAf,GAA6B,oBAA7B;AAEA;;;;AAIO,SAASC,iBAAT,CAA2BL,IAA3B,EAAiC;AACpC,SAAOM,cAAKC,GAAL,CAASN,gBAAOC,GAAP,CAAWM,MAApB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,YAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFP,IAPE,CAOG,6BAAU;AACZQ,IAAAA,IAAI,EAAE,SADM;AAEZC,IAAAA,QAAQ,EAAE,SAFE;AAGZC,IAAAA,OAAO,EAAE,KAHG;AAIZjB,IAAAA,GAAG,EAAE;AACDM,MAAAA,MAAM,EAAE,YADP;AAEDY,MAAAA,OAAO,EAAE;AAFR,KAJO;AAQZC,IAAAA,OAAO,EAAE;AARG,GAAV,CAPH,EAiBFZ,IAjBE,CAiBGH,cAAKgB,IAAL,CAAUrB,gBAAOC,GAAP,CAAWqB,kBAArB,CAjBH,CAAP;AAkBH;;AAAA;AACDlB,iBAAiB,CAACD,WAAlB,GAAgC,oBAAhC;;AAGO,SAASoB,aAAT,CAAuBxB,IAAvB,EAA6B;AAChCM,gBAAKC,GAAL,CAASN,gBAAOC,GAAP,CAAWC,SAApB,EACKM,IADL,CACU,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,iBAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADV,EAOKP,IAPL,CAOUH,cAAKgB,IAAL,CAAUrB,gBAAOC,GAAP,CAAWuB,UAArB,CAPV;;AASAzB,EAAAA,IAAI;AACP;;AAAA;AACDwB,aAAa,CAACpB,WAAd,GAA4B,yCAA5B",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport rimraf from 'rimraf';\r\nimport svgSprite from 'gulp-svg-sprites';\r\nimport config from '../config'\r\n\r\n\r\n/*\r\n * Удаляет svg спрайт /src/img/svg/sprite.svg\r\n */\r\n\r\nexport function cleanSvgSprite(done) {\r\n    rimraf(config.svg.generated, done);\r\n};\r\ncleanSvgSprite.description = 'Удаляет svg спрайт';\r\n\r\n/*\r\n * Генрит svg спрайт из файлов /src/img/svg/sprite/*.svg\r\n */\r\n\r\nexport function generateSvgSprite(done) {\r\n    return gulp.src(config.svg.sprite)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Svg sprite',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(svgSprite({\r\n            mode: 'symbols',\r\n            selector: 'icon-%f',\r\n            cssFile: false,\r\n            svg: {\r\n                sprite: 'sprite.svg',\r\n                symbols: 'sprite.svg'\r\n            },\r\n            preview: false\r\n        }))\r\n        .pipe(gulp.dest(config.svg.spriteGenerateDest));\r\n};\r\ngenerateSvgSprite.description = 'Создает svg спрайт';\r\n\r\n\r\nexport function copySvgSprite(done) {\r\n    gulp.src(config.svg.generated)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Copy svg sprite',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gulp.dest(config.svg.spriteDest));\r\n\r\n    done();\r\n};\r\ncopySvgSprite.description = 'Копирует svg спрайт в /build директорию';"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\js.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\js.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\js.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\js.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
        "sourceFileName": "js.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.jsInternal = jsInternal;\nexports.jsExternal = jsExternal;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpFileInclude = _interopRequireDefault(require(\"gulp-file-include\"));\n\nvar _gulpUglify = _interopRequireDefault(require(\"gulp-uglify\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сборка js\r\n * Минификация\r\n */\nfunction jsInternal() {\n  _browserSync.default.notify('Compiling js internal');\n\n  return _gulp.default.src(_config.default.js.srcInternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'JS internal',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe((0, _gulpBabel.default)()).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpUglify.default)(_config.default.uglify) : _gulpUtil.default.noop()).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write()).pipe(_gulp.default.dest(_config.default.js.dest));\n}\n\njsInternal.description = 'Сборка internal js';\n\nfunction jsExternal() {\n  _browserSync.default.notify('Compiling js external');\n\n  return _gulp.default.src(_config.default.js.srcExternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'JS external',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpUglify.default)() : _gulpUtil.default.noop()).pipe(_gulp.default.dest(_config.default.js.dest));\n}\n\njsExternal.description = 'Сборка external js';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzLmpzIl0sIm5hbWVzIjpbImpzSW50ZXJuYWwiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJqcyIsInNyY0ludGVybmFsIiwicGlwZSIsImVycm9ySGFuZGxlciIsIm9uRXJyb3IiLCJlcnIiLCJ0aXRsZSIsIm1lc3NhZ2UiLCJ0b1N0cmluZyIsImd1dGlsIiwiZW52Iiwibm9vcCIsInNvdXJjZW1hcHMiLCJpbml0IiwicHJlZml4IiwiYmFzZXBhdGgiLCJpbmRlbnQiLCJ1Z2xpZnkiLCJ3cml0ZSIsImRlc3QiLCJkZXNjcmlwdGlvbiIsImpzRXh0ZXJuYWwiLCJzcmNFeHRlcm5hbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7O0FBS08sU0FBU0EsVUFBVCxHQUFzQjtBQUN6QkMsdUJBQVlDLE1BQVosQ0FBbUIsdUJBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU0MsZ0JBQU9DLEVBQVAsQ0FBVUMsV0FBbkIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRVAsb0JBQU9RLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLGFBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCRCxrQkFBTUUsSUFBTixFQUEzQixHQUEwQ0Msd0JBQVdDLElBQVgsRUFQN0MsRUFRRlgsSUFSRSxDQVFHLDhCQUFZO0FBQ2RZLElBQUFBLE1BQU0sRUFBRSxJQURNO0FBRWRDLElBQUFBLFFBQVEsRUFBRSxPQUZJO0FBR2RDLElBQUFBLE1BQU0sRUFBRTtBQUhNLEdBQVosQ0FSSCxFQWFGZCxJQWJFLENBYUcseUJBYkgsRUFjRkEsSUFkRSxDQWNHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLHlCQUFPWCxnQkFBT2tCLE1BQWQsQ0FBM0IsR0FBbURSLGtCQUFNRSxJQUFOLEVBZHRELEVBZUZULElBZkUsQ0FlR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQkQsa0JBQU1FLElBQU4sRUFBM0IsR0FBMENDLHdCQUFXTSxLQUFYLEVBZjdDLEVBZ0JGaEIsSUFoQkUsQ0FnQkdMLGNBQUtzQixJQUFMLENBQVVwQixnQkFBT0MsRUFBUCxDQUFVbUIsSUFBcEIsQ0FoQkgsQ0FBUDtBQWlCSDs7QUFDRHpCLFVBQVUsQ0FBQzBCLFdBQVgsR0FBeUIsb0JBQXpCOztBQUlPLFNBQVNDLFVBQVQsR0FBc0I7QUFDekIxQix1QkFBWUMsTUFBWixDQUFtQix1QkFBbkI7O0FBRUEsU0FBT0MsY0FBS0MsR0FBTCxDQUFTQyxnQkFBT0MsRUFBUCxDQUFVc0IsV0FBbkIsRUFDRnBCLElBREUsQ0FDRywwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVQLG9CQUFPUSxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxhQUQwQjtBQUVqQ0MsUUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsT0FBTDtBQUFBLEtBQWxCO0FBREosR0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyw4QkFBWTtBQUNkWSxJQUFBQSxNQUFNLEVBQUUsSUFETTtBQUVkQyxJQUFBQSxRQUFRLEVBQUUsT0FGSTtBQUdkQyxJQUFBQSxNQUFNLEVBQUU7QUFITSxHQUFaLENBUEgsRUFZRmQsSUFaRSxDQVlHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLDBCQUEzQixHQUFzQ0Qsa0JBQU1FLElBQU4sRUFaekMsRUFhRlQsSUFiRSxDQWFHTCxjQUFLc0IsSUFBTCxDQUFVcEIsZ0JBQU9DLEVBQVAsQ0FBVW1CLElBQXBCLENBYkgsQ0FBUDtBQWNIOztBQUNERSxVQUFVLENBQUNELFdBQVgsR0FBeUIsb0JBQXpCIiwic291cmNlUm9vdCI6IkM6XFxwcm9qZWN0c1xcbXktcHJvamVjdFxcS3Nlbm1hcnRcXGtzZW5tYXJ0XFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBiYWJlbCBmcm9tICdndWxwLWJhYmVsJztcclxuaW1wb3J0IGd1dGlsIGZyb20gJ2d1bHAtdXRpbCc7XHJcbmltcG9ydCBwbHVtYmVyIGZyb20gJ2d1bHAtcGx1bWJlcic7XHJcbmltcG9ydCBub3RpZnkgZnJvbSAnZ3VscC1ub3RpZnknO1xyXG5pbXBvcnQgYnJvd3NlcnN5bmMgZnJvbSAnYnJvd3Nlci1zeW5jJztcclxuaW1wb3J0IGZpbGVpbmNsdWRlIGZyb20gJ2d1bHAtZmlsZS1pbmNsdWRlJztcclxuaW1wb3J0IHVnbGlmeSBmcm9tICdndWxwLXVnbGlmeSc7XHJcbmltcG9ydCBzb3VyY2VtYXBzIGZyb20gJ2d1bHAtc291cmNlbWFwcyc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0KHQsdC+0YDQutCwIGpzXHJcbiAqINCc0LjQvdC40YTQuNC60LDRhtC40Y9cclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24ganNJbnRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIGpzIGludGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5qcy5zcmNJbnRlcm5hbClcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSlMgaW50ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy5pbml0KCkpXHJcbiAgICAgICAgLnBpcGUoZmlsZWluY2x1ZGUoe1xyXG4gICAgICAgICAgICBwcmVmaXg6ICdAQCcsXHJcbiAgICAgICAgICAgIGJhc2VwYXRoOiAnQGZpbGUnLFxyXG4gICAgICAgICAgICBpbmRlbnQ6IHRydWVcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShiYWJlbCgpKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IHVnbGlmeShjb25maWcudWdsaWZ5KSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndXRpbC5ub29wKCkgOiBzb3VyY2VtYXBzLndyaXRlKCkpXHJcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KGNvbmZpZy5qcy5kZXN0KSk7XHJcbn1cclxuanNJbnRlcm5hbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaW50ZXJuYWwganMnO1xyXG5cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24ganNFeHRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIGpzIGV4dGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5qcy5zcmNFeHRlcm5hbClcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSlMgZXh0ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZmlsZWluY2x1ZGUoe1xyXG4gICAgICAgICAgICBwcmVmaXg6ICdAQCcsXHJcbiAgICAgICAgICAgIGJhc2VwYXRoOiAnQGZpbGUnLFxyXG4gICAgICAgICAgICBpbmRlbnQ6IHRydWVcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyB1Z2xpZnkoKSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmpzLmRlc3QpKTtcclxufVxyXG5qc0V4dGVybmFsLmRlc2NyaXB0aW9uID0gJ9Ch0LHQvtGA0LrQsCBleHRlcm5hbCBqcyc7Il19",
    "map": {
      "version": 3,
      "sources": [
        "js.js"
      ],
      "names": [
        "jsInternal",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "config",
        "js",
        "srcInternal",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "gutil",
        "env",
        "noop",
        "sourcemaps",
        "init",
        "prefix",
        "basepath",
        "indent",
        "uglify",
        "write",
        "dest",
        "description",
        "jsExternal",
        "srcExternal"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;AAKO,SAASA,UAAT,GAAsB;AACzBC,uBAAYC,MAAZ,CAAmB,uBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAOC,EAAP,CAAUC,WAAnB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,aAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,8BAAY;AACdY,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CARH,EAaFd,IAbE,CAaG,yBAbH,EAcFA,IAdE,CAcGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,yBAAOX,gBAAOkB,MAAd,CAA3B,GAAmDR,kBAAME,IAAN,EAdtD,EAeFT,IAfE,CAeGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWM,KAAX,EAf7C,EAgBFhB,IAhBE,CAgBGL,cAAKsB,IAAL,CAAUpB,gBAAOC,EAAP,CAAUmB,IAApB,CAhBH,CAAP;AAiBH;;AACDzB,UAAU,CAAC0B,WAAX,GAAyB,oBAAzB;;AAIO,SAASC,UAAT,GAAsB;AACzB1B,uBAAYC,MAAZ,CAAmB,uBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAOC,EAAP,CAAUsB,WAAnB,EACFpB,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,aAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOG,8BAAY;AACdY,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CAPH,EAYFd,IAZE,CAYGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAA3B,GAAsCD,kBAAME,IAAN,EAZzC,EAaFT,IAbE,CAaGL,cAAKsB,IAAL,CAAUpB,gBAAOC,EAAP,CAAUmB,IAApB,CAbH,CAAP;AAcH;;AACDE,UAAU,CAACD,WAAX,GAAyB,oBAAzB",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport babel from 'gulp-babel';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport fileinclude from 'gulp-file-include';\r\nimport uglify from 'gulp-uglify';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport config from '../config'\r\n\r\n/*\r\n * Сборка js\r\n * Минификация\r\n */\r\n\r\nexport function jsInternal() {\r\n    browsersync.notify('Compiling js internal');\r\n\r\n    return gulp.src(config.js.srcInternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'JS internal',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(babel())\r\n        .pipe(gutil.env.env === 'prod' ? uglify(config.uglify) : gutil.noop())\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write())\r\n        .pipe(gulp.dest(config.js.dest));\r\n}\r\njsInternal.description = 'Сборка internal js';\r\n\r\n\r\n\r\nexport function jsExternal() {\r\n    browsersync.notify('Compiling js external');\r\n\r\n    return gulp.src(config.js.srcExternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'JS external',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? uglify() : gutil.noop())\r\n        .pipe(gulp.dest(config.js.dest));\r\n}\r\njsExternal.description = 'Сборка external js';"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\\\\gulp\\\\tasks\\\\postcss.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\ksenmart\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\postcss.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\ksenmart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\postcss.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\postcss.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
        "sourceFileName": "postcss.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postcssInternal = postcssInternal;\nexports.postcssExternal = postcssExternal;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpRename = _interopRequireDefault(require(\"gulp-rename\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpCssnano = _interopRequireDefault(require(\"gulp-cssnano\"));\n\nvar _postcssInlineSvg = _interopRequireDefault(require(\"postcss-inline-svg\"));\n\nvar _postcssImport = _interopRequireDefault(require(\"postcss-import\"));\n\nvar _precss = _interopRequireDefault(require(\"precss\"));\n\nvar _postcssSassyMixins = _interopRequireDefault(require(\"postcss-sassy-mixins\"));\n\nvar _lost = _interopRequireDefault(require(\"lost\"));\n\nvar _postcssCssnext = _interopRequireDefault(require(\"postcss-cssnext\"));\n\nvar _postcssPxtorem = _interopRequireDefault(require(\"postcss-pxtorem\"));\n\nvar _postcssHexrgba = _interopRequireDefault(require(\"postcss-hexrgba\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Компиляция POSTCSS в CSS\r\n * Создание sourcemaps\r\n * Минификация\r\n */\nvar processors = [(0, _postcssImport.default)(), (0, _postcssSassyMixins.default)(), (0, _precss.default)(), (0, _lost.default)(), (0, _postcssPxtorem.default)(), (0, _postcssHexrgba.default)(), (0, _postcssInlineSvg.default)(_config.default.svg.svgInStyle), (0, _postcssCssnext.default)()];\n\nfunction postcssInternal() {\n  _browserSync.default.notify('Compiling CSS internal');\n\n  return _gulp.default.src(_config.default.css.srcInternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'CSS internal',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpPostcss.default)(processors)).pipe((0, _gulpAutoprefixer.default)()).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpCssnano.default)(_config.default.cssnano) : _gulpUtil.default.noop()).pipe((0, _gulpRename.default)({\n    extname: '.css'\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write('.')).pipe(_gulp.default.dest(_config.default.css.dest));\n}\n\n;\npostcssInternal.description = 'Сборка internal css';\n\nfunction postcssExternal() {\n  _browserSync.default.notify('Compiling CSS external');\n\n  return _gulp.default.src(_config.default.css.srcExternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'CSS external',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpPostcss.default)([(0, _postcssImport.default)()])).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpCssnano.default)(_config.default.cssnano) : _gulpUtil.default.noop()).pipe((0, _gulpRename.default)({\n    extname: '.css'\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write('.')).pipe(_gulp.default.dest(_config.default.css.dest));\n}\n\n;\npostcssExternal.description = 'Сборка external css';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3Rjc3MuanMiXSwibmFtZXMiOlsicHJvY2Vzc29ycyIsImNvbmZpZyIsInN2ZyIsInN2Z0luU3R5bGUiLCJwb3N0Y3NzSW50ZXJuYWwiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjc3MiLCJzcmNJbnRlcm5hbCIsInBpcGUiLCJlcnJvckhhbmRsZXIiLCJvbkVycm9yIiwiZXJyIiwidGl0bGUiLCJtZXNzYWdlIiwidG9TdHJpbmciLCJndXRpbCIsImVudiIsIm5vb3AiLCJzb3VyY2VtYXBzIiwiaW5pdCIsImNzc25hbm8iLCJleHRuYW1lIiwid3JpdGUiLCJkZXN0IiwiZGVzY3JpcHRpb24iLCJwb3N0Y3NzRXh0ZXJuYWwiLCJzcmNFeHRlcm5hbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7OztBQU1BLElBQU1BLFVBQVUsR0FBRyxDQUNmLDZCQURlLEVBRWYsa0NBRmUsRUFHZixzQkFIZSxFQUlmLG9CQUplLEVBS2YsOEJBTGUsRUFNZiw4QkFOZSxFQU9mLCtCQUFVQyxnQkFBT0MsR0FBUCxDQUFXQyxVQUFyQixDQVBlLEVBUWYsOEJBUmUsQ0FBbkI7O0FBYU8sU0FBU0MsZUFBVCxHQUEyQjtBQUM5QkMsdUJBQVlDLE1BQVosQ0FBbUIsd0JBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU1AsZ0JBQU9RLEdBQVAsQ0FBV0MsV0FBcEIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRU4sb0JBQU9PLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLGNBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCRCxrQkFBTUUsSUFBTixFQUEzQixHQUEwQ0Msd0JBQVdDLElBQVgsRUFQN0MsRUFRRlgsSUFSRSxDQVFHLDBCQUFZWCxVQUFaLENBUkgsRUFTRlcsSUFURSxDQVNHLGdDQVRILEVBVUZBLElBVkUsQ0FVR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQiwwQkFBUWxCLGdCQUFPc0IsT0FBZixDQUEzQixHQUFxREwsa0JBQU1FLElBQU4sRUFWeEQsRUFXRlQsSUFYRSxDQVdHLHlCQUFPO0FBQUNhLElBQUFBLE9BQU8sRUFBRTtBQUFWLEdBQVAsQ0FYSCxFQVlGYixJQVpFLENBWUdPLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJELGtCQUFNRSxJQUFOLEVBQTNCLEdBQTBDQyx3QkFBV0ksS0FBWCxDQUFpQixHQUFqQixDQVo3QyxFQWFGZCxJQWJFLENBYUdKLGNBQUttQixJQUFMLENBQVV6QixnQkFBT1EsR0FBUCxDQUFXaUIsSUFBckIsQ0FiSCxDQUFQO0FBY0g7O0FBQUE7QUFDRHRCLGVBQWUsQ0FBQ3VCLFdBQWhCLEdBQThCLHFCQUE5Qjs7QUFHTyxTQUFTQyxlQUFULEdBQTJCO0FBQzlCdkIsdUJBQVlDLE1BQVosQ0FBbUIsd0JBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU1AsZ0JBQU9RLEdBQVAsQ0FBV29CLFdBQXBCLEVBQ0ZsQixJQURFLENBQ0csMEJBQVE7QUFDVkMsSUFBQUEsWUFBWSxFQUFFTixvQkFBT08sT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxhQUFLO0FBQ2pDQyxRQUFBQSxLQUFLLEVBQUUsY0FEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FESCxFQU9GTixJQVBFLENBT0dPLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJELGtCQUFNRSxJQUFOLEVBQTNCLEdBQTBDQyx3QkFBV0MsSUFBWCxFQVA3QyxFQVFGWCxJQVJFLENBUUcsMEJBQVksQ0FBQyw2QkFBRCxDQUFaLENBUkgsRUFTRkEsSUFURSxDQVNHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLDBCQUFRbEIsZ0JBQU9zQixPQUFmLENBQTNCLEdBQXFETCxrQkFBTUUsSUFBTixFQVR4RCxFQVVGVCxJQVZFLENBVUcseUJBQU87QUFBQ2EsSUFBQUEsT0FBTyxFQUFFO0FBQVYsR0FBUCxDQVZILEVBV0ZiLElBWEUsQ0FXR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQkQsa0JBQU1FLElBQU4sRUFBM0IsR0FBMENDLHdCQUFXSSxLQUFYLENBQWlCLEdBQWpCLENBWDdDLEVBWUZkLElBWkUsQ0FZR0osY0FBS21CLElBQUwsQ0FBVXpCLGdCQUFPUSxHQUFQLENBQVdpQixJQUFyQixDQVpILENBQVA7QUFhSDs7QUFBQTtBQUNERSxlQUFlLENBQUNELFdBQWhCLEdBQThCLHFCQUE5QiIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXEtzZW5tYXJ0XFxrc2VubWFydFxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xyXG5pbXBvcnQgZ3V0aWwgZnJvbSAnZ3VscC11dGlsJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgcmVuYW1lIGZyb20gJ2d1bHAtcmVuYW1lJztcclxuaW1wb3J0IHNvdXJjZW1hcHMgZnJvbSAnZ3VscC1zb3VyY2VtYXBzJztcclxuaW1wb3J0IHByZWZpeGVyIGZyb20gJ2d1bHAtYXV0b3ByZWZpeGVyJztcclxuaW1wb3J0IGd1bHBQb3N0Y3NzIGZyb20gJ2d1bHAtcG9zdGNzcyc7XHJcbmltcG9ydCBjc3NuYW5vIGZyb20gJ2d1bHAtY3NzbmFubyc7XHJcbmltcG9ydCBpbmxpbmVTdmcgZnJvbSAncG9zdGNzcy1pbmxpbmUtc3ZnJztcclxuaW1wb3J0IGF0SW1wb3J0IGZyb20gJ3Bvc3Rjc3MtaW1wb3J0JztcclxuaW1wb3J0IHByZWNzcyBmcm9tICdwcmVjc3MnO1xyXG5pbXBvcnQgbWl4aW5zIGZyb20gJ3Bvc3Rjc3Mtc2Fzc3ktbWl4aW5zJztcclxuaW1wb3J0IGxvc3QgZnJvbSAnbG9zdCc7XHJcbmltcG9ydCBuZXh0IGZyb20gJ3Bvc3Rjc3MtY3NzbmV4dCc7XHJcbmltcG9ydCBweHRvcmVtIGZyb20gJ3Bvc3Rjc3MtcHh0b3JlbSc7XHJcbmltcG9ydCBoZXhyZ2JhIGZyb20gJ3Bvc3Rjc3MtaGV4cmdiYSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJztcclxuXHJcbi8qXHJcbiAqINCa0L7QvNC/0LjQu9GP0YbQuNGPIFBPU1RDU1Mg0LIgQ1NTXHJcbiAqINCh0L7Qt9C00LDQvdC40LUgc291cmNlbWFwc1xyXG4gKiDQnNC40L3QuNGE0LjQutCw0YbQuNGPXHJcbiAqL1xyXG5cclxuY29uc3QgcHJvY2Vzc29ycyA9IFtcclxuICAgIGF0SW1wb3J0KCksXHJcbiAgICBtaXhpbnMoKSxcclxuICAgIHByZWNzcygpLFxyXG4gICAgbG9zdCgpLFxyXG4gICAgcHh0b3JlbSgpLFxyXG4gICAgaGV4cmdiYSgpLFxyXG4gICAgaW5saW5lU3ZnKGNvbmZpZy5zdmcuc3ZnSW5TdHlsZSksXHJcbiAgICBuZXh0KClcclxuXTtcclxuXHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBvc3Rjc3NJbnRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIENTUyBpbnRlcm5hbCcpO1xyXG5cclxuICAgIHJldHVybiBndWxwLnNyYyhjb25maWcuY3NzLnNyY0ludGVybmFsKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdDU1MgaW50ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy5pbml0KCkpXHJcbiAgICAgICAgLnBpcGUoZ3VscFBvc3Rjc3MocHJvY2Vzc29ycykpXHJcbiAgICAgICAgLnBpcGUocHJlZml4ZXIoKSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBjc3NuYW5vKGNvbmZpZy5jc3NuYW5vKSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShyZW5hbWUoe2V4dG5hbWU6ICcuY3NzJ30pKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IGd1dGlsLm5vb3AoKSA6IHNvdXJjZW1hcHMud3JpdGUoJy4nKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmNzcy5kZXN0KSk7XHJcbn07XHJcbnBvc3Rjc3NJbnRlcm5hbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaW50ZXJuYWwgY3NzJztcclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcG9zdGNzc0V4dGVybmFsKCkge1xyXG4gICAgYnJvd3NlcnN5bmMubm90aWZ5KCdDb21waWxpbmcgQ1NTIGV4dGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5jc3Muc3JjRXh0ZXJuYWwpXHJcbiAgICAgICAgLnBpcGUocGx1bWJlcih7XHJcbiAgICAgICAgICAgIGVycm9ySGFuZGxlcjogbm90aWZ5Lm9uRXJyb3IoZXJyID0+ICh7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0NTUyBleHRlcm5hbCcsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndXRpbC5ub29wKCkgOiBzb3VyY2VtYXBzLmluaXQoKSlcclxuICAgICAgICAucGlwZShndWxwUG9zdGNzcyhbYXRJbXBvcnQoKV0pKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IGNzc25hbm8oY29uZmlnLmNzc25hbm8pIDogZ3V0aWwubm9vcCgpKVxyXG4gICAgICAgIC5waXBlKHJlbmFtZSh7ZXh0bmFtZTogJy5jc3MnfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy53cml0ZSgnLicpKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChjb25maWcuY3NzLmRlc3QpKTtcclxufTtcclxucG9zdGNzc0V4dGVybmFsLmRlc2NyaXB0aW9uID0gJ9Ch0LHQvtGA0LrQsCBleHRlcm5hbCBjc3MnO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "postcss.js"
      ],
      "names": [
        "processors",
        "config",
        "svg",
        "svgInStyle",
        "postcssInternal",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "css",
        "srcInternal",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "gutil",
        "env",
        "noop",
        "sourcemaps",
        "init",
        "cssnano",
        "extname",
        "write",
        "dest",
        "description",
        "postcssExternal",
        "srcExternal"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;AAMA,IAAMA,UAAU,GAAG,CACf,6BADe,EAEf,kCAFe,EAGf,sBAHe,EAIf,oBAJe,EAKf,8BALe,EAMf,8BANe,EAOf,+BAAUC,gBAAOC,GAAP,CAAWC,UAArB,CAPe,EAQf,8BARe,CAAnB;;AAaO,SAASC,eAAT,GAA2B;AAC9BC,uBAAYC,MAAZ,CAAmB,wBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASP,gBAAOQ,GAAP,CAAWC,WAApB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEN,oBAAOO,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,cAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,0BAAYX,UAAZ,CARH,EASFW,IATE,CASG,gCATH,EAUFA,IAVE,CAUGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAAQlB,gBAAOsB,OAAf,CAA3B,GAAqDL,kBAAME,IAAN,EAVxD,EAWFT,IAXE,CAWG,yBAAO;AAACa,IAAAA,OAAO,EAAE;AAAV,GAAP,CAXH,EAYFb,IAZE,CAYGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWI,KAAX,CAAiB,GAAjB,CAZ7C,EAaFd,IAbE,CAaGJ,cAAKmB,IAAL,CAAUzB,gBAAOQ,GAAP,CAAWiB,IAArB,CAbH,CAAP;AAcH;;AAAA;AACDtB,eAAe,CAACuB,WAAhB,GAA8B,qBAA9B;;AAGO,SAASC,eAAT,GAA2B;AAC9BvB,uBAAYC,MAAZ,CAAmB,wBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASP,gBAAOQ,GAAP,CAAWoB,WAApB,EACFlB,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEN,oBAAOO,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,cAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,0BAAY,CAAC,6BAAD,CAAZ,CARH,EASFA,IATE,CASGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAAQlB,gBAAOsB,OAAf,CAA3B,GAAqDL,kBAAME,IAAN,EATxD,EAUFT,IAVE,CAUG,yBAAO;AAACa,IAAAA,OAAO,EAAE;AAAV,GAAP,CAVH,EAWFb,IAXE,CAWGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWI,KAAX,CAAiB,GAAjB,CAX7C,EAYFd,IAZE,CAYGJ,cAAKmB,IAAL,CAAUzB,gBAAOQ,GAAP,CAAWiB,IAArB,CAZH,CAAP;AAaH;;AAAA;AACDE,eAAe,CAACD,WAAhB,GAA8B,qBAA9B",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\ksenmart\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport rename from 'gulp-rename';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport prefixer from 'gulp-autoprefixer';\r\nimport gulpPostcss from 'gulp-postcss';\r\nimport cssnano from 'gulp-cssnano';\r\nimport inlineSvg from 'postcss-inline-svg';\r\nimport atImport from 'postcss-import';\r\nimport precss from 'precss';\r\nimport mixins from 'postcss-sassy-mixins';\r\nimport lost from 'lost';\r\nimport next from 'postcss-cssnext';\r\nimport pxtorem from 'postcss-pxtorem';\r\nimport hexrgba from 'postcss-hexrgba';\r\nimport config from '../config';\r\n\r\n/*\r\n * Компиляция POSTCSS в CSS\r\n * Создание sourcemaps\r\n * Минификация\r\n */\r\n\r\nconst processors = [\r\n    atImport(),\r\n    mixins(),\r\n    precss(),\r\n    lost(),\r\n    pxtorem(),\r\n    hexrgba(),\r\n    inlineSvg(config.svg.svgInStyle),\r\n    next()\r\n];\r\n\r\n\r\n\r\nexport function postcssInternal() {\r\n    browsersync.notify('Compiling CSS internal');\r\n\r\n    return gulp.src(config.css.srcInternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'CSS internal',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(gulpPostcss(processors))\r\n        .pipe(prefixer())\r\n        .pipe(gutil.env.env === 'prod' ? cssnano(config.cssnano) : gutil.noop())\r\n        .pipe(rename({extname: '.css'}))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write('.'))\r\n        .pipe(gulp.dest(config.css.dest));\r\n};\r\npostcssInternal.description = 'Сборка internal css';\r\n\r\n\r\nexport function postcssExternal() {\r\n    browsersync.notify('Compiling CSS external');\r\n\r\n    return gulp.src(config.css.srcExternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'CSS external',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(gulpPostcss([atImport()]))\r\n        .pipe(gutil.env.env === 'prod' ? cssnano(config.cssnano) : gutil.noop())\r\n        .pipe(rename({extname: '.css'}))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write('.'))\r\n        .pipe(gulp.dest(config.css.dest));\r\n};\r\npostcssExternal.description = 'Сборка external css';\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _serve = _interopRequireDefault(require(\"./gulp/tasks/serve\"));\n\nvar _watch = _interopRequireDefault(require(\"./gulp/tasks/watch\"));\n\nvar _clean = _interopRequireDefault(require(\"./gulp/tasks/clean\"));\n\nvar _html = _interopRequireDefault(require(\"./gulp/tasks/html\"));\n\nvar _fonts = _interopRequireDefault(require(\"./gulp/tasks/fonts\"));\n\nvar _images = _interopRequireDefault(require(\"./gulp/tasks/images\"));\n\nvar _sprite_svg = require(\"./gulp/tasks/sprite_svg\");\n\nvar _js = require(\"./gulp/tasks/js\");\n\nvar _postcss = require(\"./gulp/tasks/postcss\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_gulp.default.task(_serve.default);\n\n_gulp.default.task(_watch.default);\n\n_gulp.default.task(_clean.default);\n\n_gulp.default.task(_html.default);\n\n_gulp.default.task(_fonts.default);\n\n_gulp.default.task(_images.default);\n\n_gulp.default.task(_sprite_svg.cleanSvgSprite);\n\n_gulp.default.task(_sprite_svg.generateSvgSprite);\n\n_gulp.default.task(_sprite_svg.copySvgSprite);\n\n_gulp.default.task(_js.jsInternal);\n\n_gulp.default.task(_js.jsExternal);\n\n_gulp.default.task(_postcss.postcssInternal);\n\n_gulp.default.task(_postcss.postcssExternal);\n\n_gulp.default.task('js', _gulp.default.parallel('jsInternal', 'jsExternal'));\n\n_gulp.default.task('postcss', _gulp.default.parallel('postcssInternal', 'postcssExternal'));\n\n_gulp.default.task('spriteSvg', _gulp.default.series('cleanSvgSprite', _gulp.default.parallel('generateSvgSprite'), 'copySvgSprite', 'html'));\n\n_gulp.default.task('build', _gulpUtil.default.env.env === 'prod' ? _gulp.default.series('clean', _gulp.default.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'images') : _gulp.default.series('clean', _gulp.default.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'html', 'images'));\n\n_gulp.default.task('default', _gulpUtil.default.env.env === 'prod' ? _gulp.default.series('build') : _gulp.default.series('build', _gulp.default.parallel('serve', 'watch')));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJ0YXNrIiwic2VydmUiLCJ3YXRjaCIsImNsZWFuIiwiaHRtbCIsImZvbnRzIiwiaW1hZ2VzIiwiY2xlYW5TdmdTcHJpdGUiLCJnZW5lcmF0ZVN2Z1Nwcml0ZSIsImNvcHlTdmdTcHJpdGUiLCJqc0ludGVybmFsIiwianNFeHRlcm5hbCIsInBvc3Rjc3NJbnRlcm5hbCIsInBvc3Rjc3NFeHRlcm5hbCIsInBhcmFsbGVsIiwic2VyaWVzIiwiZ3V0aWwiLCJlbnYiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFHQUEsY0FBS0MsSUFBTCxDQUFVQyxjQUFWOztBQUNBRixjQUFLQyxJQUFMLENBQVVFLGNBQVY7O0FBQ0FILGNBQUtDLElBQUwsQ0FBVUcsY0FBVjs7QUFDQUosY0FBS0MsSUFBTCxDQUFVSSxhQUFWOztBQUNBTCxjQUFLQyxJQUFMLENBQVVLLGNBQVY7O0FBQ0FOLGNBQUtDLElBQUwsQ0FBVU0sZUFBVjs7QUFDQVAsY0FBS0MsSUFBTCxDQUFVTywwQkFBVjs7QUFDQVIsY0FBS0MsSUFBTCxDQUFVUSw2QkFBVjs7QUFDQVQsY0FBS0MsSUFBTCxDQUFVUyx5QkFBVjs7QUFDQVYsY0FBS0MsSUFBTCxDQUFVVSxjQUFWOztBQUNBWCxjQUFLQyxJQUFMLENBQVVXLGNBQVY7O0FBQ0FaLGNBQUtDLElBQUwsQ0FBVVksd0JBQVY7O0FBQ0FiLGNBQUtDLElBQUwsQ0FBVWEsd0JBQVY7O0FBR0FkLGNBQUtDLElBQUwsQ0FBVSxJQUFWLEVBQWdCRCxjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixDQUFoQjs7QUFDQWYsY0FBS0MsSUFBTCxDQUFVLFNBQVYsRUFBcUJELGNBQUtlLFFBQUwsQ0FBYyxpQkFBZCxFQUFpQyxpQkFBakMsQ0FBckI7O0FBQ0FmLGNBQUtDLElBQUwsQ0FBVSxXQUFWLEVBQXVCRCxjQUFLZ0IsTUFBTCxDQUFZLGdCQUFaLEVBQThCaEIsY0FBS2UsUUFBTCxDQUFjLG1CQUFkLENBQTlCLEVBQWtFLGVBQWxFLEVBQW1GLE1BQW5GLENBQXZCOztBQUdBZixjQUFLQyxJQUFMLENBQVUsT0FBVixFQUFtQmdCLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJsQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixFQUEwQyxpQkFBMUMsRUFBNkQsaUJBQTdELEVBQWdGLFdBQWhGLEVBQTZGLE9BQTdGLENBQXJCLEVBQTRILFFBQTVILENBQTNCLEdBQW1LZixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixFQUEwQyxpQkFBMUMsRUFBNkQsaUJBQTdELEVBQWdGLFdBQWhGLEVBQTZGLE9BQTdGLENBQXJCLEVBQTRILE1BQTVILEVBQW9JLFFBQXBJLENBQXRMOztBQUVBZixjQUFLQyxJQUFMLENBQVUsU0FBVixFQUFxQmdCLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJsQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosQ0FBM0IsR0FBa0RoQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsT0FBZCxFQUF1QixPQUF2QixDQUFyQixDQUF2RSIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXEtzZW5tYXJ0XFxpcVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBndXRpbCBmcm9tICdndWxwLXV0aWwnO1xyXG5cclxuaW1wb3J0IHNlcnZlIGZyb20gJy4vZ3VscC90YXNrcy9zZXJ2ZSc7XHJcbmltcG9ydCB3YXRjaCBmcm9tICcuL2d1bHAvdGFza3Mvd2F0Y2gnO1xyXG5pbXBvcnQgY2xlYW4gZnJvbSAnLi9ndWxwL3Rhc2tzL2NsZWFuJztcclxuaW1wb3J0IGh0bWwgZnJvbSAnLi9ndWxwL3Rhc2tzL2h0bWwnO1xyXG5pbXBvcnQgZm9udHMgZnJvbSAnLi9ndWxwL3Rhc2tzL2ZvbnRzJztcclxuaW1wb3J0IGltYWdlcyBmcm9tICcuL2d1bHAvdGFza3MvaW1hZ2VzJztcclxuaW1wb3J0IHtjbGVhblN2Z1Nwcml0ZSwgZ2VuZXJhdGVTdmdTcHJpdGUsIGNvcHlTdmdTcHJpdGV9IGZyb20gJy4vZ3VscC90YXNrcy9zcHJpdGVfc3ZnJztcclxuaW1wb3J0IHtqc0ludGVybmFsLCBqc0V4dGVybmFsfSBmcm9tICcuL2d1bHAvdGFza3MvanMnO1xyXG5pbXBvcnQge3Bvc3Rjc3NJbnRlcm5hbCwgcG9zdGNzc0V4dGVybmFsfSBmcm9tICcuL2d1bHAvdGFza3MvcG9zdGNzcyc7XHJcblxyXG5cclxuZ3VscC50YXNrKHNlcnZlKTtcclxuZ3VscC50YXNrKHdhdGNoKTtcclxuZ3VscC50YXNrKGNsZWFuKTtcclxuZ3VscC50YXNrKGh0bWwpO1xyXG5ndWxwLnRhc2soZm9udHMpO1xyXG5ndWxwLnRhc2soaW1hZ2VzKTtcclxuZ3VscC50YXNrKGNsZWFuU3ZnU3ByaXRlKTtcclxuZ3VscC50YXNrKGdlbmVyYXRlU3ZnU3ByaXRlKTtcclxuZ3VscC50YXNrKGNvcHlTdmdTcHJpdGUpO1xyXG5ndWxwLnRhc2soanNJbnRlcm5hbCk7XHJcbmd1bHAudGFzayhqc0V4dGVybmFsKTtcclxuZ3VscC50YXNrKHBvc3Rjc3NJbnRlcm5hbCk7XHJcbmd1bHAudGFzayhwb3N0Y3NzRXh0ZXJuYWwpO1xyXG5cclxuXHJcbmd1bHAudGFzaygnanMnLCBndWxwLnBhcmFsbGVsKCdqc0ludGVybmFsJywgJ2pzRXh0ZXJuYWwnKSk7XHJcbmd1bHAudGFzaygncG9zdGNzcycsIGd1bHAucGFyYWxsZWwoJ3Bvc3Rjc3NJbnRlcm5hbCcsICdwb3N0Y3NzRXh0ZXJuYWwnKSk7XHJcbmd1bHAudGFzaygnc3ByaXRlU3ZnJywgZ3VscC5zZXJpZXMoJ2NsZWFuU3ZnU3ByaXRlJywgZ3VscC5wYXJhbGxlbCgnZ2VuZXJhdGVTdmdTcHJpdGUnKSwgJ2NvcHlTdmdTcHJpdGUnLCAnaHRtbCcpKTtcclxuXHJcblxyXG5ndWxwLnRhc2soJ2J1aWxkJywgZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3VscC5zZXJpZXMoJ2NsZWFuJywgZ3VscC5wYXJhbGxlbCgnanNJbnRlcm5hbCcsICdqc0V4dGVybmFsJywgJ3Bvc3Rjc3NJbnRlcm5hbCcsICdwb3N0Y3NzRXh0ZXJuYWwnLCAnc3ByaXRlU3ZnJywgJ2ZvbnRzJyksICdpbWFnZXMnKSA6IGd1bHAuc2VyaWVzKCdjbGVhbicsIGd1bHAucGFyYWxsZWwoJ2pzSW50ZXJuYWwnLCAnanNFeHRlcm5hbCcsICdwb3N0Y3NzSW50ZXJuYWwnLCAncG9zdGNzc0V4dGVybmFsJywgJ3Nwcml0ZVN2ZycsICdmb250cycpLCAnaHRtbCcsICdpbWFnZXMnKSk7XHJcblxyXG5ndWxwLnRhc2soJ2RlZmF1bHQnLCBndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndWxwLnNlcmllcygnYnVpbGQnKSA6IGd1bHAuc2VyaWVzKCdidWlsZCcsIGd1bHAucGFyYWxsZWwoJ3NlcnZlJywgJ3dhdGNoJykpKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "task",
        "serve",
        "watch",
        "clean",
        "html",
        "fonts",
        "images",
        "cleanSvgSprite",
        "generateSvgSprite",
        "copySvgSprite",
        "jsInternal",
        "jsExternal",
        "postcssInternal",
        "postcssExternal",
        "parallel",
        "series",
        "gutil",
        "env"
      ],
      "mappings": ";;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGAA,cAAKC,IAAL,CAAUC,cAAV;;AACAF,cAAKC,IAAL,CAAUE,cAAV;;AACAH,cAAKC,IAAL,CAAUG,cAAV;;AACAJ,cAAKC,IAAL,CAAUI,aAAV;;AACAL,cAAKC,IAAL,CAAUK,cAAV;;AACAN,cAAKC,IAAL,CAAUM,eAAV;;AACAP,cAAKC,IAAL,CAAUO,0BAAV;;AACAR,cAAKC,IAAL,CAAUQ,6BAAV;;AACAT,cAAKC,IAAL,CAAUS,yBAAV;;AACAV,cAAKC,IAAL,CAAUU,cAAV;;AACAX,cAAKC,IAAL,CAAUW,cAAV;;AACAZ,cAAKC,IAAL,CAAUY,wBAAV;;AACAb,cAAKC,IAAL,CAAUa,wBAAV;;AAGAd,cAAKC,IAAL,CAAU,IAAV,EAAgBD,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,CAAhB;;AACAf,cAAKC,IAAL,CAAU,SAAV,EAAqBD,cAAKe,QAAL,CAAc,iBAAd,EAAiC,iBAAjC,CAArB;;AACAf,cAAKC,IAAL,CAAU,WAAV,EAAuBD,cAAKgB,MAAL,CAAY,gBAAZ,EAA8BhB,cAAKe,QAAL,CAAc,mBAAd,CAA9B,EAAkE,eAAlE,EAAmF,MAAnF,CAAvB;;AAGAf,cAAKC,IAAL,CAAU,OAAV,EAAmBgB,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BlB,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,EAA0C,iBAA1C,EAA6D,iBAA7D,EAAgF,WAAhF,EAA6F,OAA7F,CAArB,EAA4H,QAA5H,CAA3B,GAAmKf,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,EAA0C,iBAA1C,EAA6D,iBAA7D,EAAgF,WAAhF,EAA6F,OAA7F,CAArB,EAA4H,MAA5H,EAAoI,QAApI,CAAtL;;AAEAf,cAAKC,IAAL,CAAU,SAAV,EAAqBgB,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BlB,cAAKgB,MAAL,CAAY,OAAZ,CAA3B,GAAkDhB,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,OAAd,EAAuB,OAAvB,CAArB,CAAvE",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\n\r\nimport serve from './gulp/tasks/serve';\r\nimport watch from './gulp/tasks/watch';\r\nimport clean from './gulp/tasks/clean';\r\nimport html from './gulp/tasks/html';\r\nimport fonts from './gulp/tasks/fonts';\r\nimport images from './gulp/tasks/images';\r\nimport {cleanSvgSprite, generateSvgSprite, copySvgSprite} from './gulp/tasks/sprite_svg';\r\nimport {jsInternal, jsExternal} from './gulp/tasks/js';\r\nimport {postcssInternal, postcssExternal} from './gulp/tasks/postcss';\r\n\r\n\r\ngulp.task(serve);\r\ngulp.task(watch);\r\ngulp.task(clean);\r\ngulp.task(html);\r\ngulp.task(fonts);\r\ngulp.task(images);\r\ngulp.task(cleanSvgSprite);\r\ngulp.task(generateSvgSprite);\r\ngulp.task(copySvgSprite);\r\ngulp.task(jsInternal);\r\ngulp.task(jsExternal);\r\ngulp.task(postcssInternal);\r\ngulp.task(postcssExternal);\r\n\r\n\r\ngulp.task('js', gulp.parallel('jsInternal', 'jsExternal'));\r\ngulp.task('postcss', gulp.parallel('postcssInternal', 'postcssExternal'));\r\ngulp.task('spriteSvg', gulp.series('cleanSvgSprite', gulp.parallel('generateSvgSprite'), 'copySvgSprite', 'html'));\r\n\r\n\r\ngulp.task('build', gutil.env.env === 'prod' ? gulp.series('clean', gulp.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'images') : gulp.series('clean', gulp.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'html', 'images'));\r\n\r\ngulp.task('default', gutil.env.env === 'prod' ? gulp.series('build') : gulp.series('build', gulp.parallel('serve', 'watch')));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\serve.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\serve.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\serve.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\serve.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
        "sourceFileName": "serve.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Запуск вебсервера BrowserSync\r\n */\nfunction serve(done) {\n  var serveCreate = _browserSync.default.create();\n\n  serveCreate.init(_config.default.browsersync);\n}\n\nserve.description = 'Запускает вебсервер из директории /build';\nvar _default = serve;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlLmpzIl0sIm5hbWVzIjpbInNlcnZlIiwiZG9uZSIsInNlcnZlQ3JlYXRlIiwiYnJvd3NlcnN5bmMiLCJjcmVhdGUiLCJpbml0IiwiY29uZmlnIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxLQUFULENBQWVDLElBQWYsRUFBcUI7QUFDakIsTUFBTUMsV0FBVyxHQUFHQyxxQkFBWUMsTUFBWixFQUFwQjs7QUFDQUYsRUFBQUEsV0FBVyxDQUFDRyxJQUFaLENBQWlCQyxnQkFBT0gsV0FBeEI7QUFDSDs7QUFDREgsS0FBSyxDQUFDTyxXQUFOLEdBQW9CLDBDQUFwQjtlQUVlUCxLIiwic291cmNlUm9vdCI6IkM6XFxwcm9qZWN0c1xcbXktcHJvamVjdFxcS3Nlbm1hcnRcXGlxXFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCdcclxuaW1wb3J0IGJyb3dzZXJzeW5jIGZyb20gJ2Jyb3dzZXItc3luYydcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnXHJcblxyXG4vKlxyXG4gKiDQl9Cw0L/Rg9GB0Log0LLQtdCx0YHQtdGA0LLQtdGA0LAgQnJvd3NlclN5bmNcclxuICovXHJcblxyXG5mdW5jdGlvbiBzZXJ2ZShkb25lKSB7XHJcbiAgICBjb25zdCBzZXJ2ZUNyZWF0ZSA9IGJyb3dzZXJzeW5jLmNyZWF0ZSgpO1xyXG4gICAgc2VydmVDcmVhdGUuaW5pdChjb25maWcuYnJvd3NlcnN5bmMpO1xyXG59XHJcbnNlcnZlLmRlc2NyaXB0aW9uID0gJ9CX0LDQv9GD0YHQutCw0LXRgiDQstC10LHRgdC10YDQstC10YAg0LjQtyDQtNC40YDQtdC60YLQvtGA0LjQuCAvYnVpbGQnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgc2VydmU7Il19",
    "map": {
      "version": 3,
      "sources": [
        "serve.js"
      ],
      "names": [
        "serve",
        "done",
        "serveCreate",
        "browsersync",
        "create",
        "init",
        "config",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjB,MAAMC,WAAW,GAAGC,qBAAYC,MAAZ,EAApB;;AACAF,EAAAA,WAAW,CAACG,IAAZ,CAAiBC,gBAAOH,WAAxB;AACH;;AACDH,KAAK,CAACO,WAAN,GAAoB,0CAApB;eAEeP,K",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp'\r\nimport browsersync from 'browser-sync'\r\nimport config from '../config'\r\n\r\n/*\r\n * Запуск вебсервера BrowserSync\r\n */\r\n\r\nfunction serve(done) {\r\n    const serveCreate = browsersync.create();\r\n    serveCreate.init(config.browsersync);\r\n}\r\nserve.description = 'Запускает вебсервер из директории /build';\r\n\r\nexport default serve;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\config.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar developmentDir = 'build/',\n    productionDir = '../public/assets/build/';\nvar path = {\n  dest: _gulpUtil.default.env.env === 'prod' ? productionDir : developmentDir,\n  build: {\n    html: developmentDir,\n    js: 'js/',\n    css: 'css/',\n    img: 'img/',\n    sprite: 'src/img/',\n    svgSprite: 'img/svg/',\n    fonts: 'fonts/'\n  },\n  src: {\n    html: 'src/*.html',\n    jsInternal: 'src/js/internal.js',\n    jsExternal: 'src/js/external.js',\n    styleInternal: _gulpUtil.default.env.env === 'prod' ? 'src/style/internal.pcss' : ['src/style/internal.pcss', 'src/style/ui_kit.pcss'],\n    styleExternal: 'src/style/external.pcss',\n    styleInclude: ['src/style/', './bower_components'],\n    img: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*'],\n    imgProduction: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/inhtml/**/*.*'],\n    sprite: 'src/img/sprite/**/*.*',\n    svg: 'src/img/svg/',\n    svgSpriteBuild: 'src/img/svg/',\n    svgSprite: 'src/img/svg/sprite/*.svg',\n    generatedSvgSprite: 'src/img/svg/sprite.svg',\n    fonts: 'src/fonts/**/*.*'\n  },\n  watch: {\n    html: 'src/**/*.html',\n    jsInternal: ['src/js/**/*.js', '!src/js/**/external.js', '!src/js/vendor/**/*.js'],\n    jsExternal: ['src/js/**/external.js', 'src/js/vendor/**/*.js'],\n    styleInternal: ['src/style/**/*.pcss', 'src/style/**/internal.pcss', '!src/style/**/external.pcss'],\n    styleExternal: 'src/style/external.pcss',\n    img: ['src/img/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/svg/sprite.svg'],\n    svgSprite: 'src/img/svg/sprite/*.svg',\n    fonts: 'src/fonts/**/*.*'\n  }\n};\nvar config = {\n  browsersync: {\n    server: {\n      baseDir: \"./\".concat(developmentDir)\n    },\n    tunnel: false,\n    open: false,\n    host: 'localhost',\n    port: 3000,\n    logPrefix: 'Blank'\n  },\n  html: {\n    src: path.src.html,\n    dest: path.build.html\n  },\n  js: {\n    srcInternal: path.src.jsInternal,\n    srcExternal: path.src.jsExternal,\n    dest: \"\".concat(path.dest).concat(path.build.js),\n    destJquery: \"\".concat(path.dest).concat(path.build.jquery)\n  },\n  css: {\n    srcInternal: path.src.styleInternal,\n    srcExternal: path.src.styleExternal,\n    options: {\n      includePaths: path.src.styleInclude,\n      sourceMap: true,\n      errLogToConsole: true\n    },\n    dest: \"\".concat(path.dest).concat(path.build.css)\n  },\n  images: {\n    src: path.src.img,\n    srcProduction: path.src.imgProduction,\n    dest: \"\".concat(path.dest).concat(path.build.img)\n  },\n  svg: {\n    svgInStyle: {\n      path: path.src.svg\n    },\n    sprite: path.src.svgSprite,\n    spriteGenerateDest: path.src.svgSpriteBuild,\n    spriteDest: path.dest + path.build.svgSprite,\n    generated: path.src.generatedSvgSprite\n  },\n  sprites: {\n    imagePath: path.src.sprite,\n    spritePath: path.build.sprite\n  },\n  fonts: {\n    src: path.src.fonts,\n    dest: path.dest + path.build.fonts\n  },\n  watch: {\n    html: path.watch.html,\n    jsInternal: path.watch.jsInternal,\n    jsExternal: path.watch.jsExternal,\n    cssInternal: path.watch.styleInternal,\n    cssExternal: path.watch.styleExternal,\n    images: path.watch.img,\n    svgSprite: path.watch.svgSprite,\n    fonts: path.watch.fonts\n  },\n  clean: {\n    dest: \"./\".concat(path.dest)\n  },\n  cssnano: {\n    zindex: false,\n    svgo: false,\n    // svgo отключен из-за ie11\n    autoprefixer: false,\n    reduceIdents: false\n  },\n  uglify: {\n    mangle: {\n      keep_fnames: true\n    },\n    compress: {\n      // unsafe: false,\n      // unsafe_Func: false,\n      unsafe_comps: false,\n      unsafe_math: false,\n      unsafe_proto: false,\n      unsafe_regexp: false,\n      typeofs: false,\n      reduce_vars: false,\n      reduce_funcs: false,\n      pure_getters: true,\n      properties: false,\n      collapse_vars: false\n    }\n  }\n};\nvar _default = config;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "developmentDir",
        "productionDir",
        "path",
        "dest",
        "gutil",
        "env",
        "build",
        "html",
        "js",
        "css",
        "img",
        "sprite",
        "svgSprite",
        "fonts",
        "src",
        "jsInternal",
        "jsExternal",
        "styleInternal",
        "styleExternal",
        "styleInclude",
        "imgProduction",
        "svg",
        "svgSpriteBuild",
        "generatedSvgSprite",
        "watch",
        "config",
        "browsersync",
        "server",
        "baseDir",
        "tunnel",
        "open",
        "host",
        "port",
        "logPrefix",
        "srcInternal",
        "srcExternal",
        "destJquery",
        "jquery",
        "options",
        "includePaths",
        "sourceMap",
        "errLogToConsole",
        "images",
        "srcProduction",
        "svgInStyle",
        "spriteGenerateDest",
        "spriteDest",
        "generated",
        "sprites",
        "imagePath",
        "spritePath",
        "cssInternal",
        "cssExternal",
        "clean",
        "cssnano",
        "zindex",
        "svgo",
        "autoprefixer",
        "reduceIdents",
        "uglify",
        "mangle",
        "keep_fnames",
        "compress",
        "unsafe_comps",
        "unsafe_math",
        "unsafe_proto",
        "unsafe_regexp",
        "typeofs",
        "reduce_vars",
        "reduce_funcs",
        "pure_getters",
        "properties",
        "collapse_vars"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,cAAc,GAAG,QAAvB;AAAA,IACIC,aAAa,GAAI,yBADrB;AAGA,IAAMC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAEC,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BJ,aAA3B,GAA2CD,cADxC;AAGTM,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEP,cADH;AAGHQ,IAAAA,EAAE,EAAE,KAHD;AAKHC,IAAAA,GAAG,EAAE,MALF;AAOHC,IAAAA,GAAG,EAAE,MAPF;AAQHC,IAAAA,MAAM,EAAE,UARL;AASHC,IAAAA,SAAS,EAAE,UATR;AAWHC,IAAAA,KAAK,EAAE;AAXJ,GAHE;AAgBTC,EAAAA,GAAG,EAAE;AACDP,IAAAA,IAAI,EAAE,YADL;AAGDQ,IAAAA,UAAU,EAAE,oBAHX;AAIDC,IAAAA,UAAU,EAAE,oBAJX;AAMDC,IAAAA,aAAa,EAAEb,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,yBAA3B,GAAuD,CAAC,yBAAD,EAA4B,uBAA5B,CANrE;AAODa,IAAAA,aAAa,EAAE,yBAPd;AAQDC,IAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,oBAAf,CARb;AAUDT,IAAAA,GAAG,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,4BAA7C,CAVJ;AAWDU,IAAAA,aAAa,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,4BAA7C,EAA2E,wBAA3E,CAXd;AAYDT,IAAAA,MAAM,EAAE,uBAZP;AAaDU,IAAAA,GAAG,EAAE,cAbJ;AAeDC,IAAAA,cAAc,EAAE,cAff;AAgBDV,IAAAA,SAAS,EAAE,0BAhBV;AAiBDW,IAAAA,kBAAkB,EAAE,wBAjBnB;AAmBDV,IAAAA,KAAK,EAAE;AAnBN,GAhBI;AAqCTW,EAAAA,KAAK,EAAE;AACHjB,IAAAA,IAAI,EAAE,eADH;AAGHQ,IAAAA,UAAU,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,wBAA7C,CAHT;AAIHC,IAAAA,UAAU,EAAE,CAAC,uBAAD,EAA0B,uBAA1B,CAJT;AAMHC,IAAAA,aAAa,EAAE,CAAC,qBAAD,EAAwB,4BAAxB,EAAsD,6BAAtD,CANZ;AAOHC,IAAAA,aAAa,EAAE,yBAPZ;AASHR,IAAAA,GAAG,EAAE,CAAC,gBAAD,EAAmB,4BAAnB,EAAiD,yBAAjD,CATF;AAWHE,IAAAA,SAAS,EAAE,0BAXR;AAaHC,IAAAA,KAAK,EAAE;AAbJ;AArCE,CAAb;AAsDA,IAAMY,MAAM,GAAG;AACXC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,cAAO5B,cAAP;AADH,KADC;AAIT6B,IAAAA,MAAM,EAAE,KAJC;AAKTC,IAAAA,IAAI,EAAE,KALG;AAMTC,IAAAA,IAAI,EAAE,WANG;AAOTC,IAAAA,IAAI,EAAE,IAPG;AAQTC,IAAAA,SAAS,EAAE;AARF,GADF;AAWX1B,EAAAA,IAAI,EAAE;AACFO,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASP,IADZ;AAEFJ,IAAAA,IAAI,EAAED,IAAI,CAACI,KAAL,CAAWC;AAFf,GAXK;AAeXC,EAAAA,EAAE,EAAE;AACA0B,IAAAA,WAAW,EAAEhC,IAAI,CAACY,GAAL,CAASC,UADtB;AAEAoB,IAAAA,WAAW,EAAEjC,IAAI,CAACY,GAAL,CAASE,UAFtB;AAGAb,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWE,EAA5B,CAHJ;AAIA4B,IAAAA,UAAU,YAAKlC,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAW+B,MAA5B;AAJV,GAfO;AAqBX5B,EAAAA,GAAG,EAAE;AACDyB,IAAAA,WAAW,EAAEhC,IAAI,CAACY,GAAL,CAASG,aADrB;AAEDkB,IAAAA,WAAW,EAAEjC,IAAI,CAACY,GAAL,CAASI,aAFrB;AAGDoB,IAAAA,OAAO,EAAE;AACLC,MAAAA,YAAY,EAAErC,IAAI,CAACY,GAAL,CAASK,YADlB;AAELqB,MAAAA,SAAS,EAAE,IAFN;AAGLC,MAAAA,eAAe,EAAE;AAHZ,KAHR;AAQDtC,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWG,GAA5B;AARH,GArBM;AA+BXiC,EAAAA,MAAM,EAAE;AACJ5B,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASJ,GADV;AAEJiC,IAAAA,aAAa,EAAEzC,IAAI,CAACY,GAAL,CAASM,aAFpB;AAGJjB,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWI,GAA5B;AAHA,GA/BG;AAoCXW,EAAAA,GAAG,EAAE;AACDuB,IAAAA,UAAU,EAAE;AACR1C,MAAAA,IAAI,EAAEA,IAAI,CAACY,GAAL,CAASO;AADP,KADX;AAIDV,IAAAA,MAAM,EAAET,IAAI,CAACY,GAAL,CAASF,SAJhB;AAKDiC,IAAAA,kBAAkB,EAAE3C,IAAI,CAACY,GAAL,CAASQ,cAL5B;AAMDwB,IAAAA,UAAU,EAAE5C,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACI,KAAL,CAAWM,SANlC;AAODmC,IAAAA,SAAS,EAAE7C,IAAI,CAACY,GAAL,CAASS;AAPnB,GApCM;AA6CXyB,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE/C,IAAI,CAACY,GAAL,CAASH,MADf;AAELuC,IAAAA,UAAU,EAAEhD,IAAI,CAACI,KAAL,CAAWK;AAFlB,GA7CE;AAiDXE,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASD,KADX;AAEHV,IAAAA,IAAI,EAAED,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACI,KAAL,CAAWO;AAF1B,GAjDI;AAqDXW,EAAAA,KAAK,EAAE;AACHjB,IAAAA,IAAI,EAAEL,IAAI,CAACsB,KAAL,CAAWjB,IADd;AAEHQ,IAAAA,UAAU,EAAEb,IAAI,CAACsB,KAAL,CAAWT,UAFpB;AAGHC,IAAAA,UAAU,EAAEd,IAAI,CAACsB,KAAL,CAAWR,UAHpB;AAIHmC,IAAAA,WAAW,EAAEjD,IAAI,CAACsB,KAAL,CAAWP,aAJrB;AAKHmC,IAAAA,WAAW,EAAElD,IAAI,CAACsB,KAAL,CAAWN,aALrB;AAMHwB,IAAAA,MAAM,EAAExC,IAAI,CAACsB,KAAL,CAAWd,GANhB;AAOHE,IAAAA,SAAS,EAAEV,IAAI,CAACsB,KAAL,CAAWZ,SAPnB;AAQHC,IAAAA,KAAK,EAAEX,IAAI,CAACsB,KAAL,CAAWX;AARf,GArDI;AA+DXwC,EAAAA,KAAK,EAAE;AACHlD,IAAAA,IAAI,cAAOD,IAAI,CAACC,IAAZ;AADD,GA/DI;AAkEXmD,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,IAAI,EAAE,KAFD;AAEQ;AACbC,IAAAA,YAAY,EAAE,KAHT;AAILC,IAAAA,YAAY,EAAE;AAJT,GAlEE;AAwEXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE;AACJC,MAAAA,WAAW,EAAE;AADT,KADJ;AAIJC,IAAAA,QAAQ,EAAE;AACN;AACA;AACAC,MAAAA,YAAY,EAAE,KAHR;AAINC,MAAAA,WAAW,EAAE,KAJP;AAKNC,MAAAA,YAAY,EAAE,KALR;AAMNC,MAAAA,aAAa,EAAE,KANT;AAONC,MAAAA,OAAO,EAAE,KAPH;AAQNC,MAAAA,WAAW,EAAE,KARP;AASNC,MAAAA,YAAY,EAAE,KATR;AAUNC,MAAAA,YAAY,EAAE,IAVR;AAWNC,MAAAA,UAAU,EAAE,KAXN;AAYNC,MAAAA,aAAa,EAAE;AAZT;AAJN;AAxEG,CAAf;eA6Fe/C,M",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\n\r\nconst developmentDir = 'build/',\r\n    productionDir  = '../public/assets/build/';\r\n\r\nconst path = {\r\n    dest: gutil.env.env === 'prod' ? productionDir : developmentDir,\r\n\r\n    build: {\r\n        html: developmentDir,\r\n\r\n        js: 'js/',\r\n\r\n        css: 'css/',\r\n\r\n        img: 'img/',\r\n        sprite: 'src/img/',\r\n        svgSprite: 'img/svg/',\r\n\r\n        fonts: 'fonts/'\r\n    },\r\n    src: {\r\n        html: 'src/*.html',\r\n\r\n        jsInternal: 'src/js/internal.js',\r\n        jsExternal: 'src/js/external.js',\r\n\r\n        styleInternal: gutil.env.env === 'prod' ? 'src/style/internal.pcss' : ['src/style/internal.pcss', 'src/style/ui_kit.pcss'],\r\n        styleExternal: 'src/style/external.pcss',\r\n        styleInclude: ['src/style/', './bower_components'],\r\n\r\n        img: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*'],\r\n        imgProduction: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/inhtml/**/*.*'],\r\n        sprite: 'src/img/sprite/**/*.*',\r\n        svg: 'src/img/svg/',\r\n\r\n        svgSpriteBuild: 'src/img/svg/',\r\n        svgSprite: 'src/img/svg/sprite/*.svg',\r\n        generatedSvgSprite: 'src/img/svg/sprite.svg',\r\n\r\n        fonts: 'src/fonts/**/*.*'\r\n    },\r\n    watch: {\r\n        html: 'src/**/*.html',\r\n\r\n        jsInternal: ['src/js/**/*.js', '!src/js/**/external.js', '!src/js/vendor/**/*.js'],\r\n        jsExternal: ['src/js/**/external.js', 'src/js/vendor/**/*.js'],\r\n\r\n        styleInternal: ['src/style/**/*.pcss', 'src/style/**/internal.pcss', '!src/style/**/external.pcss'],\r\n        styleExternal: 'src/style/external.pcss',\r\n\r\n        img: ['src/img/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/svg/sprite.svg'],\r\n\r\n        svgSprite: 'src/img/svg/sprite/*.svg',\r\n\r\n        fonts: 'src/fonts/**/*.*'\r\n    }\r\n};\r\n\r\nconst config = {\r\n    browsersync: {\r\n        server: {\r\n            baseDir: `./${developmentDir}`\r\n        },\r\n        tunnel: false,\r\n        open: false,\r\n        host: 'localhost',\r\n        port: 3000,\r\n        logPrefix: 'Blank'\r\n    },\r\n    html: {\r\n        src: path.src.html,\r\n        dest: path.build.html\r\n    },\r\n    js: {\r\n        srcInternal: path.src.jsInternal,\r\n        srcExternal: path.src.jsExternal,\r\n        dest: `${path.dest}${path.build.js}`,\r\n        destJquery: `${path.dest}${path.build.jquery}`\r\n    },\r\n    css: {\r\n        srcInternal: path.src.styleInternal,\r\n        srcExternal: path.src.styleExternal,\r\n        options: {\r\n            includePaths: path.src.styleInclude,\r\n            sourceMap: true,\r\n            errLogToConsole: true\r\n        },\r\n        dest: `${path.dest}${path.build.css}`\r\n    },\r\n    images: {\r\n        src: path.src.img,\r\n        srcProduction: path.src.imgProduction,\r\n        dest: `${path.dest}${path.build.img}`\r\n    },\r\n    svg: {\r\n        svgInStyle: {\r\n            path: path.src.svg\r\n        },\r\n        sprite: path.src.svgSprite,\r\n        spriteGenerateDest: path.src.svgSpriteBuild,\r\n        spriteDest: path.dest + path.build.svgSprite,\r\n        generated: path.src.generatedSvgSprite\r\n    },\r\n    sprites: {\r\n        imagePath: path.src.sprite,\r\n        spritePath: path.build.sprite\r\n    },\r\n    fonts: {\r\n        src: path.src.fonts,\r\n        dest: path.dest + path.build.fonts\r\n    },\r\n    watch: {\r\n        html: path.watch.html,\r\n        jsInternal: path.watch.jsInternal,\r\n        jsExternal: path.watch.jsExternal,\r\n        cssInternal: path.watch.styleInternal,\r\n        cssExternal: path.watch.styleExternal,\r\n        images: path.watch.img,\r\n        svgSprite: path.watch.svgSprite,\r\n        fonts: path.watch.fonts\r\n    },\r\n    clean: {\r\n        dest: `./${path.dest}`\r\n    },\r\n    cssnano: {\r\n        zindex: false,\r\n        svgo: false, // svgo отключен из-за ie11\r\n        autoprefixer: false,\r\n        reduceIdents: false\r\n    },\r\n    uglify: {\r\n        mangle: {\r\n            keep_fnames: true\r\n        },\r\n        compress: {\r\n            // unsafe: false,\r\n            // unsafe_Func: false,\r\n            unsafe_comps: false,\r\n            unsafe_math: false,\r\n            unsafe_proto: false,\r\n            unsafe_regexp: false,\r\n            typeofs: false,\r\n            reduce_vars: false,\r\n            reduce_funcs: false,\r\n            pure_getters: true,\r\n            properties: false,\r\n            collapse_vars: false\r\n        }\r\n    }\r\n};\r\n\r\nexport default config;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\watch.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\watch.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\watch.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\watch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
        "sourceFileName": "watch.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Смотрит за изменениями\r\n */\nfunction watch() {\n  _gulp.default.watch(_config.default.watch.html, _gulp.default.series('html'));\n\n  _gulp.default.watch(_config.default.watch.cssInternal, _gulp.default.series('postcssInternal'));\n\n  _gulp.default.watch(_config.default.watch.cssExternal, _gulp.default.series('postcssExternal'));\n\n  _gulp.default.watch(_config.default.watch.jsInternal, _gulp.default.series('jsInternal'));\n\n  _gulp.default.watch(_config.default.watch.jsExternal, _gulp.default.series('jsExternal'));\n\n  _gulp.default.watch(_config.default.watch.images, _gulp.default.series('images'));\n\n  _gulp.default.watch(_config.default.watch.svgSprite, _gulp.default.series('spriteSvg'));\n\n  _gulp.default.watch(_config.default.watch.fonts, _gulp.default.series('fonts'));\n}\n\n;\nwatch.description = 'Смотрит за изменениями файлов';\nvar _default = watch;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdGNoLmpzIl0sIm5hbWVzIjpbIndhdGNoIiwiZ3VscCIsImNvbmZpZyIsImh0bWwiLCJzZXJpZXMiLCJjc3NJbnRlcm5hbCIsImNzc0V4dGVybmFsIiwianNJbnRlcm5hbCIsImpzRXh0ZXJuYWwiLCJpbWFnZXMiLCJzdmdTcHJpdGUiLCJmb250cyIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTs7O0FBSUEsU0FBU0EsS0FBVCxHQUFpQjtBQUNiQyxnQkFBS0QsS0FBTCxDQUFXRSxnQkFBT0YsS0FBUCxDQUFhRyxJQUF4QixFQUE4QkYsY0FBS0csTUFBTCxDQUFZLE1BQVosQ0FBOUI7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFLLFdBQXhCLEVBQXFDSixjQUFLRyxNQUFMLENBQVksaUJBQVosQ0FBckM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFNLFdBQXhCLEVBQXFDTCxjQUFLRyxNQUFMLENBQVksaUJBQVosQ0FBckM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFPLFVBQXhCLEVBQW9DTixjQUFLRyxNQUFMLENBQVksWUFBWixDQUFwQzs7QUFDQUgsZ0JBQUtELEtBQUwsQ0FBV0UsZ0JBQU9GLEtBQVAsQ0FBYVEsVUFBeEIsRUFBb0NQLGNBQUtHLE1BQUwsQ0FBWSxZQUFaLENBQXBDOztBQUNBSCxnQkFBS0QsS0FBTCxDQUFXRSxnQkFBT0YsS0FBUCxDQUFhUyxNQUF4QixFQUFnQ1IsY0FBS0csTUFBTCxDQUFZLFFBQVosQ0FBaEM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFVLFNBQXhCLEVBQW1DVCxjQUFLRyxNQUFMLENBQVksV0FBWixDQUFuQzs7QUFDQUgsZ0JBQUtELEtBQUwsQ0FBV0UsZ0JBQU9GLEtBQVAsQ0FBYVcsS0FBeEIsRUFBK0JWLGNBQUtHLE1BQUwsQ0FBWSxPQUFaLENBQS9CO0FBQ0g7O0FBQUE7QUFDREosS0FBSyxDQUFDWSxXQUFOLEdBQW9CLCtCQUFwQjtlQUVlWixLIiwic291cmNlUm9vdCI6IkM6XFxwcm9qZWN0c1xcbXktcHJvamVjdFxcS3Nlbm1hcnRcXGlxXFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0KHQvNC+0YLRgNC40YIg0LfQsCDQuNC30LzQtdC90LXQvdC40Y/QvNC4XHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gd2F0Y2goKSB7XHJcbiAgICBndWxwLndhdGNoKGNvbmZpZy53YXRjaC5odG1sLCBndWxwLnNlcmllcygnaHRtbCcpKTtcclxuICAgIGd1bHAud2F0Y2goY29uZmlnLndhdGNoLmNzc0ludGVybmFsLCBndWxwLnNlcmllcygncG9zdGNzc0ludGVybmFsJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guY3NzRXh0ZXJuYWwsIGd1bHAuc2VyaWVzKCdwb3N0Y3NzRXh0ZXJuYWwnKSk7XHJcbiAgICBndWxwLndhdGNoKGNvbmZpZy53YXRjaC5qc0ludGVybmFsLCBndWxwLnNlcmllcygnanNJbnRlcm5hbCcpKTtcclxuICAgIGd1bHAud2F0Y2goY29uZmlnLndhdGNoLmpzRXh0ZXJuYWwsIGd1bHAuc2VyaWVzKCdqc0V4dGVybmFsJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guaW1hZ2VzLCBndWxwLnNlcmllcygnaW1hZ2VzJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guc3ZnU3ByaXRlLCBndWxwLnNlcmllcygnc3ByaXRlU3ZnJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guZm9udHMsIGd1bHAuc2VyaWVzKCdmb250cycpKTtcclxufTtcclxud2F0Y2guZGVzY3JpcHRpb24gPSAn0KHQvNC+0YLRgNC40YIg0LfQsCDQuNC30LzQtdC90LXQvdC40Y/QvNC4INGE0LDQudC70L7Qsic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB3YXRjaDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "watch.js"
      ],
      "names": [
        "watch",
        "gulp",
        "config",
        "html",
        "series",
        "cssInternal",
        "cssExternal",
        "jsInternal",
        "jsExternal",
        "images",
        "svgSprite",
        "fonts",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;AAIA,SAASA,KAAT,GAAiB;AACbC,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaG,IAAxB,EAA8BF,cAAKG,MAAL,CAAY,MAAZ,CAA9B;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaK,WAAxB,EAAqCJ,cAAKG,MAAL,CAAY,iBAAZ,CAArC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaM,WAAxB,EAAqCL,cAAKG,MAAL,CAAY,iBAAZ,CAArC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaO,UAAxB,EAAoCN,cAAKG,MAAL,CAAY,YAAZ,CAApC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaQ,UAAxB,EAAoCP,cAAKG,MAAL,CAAY,YAAZ,CAApC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaS,MAAxB,EAAgCR,cAAKG,MAAL,CAAY,QAAZ,CAAhC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaU,SAAxB,EAAmCT,cAAKG,MAAL,CAAY,WAAZ,CAAnC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaW,KAAxB,EAA+BV,cAAKG,MAAL,CAAY,OAAZ,CAA/B;AACH;;AAAA;AACDJ,KAAK,CAACY,WAAN,GAAoB,+BAApB;eAEeZ,K",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport config from '../config'\r\n\r\n/*\r\n * Смотрит за изменениями\r\n */\r\n\r\nfunction watch() {\r\n    gulp.watch(config.watch.html, gulp.series('html'));\r\n    gulp.watch(config.watch.cssInternal, gulp.series('postcssInternal'));\r\n    gulp.watch(config.watch.cssExternal, gulp.series('postcssExternal'));\r\n    gulp.watch(config.watch.jsInternal, gulp.series('jsInternal'));\r\n    gulp.watch(config.watch.jsExternal, gulp.series('jsExternal'));\r\n    gulp.watch(config.watch.images, gulp.series('images'));\r\n    gulp.watch(config.watch.svgSprite, gulp.series('spriteSvg'));\r\n    gulp.watch(config.watch.fonts, gulp.series('fonts'));\r\n};\r\nwatch.description = 'Смотрит за изменениями файлов';\r\n\r\nexport default watch;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\clean.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\clean.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\clean.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\clean.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
        "sourceFileName": "clean.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Удаление папки build\r\n */\nfunction clean(done) {\n  (0, _rimraf.default)(_config.default.clean.dest, done);\n}\n\nclean.description = 'Удаляет build директорию';\nvar _default = clean;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFuLmpzIl0sIm5hbWVzIjpbImNsZWFuIiwiZG9uZSIsImNvbmZpZyIsImRlc3QiLCJkZXNjcmlwdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBR0E7OztBQUlBLFNBQVNBLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtBQUNqQix1QkFBT0MsZ0JBQU9GLEtBQVAsQ0FBYUcsSUFBcEIsRUFBMEJGLElBQTFCO0FBQ0g7O0FBQ0RELEtBQUssQ0FBQ0ksV0FBTixHQUFvQiwwQkFBcEI7ZUFFZUosSyIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXEtzZW5tYXJ0XFxpcVxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnXHJcbmltcG9ydCByaW1yYWYgZnJvbSAncmltcmFmJ1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZydcclxuXHJcblxyXG4vKlxyXG4gKiDQo9C00LDQu9C10L3QuNC1INC/0LDQv9C60LggYnVpbGRcclxuICovXHJcblxyXG5mdW5jdGlvbiBjbGVhbihkb25lKSB7XHJcbiAgICByaW1yYWYoY29uZmlnLmNsZWFuLmRlc3QsIGRvbmUpO1xyXG59XHJcbmNsZWFuLmRlc2NyaXB0aW9uID0gJ9Cj0LTQsNC70Y/QtdGCIGJ1aWxkINC00LjRgNC10LrRgtC+0YDQuNGOJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsZWFuOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "clean.js"
      ],
      "names": [
        "clean",
        "done",
        "config",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAGA;;;AAIA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjB,uBAAOC,gBAAOF,KAAP,CAAaG,IAApB,EAA0BF,IAA1B;AACH;;AACDD,KAAK,CAACI,WAAN,GAAoB,0BAApB;eAEeJ,K",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp'\r\nimport rimraf from 'rimraf'\r\nimport config from '../config'\r\n\r\n\r\n/*\r\n * Удаление папки build\r\n */\r\n\r\nfunction clean(done) {\r\n    rimraf(config.clean.dest, done);\r\n}\r\nclean.description = 'Удаляет build директорию';\r\n\r\nexport default clean;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\html.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\html.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\html.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\html.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
        "sourceFileName": "html.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpFileInclude = _interopRequireDefault(require(\"gulp-file-include\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сборка html\r\n */\nfunction html(done) {\n  _browserSync.default.notify('Compiling html');\n\n  return _gulp.default.src(_config.default.html.src).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'HTML',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe(_gulp.default.dest(_config.default.html.dest));\n}\n\nhtml.description = 'Сборка html';\nvar _default = html;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0bWwuanMiXSwibmFtZXMiOlsiaHRtbCIsImRvbmUiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwicHJlZml4IiwiYmFzZXBhdGgiLCJpbmRlbnQiLCJkZXN0IiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxJQUFULENBQWNDLElBQWQsRUFBb0I7QUFDaEJDLHVCQUFZQyxNQUFaLENBQW1CLGdCQUFuQjs7QUFFQSxTQUFPQyxjQUFLQyxHQUFMLENBQVNDLGdCQUFPTixJQUFQLENBQVlLLEdBQXJCLEVBQ0ZFLElBREUsQ0FDRywwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVMLG9CQUFPTSxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxNQUQwQjtBQUVqQ0MsUUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsT0FBTDtBQUFBLEtBQWxCO0FBREosR0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyw4QkFBWTtBQUNkTyxJQUFBQSxNQUFNLEVBQUUsSUFETTtBQUVkQyxJQUFBQSxRQUFRLEVBQUUsT0FGSTtBQUdkQyxJQUFBQSxNQUFNLEVBQUU7QUFITSxHQUFaLENBUEgsRUFZRlQsSUFaRSxDQVlHSCxjQUFLYSxJQUFMLENBQVVYLGdCQUFPTixJQUFQLENBQVlpQixJQUF0QixDQVpILENBQVA7QUFhSDs7QUFDRGpCLElBQUksQ0FBQ2tCLFdBQUwsR0FBbUIsYUFBbkI7ZUFFZWxCLEkiLCJzb3VyY2VSb290IjoiQzpcXHByb2plY3RzXFxteS1wcm9qZWN0XFxLc2VubWFydFxcaXFcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgZmlsZWluY2x1ZGUgZnJvbSAnZ3VscC1maWxlLWluY2x1ZGUnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZydcclxuXHJcbi8qXHJcbiAqINCh0LHQvtGA0LrQsCBodG1sXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gaHRtbChkb25lKSB7XHJcbiAgICBicm93c2Vyc3luYy5ub3RpZnkoJ0NvbXBpbGluZyBodG1sJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5odG1sLnNyYylcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSFRNTCcsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShmaWxlaW5jbHVkZSh7XHJcbiAgICAgICAgICAgIHByZWZpeDogJ0BAJyxcclxuICAgICAgICAgICAgYmFzZXBhdGg6ICdAZmlsZScsXHJcbiAgICAgICAgICAgIGluZGVudDogdHJ1ZVxyXG4gICAgICAgIH0pKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChjb25maWcuaHRtbC5kZXN0KSk7XHJcbn1cclxuaHRtbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaHRtbCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBodG1sOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "html.js"
      ],
      "names": [
        "html",
        "done",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "prefix",
        "basepath",
        "indent",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAChBC,uBAAYC,MAAZ,CAAmB,gBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAON,IAAP,CAAYK,GAArB,EACFE,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEL,oBAAOM,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,MAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOG,8BAAY;AACdO,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CAPH,EAYFT,IAZE,CAYGH,cAAKa,IAAL,CAAUX,gBAAON,IAAP,CAAYiB,IAAtB,CAZH,CAAP;AAaH;;AACDjB,IAAI,CAACkB,WAAL,GAAmB,aAAnB;eAEelB,I",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport fileinclude from 'gulp-file-include';\r\nimport config from '../config'\r\n\r\n/*\r\n * Сборка html\r\n */\r\n\r\nfunction html(done) {\r\n    browsersync.notify('Compiling html');\r\n\r\n    return gulp.src(config.html.src)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'HTML',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(gulp.dest(config.html.dest));\r\n}\r\nhtml.description = 'Сборка html';\r\n\r\nexport default html;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\fonts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\fonts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\fonts.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\fonts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
        "sourceFileName": "fonts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Копирование шрифтов\r\n */\nfunction fonts(done) {\n  _gulp.default.src(_config.default.fonts.src).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Fonts',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulp.default.dest(_config.default.fonts.dest));\n\n  done();\n}\n\nfonts.description = 'Копирует шрифты в /build директорию';\nvar _default = fonts;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvbnRzLmpzIl0sIm5hbWVzIjpbImZvbnRzIiwiZG9uZSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwibm90aWZ5Iiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwiZGVzdCIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTs7O0FBS0EsU0FBU0EsS0FBVCxDQUFlQyxJQUFmLEVBQXFCO0FBQ2pCQyxnQkFBS0MsR0FBTCxDQUFTQyxnQkFBT0osS0FBUCxDQUFhRyxHQUF0QixFQUNLRSxJQURMLENBQ1UsMEJBQVE7QUFDVkMsSUFBQUEsWUFBWSxFQUFFQyxvQkFBT0MsT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxhQUFLO0FBQ2pDQyxRQUFBQSxLQUFLLEVBQUUsT0FEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FEVixFQU9LUCxJQVBMLENBT1VILGNBQUtXLElBQUwsQ0FBVVQsZ0JBQU9KLEtBQVAsQ0FBYWEsSUFBdkIsQ0FQVjs7QUFTQVosRUFBQUEsSUFBSTtBQUNQOztBQUNERCxLQUFLLENBQUNjLFdBQU4sR0FBb0IscUNBQXBCO2VBRWVkLEsiLCJzb3VyY2VSb290IjoiQzpcXHByb2plY3RzXFxteS1wcm9qZWN0XFxLc2VubWFydFxcaXFcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0JrQvtC/0LjRgNC+0LLQsNC90LjQtSDRiNGA0LjRhNGC0L7QslxyXG4gKi9cclxuXHJcblxyXG5mdW5jdGlvbiBmb250cyhkb25lKSB7XHJcbiAgICBndWxwLnNyYyhjb25maWcuZm9udHMuc3JjKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdGb250cycsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmZvbnRzLmRlc3QpKTtcclxuXHJcbiAgICBkb25lKCk7XHJcbn1cclxuZm9udHMuZGVzY3JpcHRpb24gPSAn0JrQvtC/0LjRgNGD0LXRgiDRiNGA0LjRhNGC0Ysg0LIgL2J1aWxkINC00LjRgNC10LrRgtC+0YDQuNGOJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZvbnRzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "fonts.js"
      ],
      "names": [
        "fonts",
        "done",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "notify",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;;;AAKA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjBC,gBAAKC,GAAL,CAASC,gBAAOJ,KAAP,CAAaG,GAAtB,EACKE,IADL,CACU,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,OAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADV,EAOKP,IAPL,CAOUH,cAAKW,IAAL,CAAUT,gBAAOJ,KAAP,CAAaa,IAAvB,CAPV;;AASAZ,EAAAA,IAAI;AACP;;AACDD,KAAK,CAACc,WAAN,GAAoB,qCAApB;eAEed,K",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport config from '../config'\r\n\r\n/*\r\n * Копирование шрифтов\r\n */\r\n\r\n\r\nfunction fonts(done) {\r\n    gulp.src(config.fonts.src)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Fonts',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gulp.dest(config.fonts.dest));\r\n\r\n    done();\r\n}\r\nfonts.description = 'Копирует шрифты в /build директорию';\r\n\r\nexport default fonts;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\images.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\images.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\images.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\images.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
        "sourceFileName": "images.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpNewer = _interopRequireDefault(require(\"gulp-newer\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сжатие картинок\r\n */\nfunction images(done) {\n  _browserSync.default.notify('Compiling images'); // отключаю оптимизацию картинок для дева\n\n\n  if (_gulpUtil.default.env.env !== 'prod') {\n    return _gulp.default.src(_config.default.images.src).pipe((0, _gulpPlumber.default)({\n      errorHandler: _gulpNotify.default.onError(function (err) {\n        return {\n          title: 'Image dev copy',\n          message: err.toString()\n        };\n      })\n    })).pipe((0, _gulpNewer.default)(_config.default.images.dest)).pipe(_gulp.default.dest(_config.default.images.dest));\n  } else {\n    return _gulp.default.src(_config.default.images.srcProduction).pipe((0, _gulpPlumber.default)({\n      errorHandler: _gulpNotify.default.onError(function (err) {\n        return {\n          title: 'Image optimizer',\n          message: err.toString()\n        };\n      })\n    })).pipe((0, _gulpNewer.default)(_config.default.images.dest)).pipe((0, _gulpImagemin.default)([_gulpImagemin.default.gifsicle({\n      optimizationLevel: 3\n    }), _gulpImagemin.default.jpegtran({\n      quality: 65,\n      progressive: true\n    }), _gulpImagemin.default.optipng({\n      optimizationLevel: 5\n    }), _gulpImagemin.default.svgo({\n      plugins: [{\n        removeViewBox: false\n      }, {\n        convertStyleToAttrs: true\n      }]\n    })])).pipe(_gulp.default.dest(_config.default.images.dest));\n  }\n}\n\nimages.description = 'Оптимизация картинок';\nvar _default = images;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlcy5qcyJdLCJuYW1lcyI6WyJpbWFnZXMiLCJkb25lIiwiYnJvd3NlcnN5bmMiLCJub3RpZnkiLCJndXRpbCIsImVudiIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwiZGVzdCIsInNyY1Byb2R1Y3Rpb24iLCJpbWFnZW1pbiIsImdpZnNpY2xlIiwib3B0aW1pemF0aW9uTGV2ZWwiLCJqcGVndHJhbiIsInF1YWxpdHkiLCJwcm9ncmVzc2l2ZSIsIm9wdGlwbmciLCJzdmdvIiwicGx1Z2lucyIsInJlbW92ZVZpZXdCb3giLCJjb252ZXJ0U3R5bGVUb0F0dHJzIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxNQUFULENBQWdCQyxJQUFoQixFQUFzQjtBQUNsQkMsdUJBQVlDLE1BQVosQ0FBbUIsa0JBQW5CLEVBRGtCLENBRWxCOzs7QUFDQSxNQUFJQyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQXRCLEVBQThCO0FBQzFCLFdBQU9DLGNBQUtDLEdBQUwsQ0FBU0MsZ0JBQU9SLE1BQVAsQ0FBY08sR0FBdkIsRUFDRkUsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLE1BQUFBLFlBQVksRUFBRVAsb0JBQU9RLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsZUFBSztBQUNqQ0MsVUFBQUEsS0FBSyxFQUFFLGdCQUQwQjtBQUVqQ0MsVUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsU0FBTDtBQUFBLE9BQWxCO0FBREosS0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyx3QkFBTUQsZ0JBQU9SLE1BQVAsQ0FBY2dCLElBQXBCLENBUEgsRUFRRlAsSUFSRSxDQVFHSCxjQUFLVSxJQUFMLENBQVVSLGdCQUFPUixNQUFQLENBQWNnQixJQUF4QixDQVJILENBQVA7QUFTSCxHQVZELE1BVU87QUFDSCxXQUFPVixjQUFLQyxHQUFMLENBQVNDLGdCQUFPUixNQUFQLENBQWNpQixhQUF2QixFQUNGUixJQURFLENBQ0csMEJBQVE7QUFDVkMsTUFBQUEsWUFBWSxFQUFFUCxvQkFBT1EsT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxlQUFLO0FBQ2pDQyxVQUFBQSxLQUFLLEVBQUUsaUJBRDBCO0FBRWpDQyxVQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixTQUFMO0FBQUEsT0FBbEI7QUFESixLQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HLHdCQUFNRCxnQkFBT1IsTUFBUCxDQUFjZ0IsSUFBcEIsQ0FQSCxFQVFGUCxJQVJFLENBUUcsMkJBQVMsQ0FDWFMsc0JBQVNDLFFBQVQsQ0FBa0I7QUFDZEMsTUFBQUEsaUJBQWlCLEVBQUU7QUFETCxLQUFsQixDQURXLEVBSVhGLHNCQUFTRyxRQUFULENBQWtCO0FBQ2RDLE1BQUFBLE9BQU8sRUFBRSxFQURLO0FBRWRDLE1BQUFBLFdBQVcsRUFBRTtBQUZDLEtBQWxCLENBSlcsRUFRWEwsc0JBQVNNLE9BQVQsQ0FBaUI7QUFDYkosTUFBQUEsaUJBQWlCLEVBQUU7QUFETixLQUFqQixDQVJXLEVBV1hGLHNCQUFTTyxJQUFULENBQWM7QUFDVkMsTUFBQUEsT0FBTyxFQUFFLENBQ0w7QUFBQ0MsUUFBQUEsYUFBYSxFQUFFO0FBQWhCLE9BREssRUFFTDtBQUFDQyxRQUFBQSxtQkFBbUIsRUFBRTtBQUF0QixPQUZLO0FBREMsS0FBZCxDQVhXLENBQVQsQ0FSSCxFQTBCRm5CLElBMUJFLENBMEJHSCxjQUFLVSxJQUFMLENBQVVSLGdCQUFPUixNQUFQLENBQWNnQixJQUF4QixDQTFCSCxDQUFQO0FBMkJIO0FBQ0o7O0FBQ0RoQixNQUFNLENBQUM2QixXQUFQLEdBQXFCLHNCQUFyQjtlQUVlN0IsTSIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXEtzZW5tYXJ0XFxpcVxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xyXG5pbXBvcnQgZ3V0aWwgZnJvbSAnZ3VscC11dGlsJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgbmV3ZXIgZnJvbSAnZ3VscC1uZXdlcic7XHJcbmltcG9ydCBpbWFnZW1pbiBmcm9tICdndWxwLWltYWdlbWluJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnO1xyXG5cclxuLypcclxuICog0KHQttCw0YLQuNC1INC60LDRgNGC0LjQvdC+0LpcclxuICovXHJcblxyXG5mdW5jdGlvbiBpbWFnZXMoZG9uZSkge1xyXG4gICAgYnJvd3NlcnN5bmMubm90aWZ5KCdDb21waWxpbmcgaW1hZ2VzJyk7XHJcbiAgICAvLyDQvtGC0LrQu9GO0YfQsNGOINC+0L/RgtC40LzQuNC30LDRhtC40Y4g0LrQsNGA0YLQuNC90L7QuiDQtNC70Y8g0LTQtdCy0LBcclxuICAgIGlmIChndXRpbC5lbnYuZW52ICE9PSAncHJvZCcpIHtcclxuICAgICAgICByZXR1cm4gZ3VscC5zcmMoY29uZmlnLmltYWdlcy5zcmMpXHJcbiAgICAgICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0ltYWdlIGRldiBjb3B5JyxcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICAucGlwZShuZXdlcihjb25maWcuaW1hZ2VzLmRlc3QpKVxyXG4gICAgICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmltYWdlcy5kZXN0KSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBndWxwLnNyYyhjb25maWcuaW1hZ2VzLnNyY1Byb2R1Y3Rpb24pXHJcbiAgICAgICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0ltYWdlIG9wdGltaXplcicsXHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICAgICAgLnBpcGUobmV3ZXIoY29uZmlnLmltYWdlcy5kZXN0KSlcclxuICAgICAgICAgICAgLnBpcGUoaW1hZ2VtaW4oW1xyXG4gICAgICAgICAgICAgICAgaW1hZ2VtaW4uZ2lmc2ljbGUoe1xyXG4gICAgICAgICAgICAgICAgICAgIG9wdGltaXphdGlvbkxldmVsOiAzXHJcbiAgICAgICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgICAgIGltYWdlbWluLmpwZWd0cmFuKHtcclxuICAgICAgICAgICAgICAgICAgICBxdWFsaXR5OiA2NSxcclxuICAgICAgICAgICAgICAgICAgICBwcm9ncmVzc2l2ZTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICAgICBpbWFnZW1pbi5vcHRpcG5nKHtcclxuICAgICAgICAgICAgICAgICAgICBvcHRpbWl6YXRpb25MZXZlbDogNVxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICAgICBpbWFnZW1pbi5zdmdvKHtcclxuICAgICAgICAgICAgICAgICAgICBwbHVnaW5zOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtyZW1vdmVWaWV3Qm94OiBmYWxzZX0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtjb252ZXJ0U3R5bGVUb0F0dHJzOiB0cnVlfVxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIF0pKVxyXG4gICAgICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmltYWdlcy5kZXN0KSk7XHJcbiAgICB9XHJcbn1cclxuaW1hZ2VzLmRlc2NyaXB0aW9uID0gJ9Ce0L/RgtC40LzQuNC30LDRhtC40Y8g0LrQsNGA0YLQuNC90L7Quic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBpbWFnZXM7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "images.js"
      ],
      "names": [
        "images",
        "done",
        "browsersync",
        "notify",
        "gutil",
        "env",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "dest",
        "srcProduction",
        "imagemin",
        "gifsicle",
        "optimizationLevel",
        "jpegtran",
        "quality",
        "progressive",
        "optipng",
        "svgo",
        "plugins",
        "removeViewBox",
        "convertStyleToAttrs",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AAClBC,uBAAYC,MAAZ,CAAmB,kBAAnB,EADkB,CAElB;;;AACA,MAAIC,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAtB,EAA8B;AAC1B,WAAOC,cAAKC,GAAL,CAASC,gBAAOR,MAAP,CAAcO,GAAvB,EACFE,IADE,CACG,0BAAQ;AACVC,MAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,eAAK;AACjCC,UAAAA,KAAK,EAAE,gBAD0B;AAEjCC,UAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,SAAL;AAAA,OAAlB;AADJ,KAAR,CADH,EAOFN,IAPE,CAOG,wBAAMD,gBAAOR,MAAP,CAAcgB,IAApB,CAPH,EAQFP,IARE,CAQGH,cAAKU,IAAL,CAAUR,gBAAOR,MAAP,CAAcgB,IAAxB,CARH,CAAP;AASH,GAVD,MAUO;AACH,WAAOV,cAAKC,GAAL,CAASC,gBAAOR,MAAP,CAAciB,aAAvB,EACFR,IADE,CACG,0BAAQ;AACVC,MAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,eAAK;AACjCC,UAAAA,KAAK,EAAE,iBAD0B;AAEjCC,UAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,SAAL;AAAA,OAAlB;AADJ,KAAR,CADH,EAOFN,IAPE,CAOG,wBAAMD,gBAAOR,MAAP,CAAcgB,IAApB,CAPH,EAQFP,IARE,CAQG,2BAAS,CACXS,sBAASC,QAAT,CAAkB;AACdC,MAAAA,iBAAiB,EAAE;AADL,KAAlB,CADW,EAIXF,sBAASG,QAAT,CAAkB;AACdC,MAAAA,OAAO,EAAE,EADK;AAEdC,MAAAA,WAAW,EAAE;AAFC,KAAlB,CAJW,EAQXL,sBAASM,OAAT,CAAiB;AACbJ,MAAAA,iBAAiB,EAAE;AADN,KAAjB,CARW,EAWXF,sBAASO,IAAT,CAAc;AACVC,MAAAA,OAAO,EAAE,CACL;AAACC,QAAAA,aAAa,EAAE;AAAhB,OADK,EAEL;AAACC,QAAAA,mBAAmB,EAAE;AAAtB,OAFK;AADC,KAAd,CAXW,CAAT,CARH,EA0BFnB,IA1BE,CA0BGH,cAAKU,IAAL,CAAUR,gBAAOR,MAAP,CAAcgB,IAAxB,CA1BH,CAAP;AA2BH;AACJ;;AACDhB,MAAM,CAAC6B,WAAP,GAAqB,sBAArB;eAEe7B,M",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport newer from 'gulp-newer';\r\nimport imagemin from 'gulp-imagemin';\r\nimport config from '../config';\r\n\r\n/*\r\n * Сжатие картинок\r\n */\r\n\r\nfunction images(done) {\r\n    browsersync.notify('Compiling images');\r\n    // отключаю оптимизацию картинок для дева\r\n    if (gutil.env.env !== 'prod') {\r\n        return gulp.src(config.images.src)\r\n            .pipe(plumber({\r\n                errorHandler: notify.onError(err => ({\r\n                    title: 'Image dev copy',\r\n                    message: err.toString()\r\n                }))\r\n            }))\r\n            .pipe(newer(config.images.dest))\r\n            .pipe(gulp.dest(config.images.dest));\r\n    } else {\r\n        return gulp.src(config.images.srcProduction)\r\n            .pipe(plumber({\r\n                errorHandler: notify.onError(err => ({\r\n                    title: 'Image optimizer',\r\n                    message: err.toString()\r\n                }))\r\n            }))\r\n            .pipe(newer(config.images.dest))\r\n            .pipe(imagemin([\r\n                imagemin.gifsicle({\r\n                    optimizationLevel: 3\r\n                }),\r\n                imagemin.jpegtran({\r\n                    quality: 65,\r\n                    progressive: true\r\n                }),\r\n                imagemin.optipng({\r\n                    optimizationLevel: 5\r\n                }),\r\n                imagemin.svgo({\r\n                    plugins: [\r\n                        {removeViewBox: false},\r\n                        {convertStyleToAttrs: true}\r\n                    ]\r\n                })\r\n            ]))\r\n            .pipe(gulp.dest(config.images.dest));\r\n    }\r\n}\r\nimages.description = 'Оптимизация картинок';\r\n\r\nexport default images;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\sprite_svg.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\sprite_svg.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\sprite_svg.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\sprite_svg.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
        "sourceFileName": "sprite_svg.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanSvgSprite = cleanSvgSprite;\nexports.generateSvgSprite = generateSvgSprite;\nexports.copySvgSprite = copySvgSprite;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _gulpSvgSprites = _interopRequireDefault(require(\"gulp-svg-sprites\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Удаляет svg спрайт /src/img/svg/sprite.svg\r\n */\nfunction cleanSvgSprite(done) {\n  (0, _rimraf.default)(_config.default.svg.generated, done);\n}\n\n;\ncleanSvgSprite.description = 'Удаляет svg спрайт';\n/*\r\n * Генрит svg спрайт из файлов /src/img/svg/sprite/*.svg\r\n */\n\nfunction generateSvgSprite(done) {\n  return _gulp.default.src(_config.default.svg.sprite).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Svg sprite',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpSvgSprites.default)({\n    mode: 'symbols',\n    selector: 'icon-%f',\n    cssFile: false,\n    svg: {\n      sprite: 'sprite.svg',\n      symbols: 'sprite.svg'\n    },\n    preview: false\n  })).pipe(_gulp.default.dest(_config.default.svg.spriteGenerateDest));\n}\n\n;\ngenerateSvgSprite.description = 'Создает svg спрайт';\n\nfunction copySvgSprite(done) {\n  _gulp.default.src(_config.default.svg.generated).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Copy svg sprite',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulp.default.dest(_config.default.svg.spriteDest));\n\n  done();\n}\n\n;\ncopySvgSprite.description = 'Копирует svg спрайт в /build директорию';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwcml0ZV9zdmcuanMiXSwibmFtZXMiOlsiY2xlYW5TdmdTcHJpdGUiLCJkb25lIiwiY29uZmlnIiwic3ZnIiwiZ2VuZXJhdGVkIiwiZGVzY3JpcHRpb24iLCJnZW5lcmF0ZVN2Z1Nwcml0ZSIsImd1bHAiLCJzcmMiLCJzcHJpdGUiLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwibm90aWZ5Iiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwibW9kZSIsInNlbGVjdG9yIiwiY3NzRmlsZSIsInN5bWJvbHMiLCJwcmV2aWV3IiwiZGVzdCIsInNwcml0ZUdlbmVyYXRlRGVzdCIsImNvcHlTdmdTcHJpdGUiLCJzcHJpdGVEZXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBOzs7QUFJTyxTQUFTQSxjQUFULENBQXdCQyxJQUF4QixFQUE4QjtBQUNqQyx1QkFBT0MsZ0JBQU9DLEdBQVAsQ0FBV0MsU0FBbEIsRUFBNkJILElBQTdCO0FBQ0g7O0FBQUE7QUFDREQsY0FBYyxDQUFDSyxXQUFmLEdBQTZCLG9CQUE3QjtBQUVBOzs7O0FBSU8sU0FBU0MsaUJBQVQsQ0FBMkJMLElBQTNCLEVBQWlDO0FBQ3BDLFNBQU9NLGNBQUtDLEdBQUwsQ0FBU04sZ0JBQU9DLEdBQVAsQ0FBV00sTUFBcEIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRUMsb0JBQU9DLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLFlBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRlAsSUFQRSxDQU9HLDZCQUFVO0FBQ1pRLElBQUFBLElBQUksRUFBRSxTQURNO0FBRVpDLElBQUFBLFFBQVEsRUFBRSxTQUZFO0FBR1pDLElBQUFBLE9BQU8sRUFBRSxLQUhHO0FBSVpqQixJQUFBQSxHQUFHLEVBQUU7QUFDRE0sTUFBQUEsTUFBTSxFQUFFLFlBRFA7QUFFRFksTUFBQUEsT0FBTyxFQUFFO0FBRlIsS0FKTztBQVFaQyxJQUFBQSxPQUFPLEVBQUU7QUFSRyxHQUFWLENBUEgsRUFpQkZaLElBakJFLENBaUJHSCxjQUFLZ0IsSUFBTCxDQUFVckIsZ0JBQU9DLEdBQVAsQ0FBV3FCLGtCQUFyQixDQWpCSCxDQUFQO0FBa0JIOztBQUFBO0FBQ0RsQixpQkFBaUIsQ0FBQ0QsV0FBbEIsR0FBZ0Msb0JBQWhDOztBQUdPLFNBQVNvQixhQUFULENBQXVCeEIsSUFBdkIsRUFBNkI7QUFDaENNLGdCQUFLQyxHQUFMLENBQVNOLGdCQUFPQyxHQUFQLENBQVdDLFNBQXBCLEVBQ0tNLElBREwsQ0FDVSwwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVDLG9CQUFPQyxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxpQkFEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FEVixFQU9LUCxJQVBMLENBT1VILGNBQUtnQixJQUFMLENBQVVyQixnQkFBT0MsR0FBUCxDQUFXdUIsVUFBckIsQ0FQVjs7QUFTQXpCLEVBQUFBLElBQUk7QUFDUDs7QUFBQTtBQUNEd0IsYUFBYSxDQUFDcEIsV0FBZCxHQUE0Qix5Q0FBNUIiLCJzb3VyY2VSb290IjoiQzpcXHByb2plY3RzXFxteS1wcm9qZWN0XFxLc2VubWFydFxcaXFcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCByaW1yYWYgZnJvbSAncmltcmFmJztcclxuaW1wb3J0IHN2Z1Nwcml0ZSBmcm9tICdndWxwLXN2Zy1zcHJpdGVzJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnXHJcblxyXG5cclxuLypcclxuICog0KPQtNCw0LvRj9C10YIgc3ZnINGB0L/RgNCw0LnRgiAvc3JjL2ltZy9zdmcvc3ByaXRlLnN2Z1xyXG4gKi9cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjbGVhblN2Z1Nwcml0ZShkb25lKSB7XHJcbiAgICByaW1yYWYoY29uZmlnLnN2Zy5nZW5lcmF0ZWQsIGRvbmUpO1xyXG59O1xyXG5jbGVhblN2Z1Nwcml0ZS5kZXNjcmlwdGlvbiA9ICfQo9C00LDQu9GP0LXRgiBzdmcg0YHQv9GA0LDQudGCJztcclxuXHJcbi8qXHJcbiAqINCT0LXQvdGA0LjRgiBzdmcg0YHQv9GA0LDQudGCINC40Lcg0YTQsNC50LvQvtCyIC9zcmMvaW1nL3N2Zy9zcHJpdGUvKi5zdmdcclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTdmdTcHJpdGUoZG9uZSkge1xyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5zdmcuc3ByaXRlKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdTdmcgc3ByaXRlJyxcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVyci50b1N0cmluZygpXHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgIH0pKVxyXG4gICAgICAgIC5waXBlKHN2Z1Nwcml0ZSh7XHJcbiAgICAgICAgICAgIG1vZGU6ICdzeW1ib2xzJyxcclxuICAgICAgICAgICAgc2VsZWN0b3I6ICdpY29uLSVmJyxcclxuICAgICAgICAgICAgY3NzRmlsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHN2Zzoge1xyXG4gICAgICAgICAgICAgICAgc3ByaXRlOiAnc3ByaXRlLnN2ZycsXHJcbiAgICAgICAgICAgICAgICBzeW1ib2xzOiAnc3ByaXRlLnN2ZydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcHJldmlldzogZmFsc2VcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLnN2Zy5zcHJpdGVHZW5lcmF0ZURlc3QpKTtcclxufTtcclxuZ2VuZXJhdGVTdmdTcHJpdGUuZGVzY3JpcHRpb24gPSAn0KHQvtC30LTQsNC10YIgc3ZnINGB0L/RgNCw0LnRgic7XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvcHlTdmdTcHJpdGUoZG9uZSkge1xyXG4gICAgZ3VscC5zcmMoY29uZmlnLnN2Zy5nZW5lcmF0ZWQpXHJcbiAgICAgICAgLnBpcGUocGx1bWJlcih7XHJcbiAgICAgICAgICAgIGVycm9ySGFuZGxlcjogbm90aWZ5Lm9uRXJyb3IoZXJyID0+ICh7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0NvcHkgc3ZnIHNwcml0ZScsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLnN2Zy5zcHJpdGVEZXN0KSk7XHJcblxyXG4gICAgZG9uZSgpO1xyXG59O1xyXG5jb3B5U3ZnU3ByaXRlLmRlc2NyaXB0aW9uID0gJ9Ca0L7Qv9C40YDRg9C10YIgc3ZnINGB0L/RgNCw0LnRgiDQsiAvYnVpbGQg0LTQuNGA0LXQutGC0L7RgNC40Y4nOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "sprite_svg.js"
      ],
      "names": [
        "cleanSvgSprite",
        "done",
        "config",
        "svg",
        "generated",
        "description",
        "generateSvgSprite",
        "gulp",
        "src",
        "sprite",
        "pipe",
        "errorHandler",
        "notify",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "mode",
        "selector",
        "cssFile",
        "symbols",
        "preview",
        "dest",
        "spriteGenerateDest",
        "copySvgSprite",
        "spriteDest"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGA;;;AAIO,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,uBAAOC,gBAAOC,GAAP,CAAWC,SAAlB,EAA6BH,IAA7B;AACH;;AAAA;AACDD,cAAc,CAACK,WAAf,GAA6B,oBAA7B;AAEA;;;;AAIO,SAASC,iBAAT,CAA2BL,IAA3B,EAAiC;AACpC,SAAOM,cAAKC,GAAL,CAASN,gBAAOC,GAAP,CAAWM,MAApB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,YAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFP,IAPE,CAOG,6BAAU;AACZQ,IAAAA,IAAI,EAAE,SADM;AAEZC,IAAAA,QAAQ,EAAE,SAFE;AAGZC,IAAAA,OAAO,EAAE,KAHG;AAIZjB,IAAAA,GAAG,EAAE;AACDM,MAAAA,MAAM,EAAE,YADP;AAEDY,MAAAA,OAAO,EAAE;AAFR,KAJO;AAQZC,IAAAA,OAAO,EAAE;AARG,GAAV,CAPH,EAiBFZ,IAjBE,CAiBGH,cAAKgB,IAAL,CAAUrB,gBAAOC,GAAP,CAAWqB,kBAArB,CAjBH,CAAP;AAkBH;;AAAA;AACDlB,iBAAiB,CAACD,WAAlB,GAAgC,oBAAhC;;AAGO,SAASoB,aAAT,CAAuBxB,IAAvB,EAA6B;AAChCM,gBAAKC,GAAL,CAASN,gBAAOC,GAAP,CAAWC,SAApB,EACKM,IADL,CACU,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,iBAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADV,EAOKP,IAPL,CAOUH,cAAKgB,IAAL,CAAUrB,gBAAOC,GAAP,CAAWuB,UAArB,CAPV;;AASAzB,EAAAA,IAAI;AACP;;AAAA;AACDwB,aAAa,CAACpB,WAAd,GAA4B,yCAA5B",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport rimraf from 'rimraf';\r\nimport svgSprite from 'gulp-svg-sprites';\r\nimport config from '../config'\r\n\r\n\r\n/*\r\n * Удаляет svg спрайт /src/img/svg/sprite.svg\r\n */\r\n\r\nexport function cleanSvgSprite(done) {\r\n    rimraf(config.svg.generated, done);\r\n};\r\ncleanSvgSprite.description = 'Удаляет svg спрайт';\r\n\r\n/*\r\n * Генрит svg спрайт из файлов /src/img/svg/sprite/*.svg\r\n */\r\n\r\nexport function generateSvgSprite(done) {\r\n    return gulp.src(config.svg.sprite)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Svg sprite',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(svgSprite({\r\n            mode: 'symbols',\r\n            selector: 'icon-%f',\r\n            cssFile: false,\r\n            svg: {\r\n                sprite: 'sprite.svg',\r\n                symbols: 'sprite.svg'\r\n            },\r\n            preview: false\r\n        }))\r\n        .pipe(gulp.dest(config.svg.spriteGenerateDest));\r\n};\r\ngenerateSvgSprite.description = 'Создает svg спрайт';\r\n\r\n\r\nexport function copySvgSprite(done) {\r\n    gulp.src(config.svg.generated)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Copy svg sprite',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gulp.dest(config.svg.spriteDest));\r\n\r\n    done();\r\n};\r\ncopySvgSprite.description = 'Копирует svg спрайт в /build директорию';"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\js.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\js.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\js.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\js.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
        "sourceFileName": "js.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.jsInternal = jsInternal;\nexports.jsExternal = jsExternal;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpFileInclude = _interopRequireDefault(require(\"gulp-file-include\"));\n\nvar _gulpUglify = _interopRequireDefault(require(\"gulp-uglify\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сборка js\r\n * Минификация\r\n */\nfunction jsInternal() {\n  _browserSync.default.notify('Compiling js internal');\n\n  return _gulp.default.src(_config.default.js.srcInternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'JS internal',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe((0, _gulpBabel.default)()).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpUglify.default)(_config.default.uglify) : _gulpUtil.default.noop()).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write()).pipe(_gulp.default.dest(_config.default.js.dest));\n}\n\njsInternal.description = 'Сборка internal js';\n\nfunction jsExternal() {\n  _browserSync.default.notify('Compiling js external');\n\n  return _gulp.default.src(_config.default.js.srcExternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'JS external',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpUglify.default)() : _gulpUtil.default.noop()).pipe(_gulp.default.dest(_config.default.js.dest));\n}\n\njsExternal.description = 'Сборка external js';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzLmpzIl0sIm5hbWVzIjpbImpzSW50ZXJuYWwiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJqcyIsInNyY0ludGVybmFsIiwicGlwZSIsImVycm9ySGFuZGxlciIsIm9uRXJyb3IiLCJlcnIiLCJ0aXRsZSIsIm1lc3NhZ2UiLCJ0b1N0cmluZyIsImd1dGlsIiwiZW52Iiwibm9vcCIsInNvdXJjZW1hcHMiLCJpbml0IiwicHJlZml4IiwiYmFzZXBhdGgiLCJpbmRlbnQiLCJ1Z2xpZnkiLCJ3cml0ZSIsImRlc3QiLCJkZXNjcmlwdGlvbiIsImpzRXh0ZXJuYWwiLCJzcmNFeHRlcm5hbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7O0FBS08sU0FBU0EsVUFBVCxHQUFzQjtBQUN6QkMsdUJBQVlDLE1BQVosQ0FBbUIsdUJBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU0MsZ0JBQU9DLEVBQVAsQ0FBVUMsV0FBbkIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRVAsb0JBQU9RLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLGFBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCRCxrQkFBTUUsSUFBTixFQUEzQixHQUEwQ0Msd0JBQVdDLElBQVgsRUFQN0MsRUFRRlgsSUFSRSxDQVFHLDhCQUFZO0FBQ2RZLElBQUFBLE1BQU0sRUFBRSxJQURNO0FBRWRDLElBQUFBLFFBQVEsRUFBRSxPQUZJO0FBR2RDLElBQUFBLE1BQU0sRUFBRTtBQUhNLEdBQVosQ0FSSCxFQWFGZCxJQWJFLENBYUcseUJBYkgsRUFjRkEsSUFkRSxDQWNHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLHlCQUFPWCxnQkFBT2tCLE1BQWQsQ0FBM0IsR0FBbURSLGtCQUFNRSxJQUFOLEVBZHRELEVBZUZULElBZkUsQ0FlR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQkQsa0JBQU1FLElBQU4sRUFBM0IsR0FBMENDLHdCQUFXTSxLQUFYLEVBZjdDLEVBZ0JGaEIsSUFoQkUsQ0FnQkdMLGNBQUtzQixJQUFMLENBQVVwQixnQkFBT0MsRUFBUCxDQUFVbUIsSUFBcEIsQ0FoQkgsQ0FBUDtBQWlCSDs7QUFDRHpCLFVBQVUsQ0FBQzBCLFdBQVgsR0FBeUIsb0JBQXpCOztBQUlPLFNBQVNDLFVBQVQsR0FBc0I7QUFDekIxQix1QkFBWUMsTUFBWixDQUFtQix1QkFBbkI7O0FBRUEsU0FBT0MsY0FBS0MsR0FBTCxDQUFTQyxnQkFBT0MsRUFBUCxDQUFVc0IsV0FBbkIsRUFDRnBCLElBREUsQ0FDRywwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVQLG9CQUFPUSxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxhQUQwQjtBQUVqQ0MsUUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsT0FBTDtBQUFBLEtBQWxCO0FBREosR0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyw4QkFBWTtBQUNkWSxJQUFBQSxNQUFNLEVBQUUsSUFETTtBQUVkQyxJQUFBQSxRQUFRLEVBQUUsT0FGSTtBQUdkQyxJQUFBQSxNQUFNLEVBQUU7QUFITSxHQUFaLENBUEgsRUFZRmQsSUFaRSxDQVlHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLDBCQUEzQixHQUFzQ0Qsa0JBQU1FLElBQU4sRUFaekMsRUFhRlQsSUFiRSxDQWFHTCxjQUFLc0IsSUFBTCxDQUFVcEIsZ0JBQU9DLEVBQVAsQ0FBVW1CLElBQXBCLENBYkgsQ0FBUDtBQWNIOztBQUNERSxVQUFVLENBQUNELFdBQVgsR0FBeUIsb0JBQXpCIiwic291cmNlUm9vdCI6IkM6XFxwcm9qZWN0c1xcbXktcHJvamVjdFxcS3Nlbm1hcnRcXGlxXFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBiYWJlbCBmcm9tICdndWxwLWJhYmVsJztcclxuaW1wb3J0IGd1dGlsIGZyb20gJ2d1bHAtdXRpbCc7XHJcbmltcG9ydCBwbHVtYmVyIGZyb20gJ2d1bHAtcGx1bWJlcic7XHJcbmltcG9ydCBub3RpZnkgZnJvbSAnZ3VscC1ub3RpZnknO1xyXG5pbXBvcnQgYnJvd3NlcnN5bmMgZnJvbSAnYnJvd3Nlci1zeW5jJztcclxuaW1wb3J0IGZpbGVpbmNsdWRlIGZyb20gJ2d1bHAtZmlsZS1pbmNsdWRlJztcclxuaW1wb3J0IHVnbGlmeSBmcm9tICdndWxwLXVnbGlmeSc7XHJcbmltcG9ydCBzb3VyY2VtYXBzIGZyb20gJ2d1bHAtc291cmNlbWFwcyc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0KHQsdC+0YDQutCwIGpzXHJcbiAqINCc0LjQvdC40YTQuNC60LDRhtC40Y9cclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24ganNJbnRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIGpzIGludGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5qcy5zcmNJbnRlcm5hbClcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSlMgaW50ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy5pbml0KCkpXHJcbiAgICAgICAgLnBpcGUoZmlsZWluY2x1ZGUoe1xyXG4gICAgICAgICAgICBwcmVmaXg6ICdAQCcsXHJcbiAgICAgICAgICAgIGJhc2VwYXRoOiAnQGZpbGUnLFxyXG4gICAgICAgICAgICBpbmRlbnQ6IHRydWVcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShiYWJlbCgpKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IHVnbGlmeShjb25maWcudWdsaWZ5KSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndXRpbC5ub29wKCkgOiBzb3VyY2VtYXBzLndyaXRlKCkpXHJcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KGNvbmZpZy5qcy5kZXN0KSk7XHJcbn1cclxuanNJbnRlcm5hbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaW50ZXJuYWwganMnO1xyXG5cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24ganNFeHRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIGpzIGV4dGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5qcy5zcmNFeHRlcm5hbClcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSlMgZXh0ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZmlsZWluY2x1ZGUoe1xyXG4gICAgICAgICAgICBwcmVmaXg6ICdAQCcsXHJcbiAgICAgICAgICAgIGJhc2VwYXRoOiAnQGZpbGUnLFxyXG4gICAgICAgICAgICBpbmRlbnQ6IHRydWVcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyB1Z2xpZnkoKSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmpzLmRlc3QpKTtcclxufVxyXG5qc0V4dGVybmFsLmRlc2NyaXB0aW9uID0gJ9Ch0LHQvtGA0LrQsCBleHRlcm5hbCBqcyc7Il19",
    "map": {
      "version": 3,
      "sources": [
        "js.js"
      ],
      "names": [
        "jsInternal",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "config",
        "js",
        "srcInternal",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "gutil",
        "env",
        "noop",
        "sourcemaps",
        "init",
        "prefix",
        "basepath",
        "indent",
        "uglify",
        "write",
        "dest",
        "description",
        "jsExternal",
        "srcExternal"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;AAKO,SAASA,UAAT,GAAsB;AACzBC,uBAAYC,MAAZ,CAAmB,uBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAOC,EAAP,CAAUC,WAAnB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,aAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,8BAAY;AACdY,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CARH,EAaFd,IAbE,CAaG,yBAbH,EAcFA,IAdE,CAcGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,yBAAOX,gBAAOkB,MAAd,CAA3B,GAAmDR,kBAAME,IAAN,EAdtD,EAeFT,IAfE,CAeGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWM,KAAX,EAf7C,EAgBFhB,IAhBE,CAgBGL,cAAKsB,IAAL,CAAUpB,gBAAOC,EAAP,CAAUmB,IAApB,CAhBH,CAAP;AAiBH;;AACDzB,UAAU,CAAC0B,WAAX,GAAyB,oBAAzB;;AAIO,SAASC,UAAT,GAAsB;AACzB1B,uBAAYC,MAAZ,CAAmB,uBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAOC,EAAP,CAAUsB,WAAnB,EACFpB,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,aAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOG,8BAAY;AACdY,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CAPH,EAYFd,IAZE,CAYGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAA3B,GAAsCD,kBAAME,IAAN,EAZzC,EAaFT,IAbE,CAaGL,cAAKsB,IAAL,CAAUpB,gBAAOC,EAAP,CAAUmB,IAApB,CAbH,CAAP;AAcH;;AACDE,UAAU,CAACD,WAAX,GAAyB,oBAAzB",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport babel from 'gulp-babel';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport fileinclude from 'gulp-file-include';\r\nimport uglify from 'gulp-uglify';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport config from '../config'\r\n\r\n/*\r\n * Сборка js\r\n * Минификация\r\n */\r\n\r\nexport function jsInternal() {\r\n    browsersync.notify('Compiling js internal');\r\n\r\n    return gulp.src(config.js.srcInternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'JS internal',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(babel())\r\n        .pipe(gutil.env.env === 'prod' ? uglify(config.uglify) : gutil.noop())\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write())\r\n        .pipe(gulp.dest(config.js.dest));\r\n}\r\njsInternal.description = 'Сборка internal js';\r\n\r\n\r\n\r\nexport function jsExternal() {\r\n    browsersync.notify('Compiling js external');\r\n\r\n    return gulp.src(config.js.srcExternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'JS external',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? uglify() : gutil.noop())\r\n        .pipe(gulp.dest(config.js.dest));\r\n}\r\njsExternal.description = 'Сборка external js';"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\\\\gulp\\\\tasks\\\\postcss.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\Ksenmart\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\Ksenmart\\iq",
      "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\postcss.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\Ksenmart\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\postcss.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\postcss.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
        "sourceFileName": "postcss.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postcssInternal = postcssInternal;\nexports.postcssExternal = postcssExternal;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpRename = _interopRequireDefault(require(\"gulp-rename\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpCssnano = _interopRequireDefault(require(\"gulp-cssnano\"));\n\nvar _postcssInlineSvg = _interopRequireDefault(require(\"postcss-inline-svg\"));\n\nvar _postcssImport = _interopRequireDefault(require(\"postcss-import\"));\n\nvar _precss = _interopRequireDefault(require(\"precss\"));\n\nvar _postcssSassyMixins = _interopRequireDefault(require(\"postcss-sassy-mixins\"));\n\nvar _lost = _interopRequireDefault(require(\"lost\"));\n\nvar _postcssCssnext = _interopRequireDefault(require(\"postcss-cssnext\"));\n\nvar _postcssPxtorem = _interopRequireDefault(require(\"postcss-pxtorem\"));\n\nvar _postcssHexrgba = _interopRequireDefault(require(\"postcss-hexrgba\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Компиляция POSTCSS в CSS\r\n * Создание sourcemaps\r\n * Минификация\r\n */\nvar processors = [(0, _postcssImport.default)(), (0, _postcssSassyMixins.default)(), (0, _precss.default)(), (0, _lost.default)(), (0, _postcssPxtorem.default)(), (0, _postcssHexrgba.default)(), (0, _postcssInlineSvg.default)(_config.default.svg.svgInStyle), (0, _postcssCssnext.default)()];\n\nfunction postcssInternal() {\n  _browserSync.default.notify('Compiling CSS internal');\n\n  return _gulp.default.src(_config.default.css.srcInternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'CSS internal',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpPostcss.default)(processors)).pipe((0, _gulpAutoprefixer.default)()).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpCssnano.default)(_config.default.cssnano) : _gulpUtil.default.noop()).pipe((0, _gulpRename.default)({\n    extname: '.css'\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write('.')).pipe(_gulp.default.dest(_config.default.css.dest));\n}\n\n;\npostcssInternal.description = 'Сборка internal css';\n\nfunction postcssExternal() {\n  _browserSync.default.notify('Compiling CSS external');\n\n  return _gulp.default.src(_config.default.css.srcExternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'CSS external',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpPostcss.default)([(0, _postcssImport.default)()])).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpCssnano.default)(_config.default.cssnano) : _gulpUtil.default.noop()).pipe((0, _gulpRename.default)({\n    extname: '.css'\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write('.')).pipe(_gulp.default.dest(_config.default.css.dest));\n}\n\n;\npostcssExternal.description = 'Сборка external css';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3Rjc3MuanMiXSwibmFtZXMiOlsicHJvY2Vzc29ycyIsImNvbmZpZyIsInN2ZyIsInN2Z0luU3R5bGUiLCJwb3N0Y3NzSW50ZXJuYWwiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjc3MiLCJzcmNJbnRlcm5hbCIsInBpcGUiLCJlcnJvckhhbmRsZXIiLCJvbkVycm9yIiwiZXJyIiwidGl0bGUiLCJtZXNzYWdlIiwidG9TdHJpbmciLCJndXRpbCIsImVudiIsIm5vb3AiLCJzb3VyY2VtYXBzIiwiaW5pdCIsImNzc25hbm8iLCJleHRuYW1lIiwid3JpdGUiLCJkZXN0IiwiZGVzY3JpcHRpb24iLCJwb3N0Y3NzRXh0ZXJuYWwiLCJzcmNFeHRlcm5hbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7OztBQU1BLElBQU1BLFVBQVUsR0FBRyxDQUNmLDZCQURlLEVBRWYsa0NBRmUsRUFHZixzQkFIZSxFQUlmLG9CQUplLEVBS2YsOEJBTGUsRUFNZiw4QkFOZSxFQU9mLCtCQUFVQyxnQkFBT0MsR0FBUCxDQUFXQyxVQUFyQixDQVBlLEVBUWYsOEJBUmUsQ0FBbkI7O0FBYU8sU0FBU0MsZUFBVCxHQUEyQjtBQUM5QkMsdUJBQVlDLE1BQVosQ0FBbUIsd0JBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU1AsZ0JBQU9RLEdBQVAsQ0FBV0MsV0FBcEIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRU4sb0JBQU9PLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLGNBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCRCxrQkFBTUUsSUFBTixFQUEzQixHQUEwQ0Msd0JBQVdDLElBQVgsRUFQN0MsRUFRRlgsSUFSRSxDQVFHLDBCQUFZWCxVQUFaLENBUkgsRUFTRlcsSUFURSxDQVNHLGdDQVRILEVBVUZBLElBVkUsQ0FVR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQiwwQkFBUWxCLGdCQUFPc0IsT0FBZixDQUEzQixHQUFxREwsa0JBQU1FLElBQU4sRUFWeEQsRUFXRlQsSUFYRSxDQVdHLHlCQUFPO0FBQUNhLElBQUFBLE9BQU8sRUFBRTtBQUFWLEdBQVAsQ0FYSCxFQVlGYixJQVpFLENBWUdPLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJELGtCQUFNRSxJQUFOLEVBQTNCLEdBQTBDQyx3QkFBV0ksS0FBWCxDQUFpQixHQUFqQixDQVo3QyxFQWFGZCxJQWJFLENBYUdKLGNBQUttQixJQUFMLENBQVV6QixnQkFBT1EsR0FBUCxDQUFXaUIsSUFBckIsQ0FiSCxDQUFQO0FBY0g7O0FBQUE7QUFDRHRCLGVBQWUsQ0FBQ3VCLFdBQWhCLEdBQThCLHFCQUE5Qjs7QUFHTyxTQUFTQyxlQUFULEdBQTJCO0FBQzlCdkIsdUJBQVlDLE1BQVosQ0FBbUIsd0JBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU1AsZ0JBQU9RLEdBQVAsQ0FBV29CLFdBQXBCLEVBQ0ZsQixJQURFLENBQ0csMEJBQVE7QUFDVkMsSUFBQUEsWUFBWSxFQUFFTixvQkFBT08sT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxhQUFLO0FBQ2pDQyxRQUFBQSxLQUFLLEVBQUUsY0FEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FESCxFQU9GTixJQVBFLENBT0dPLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJELGtCQUFNRSxJQUFOLEVBQTNCLEdBQTBDQyx3QkFBV0MsSUFBWCxFQVA3QyxFQVFGWCxJQVJFLENBUUcsMEJBQVksQ0FBQyw2QkFBRCxDQUFaLENBUkgsRUFTRkEsSUFURSxDQVNHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLDBCQUFRbEIsZ0JBQU9zQixPQUFmLENBQTNCLEdBQXFETCxrQkFBTUUsSUFBTixFQVR4RCxFQVVGVCxJQVZFLENBVUcseUJBQU87QUFBQ2EsSUFBQUEsT0FBTyxFQUFFO0FBQVYsR0FBUCxDQVZILEVBV0ZiLElBWEUsQ0FXR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQkQsa0JBQU1FLElBQU4sRUFBM0IsR0FBMENDLHdCQUFXSSxLQUFYLENBQWlCLEdBQWpCLENBWDdDLEVBWUZkLElBWkUsQ0FZR0osY0FBS21CLElBQUwsQ0FBVXpCLGdCQUFPUSxHQUFQLENBQVdpQixJQUFyQixDQVpILENBQVA7QUFhSDs7QUFBQTtBQUNERSxlQUFlLENBQUNELFdBQWhCLEdBQThCLHFCQUE5QiIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXEtzZW5tYXJ0XFxpcVxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xyXG5pbXBvcnQgZ3V0aWwgZnJvbSAnZ3VscC11dGlsJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgcmVuYW1lIGZyb20gJ2d1bHAtcmVuYW1lJztcclxuaW1wb3J0IHNvdXJjZW1hcHMgZnJvbSAnZ3VscC1zb3VyY2VtYXBzJztcclxuaW1wb3J0IHByZWZpeGVyIGZyb20gJ2d1bHAtYXV0b3ByZWZpeGVyJztcclxuaW1wb3J0IGd1bHBQb3N0Y3NzIGZyb20gJ2d1bHAtcG9zdGNzcyc7XHJcbmltcG9ydCBjc3NuYW5vIGZyb20gJ2d1bHAtY3NzbmFubyc7XHJcbmltcG9ydCBpbmxpbmVTdmcgZnJvbSAncG9zdGNzcy1pbmxpbmUtc3ZnJztcclxuaW1wb3J0IGF0SW1wb3J0IGZyb20gJ3Bvc3Rjc3MtaW1wb3J0JztcclxuaW1wb3J0IHByZWNzcyBmcm9tICdwcmVjc3MnO1xyXG5pbXBvcnQgbWl4aW5zIGZyb20gJ3Bvc3Rjc3Mtc2Fzc3ktbWl4aW5zJztcclxuaW1wb3J0IGxvc3QgZnJvbSAnbG9zdCc7XHJcbmltcG9ydCBuZXh0IGZyb20gJ3Bvc3Rjc3MtY3NzbmV4dCc7XHJcbmltcG9ydCBweHRvcmVtIGZyb20gJ3Bvc3Rjc3MtcHh0b3JlbSc7XHJcbmltcG9ydCBoZXhyZ2JhIGZyb20gJ3Bvc3Rjc3MtaGV4cmdiYSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJztcclxuXHJcbi8qXHJcbiAqINCa0L7QvNC/0LjQu9GP0YbQuNGPIFBPU1RDU1Mg0LIgQ1NTXHJcbiAqINCh0L7Qt9C00LDQvdC40LUgc291cmNlbWFwc1xyXG4gKiDQnNC40L3QuNGE0LjQutCw0YbQuNGPXHJcbiAqL1xyXG5cclxuY29uc3QgcHJvY2Vzc29ycyA9IFtcclxuICAgIGF0SW1wb3J0KCksXHJcbiAgICBtaXhpbnMoKSxcclxuICAgIHByZWNzcygpLFxyXG4gICAgbG9zdCgpLFxyXG4gICAgcHh0b3JlbSgpLFxyXG4gICAgaGV4cmdiYSgpLFxyXG4gICAgaW5saW5lU3ZnKGNvbmZpZy5zdmcuc3ZnSW5TdHlsZSksXHJcbiAgICBuZXh0KClcclxuXTtcclxuXHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBvc3Rjc3NJbnRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIENTUyBpbnRlcm5hbCcpO1xyXG5cclxuICAgIHJldHVybiBndWxwLnNyYyhjb25maWcuY3NzLnNyY0ludGVybmFsKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdDU1MgaW50ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy5pbml0KCkpXHJcbiAgICAgICAgLnBpcGUoZ3VscFBvc3Rjc3MocHJvY2Vzc29ycykpXHJcbiAgICAgICAgLnBpcGUocHJlZml4ZXIoKSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBjc3NuYW5vKGNvbmZpZy5jc3NuYW5vKSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShyZW5hbWUoe2V4dG5hbWU6ICcuY3NzJ30pKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IGd1dGlsLm5vb3AoKSA6IHNvdXJjZW1hcHMud3JpdGUoJy4nKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmNzcy5kZXN0KSk7XHJcbn07XHJcbnBvc3Rjc3NJbnRlcm5hbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaW50ZXJuYWwgY3NzJztcclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcG9zdGNzc0V4dGVybmFsKCkge1xyXG4gICAgYnJvd3NlcnN5bmMubm90aWZ5KCdDb21waWxpbmcgQ1NTIGV4dGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5jc3Muc3JjRXh0ZXJuYWwpXHJcbiAgICAgICAgLnBpcGUocGx1bWJlcih7XHJcbiAgICAgICAgICAgIGVycm9ySGFuZGxlcjogbm90aWZ5Lm9uRXJyb3IoZXJyID0+ICh7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0NTUyBleHRlcm5hbCcsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndXRpbC5ub29wKCkgOiBzb3VyY2VtYXBzLmluaXQoKSlcclxuICAgICAgICAucGlwZShndWxwUG9zdGNzcyhbYXRJbXBvcnQoKV0pKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IGNzc25hbm8oY29uZmlnLmNzc25hbm8pIDogZ3V0aWwubm9vcCgpKVxyXG4gICAgICAgIC5waXBlKHJlbmFtZSh7ZXh0bmFtZTogJy5jc3MnfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy53cml0ZSgnLicpKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChjb25maWcuY3NzLmRlc3QpKTtcclxufTtcclxucG9zdGNzc0V4dGVybmFsLmRlc2NyaXB0aW9uID0gJ9Ch0LHQvtGA0LrQsCBleHRlcm5hbCBjc3MnO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "postcss.js"
      ],
      "names": [
        "processors",
        "config",
        "svg",
        "svgInStyle",
        "postcssInternal",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "css",
        "srcInternal",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "gutil",
        "env",
        "noop",
        "sourcemaps",
        "init",
        "cssnano",
        "extname",
        "write",
        "dest",
        "description",
        "postcssExternal",
        "srcExternal"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;AAMA,IAAMA,UAAU,GAAG,CACf,6BADe,EAEf,kCAFe,EAGf,sBAHe,EAIf,oBAJe,EAKf,8BALe,EAMf,8BANe,EAOf,+BAAUC,gBAAOC,GAAP,CAAWC,UAArB,CAPe,EAQf,8BARe,CAAnB;;AAaO,SAASC,eAAT,GAA2B;AAC9BC,uBAAYC,MAAZ,CAAmB,wBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASP,gBAAOQ,GAAP,CAAWC,WAApB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEN,oBAAOO,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,cAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,0BAAYX,UAAZ,CARH,EASFW,IATE,CASG,gCATH,EAUFA,IAVE,CAUGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAAQlB,gBAAOsB,OAAf,CAA3B,GAAqDL,kBAAME,IAAN,EAVxD,EAWFT,IAXE,CAWG,yBAAO;AAACa,IAAAA,OAAO,EAAE;AAAV,GAAP,CAXH,EAYFb,IAZE,CAYGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWI,KAAX,CAAiB,GAAjB,CAZ7C,EAaFd,IAbE,CAaGJ,cAAKmB,IAAL,CAAUzB,gBAAOQ,GAAP,CAAWiB,IAArB,CAbH,CAAP;AAcH;;AAAA;AACDtB,eAAe,CAACuB,WAAhB,GAA8B,qBAA9B;;AAGO,SAASC,eAAT,GAA2B;AAC9BvB,uBAAYC,MAAZ,CAAmB,wBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASP,gBAAOQ,GAAP,CAAWoB,WAApB,EACFlB,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEN,oBAAOO,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,cAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,0BAAY,CAAC,6BAAD,CAAZ,CARH,EASFA,IATE,CASGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAAQlB,gBAAOsB,OAAf,CAA3B,GAAqDL,kBAAME,IAAN,EATxD,EAUFT,IAVE,CAUG,yBAAO;AAACa,IAAAA,OAAO,EAAE;AAAV,GAAP,CAVH,EAWFb,IAXE,CAWGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWI,KAAX,CAAiB,GAAjB,CAX7C,EAYFd,IAZE,CAYGJ,cAAKmB,IAAL,CAAUzB,gBAAOQ,GAAP,CAAWiB,IAArB,CAZH,CAAP;AAaH;;AAAA;AACDE,eAAe,CAACD,WAAhB,GAA8B,qBAA9B",
      "sourceRoot": "C:\\projects\\my-project\\Ksenmart\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport rename from 'gulp-rename';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport prefixer from 'gulp-autoprefixer';\r\nimport gulpPostcss from 'gulp-postcss';\r\nimport cssnano from 'gulp-cssnano';\r\nimport inlineSvg from 'postcss-inline-svg';\r\nimport atImport from 'postcss-import';\r\nimport precss from 'precss';\r\nimport mixins from 'postcss-sassy-mixins';\r\nimport lost from 'lost';\r\nimport next from 'postcss-cssnext';\r\nimport pxtorem from 'postcss-pxtorem';\r\nimport hexrgba from 'postcss-hexrgba';\r\nimport config from '../config';\r\n\r\n/*\r\n * Компиляция POSTCSS в CSS\r\n * Создание sourcemaps\r\n * Минификация\r\n */\r\n\r\nconst processors = [\r\n    atImport(),\r\n    mixins(),\r\n    precss(),\r\n    lost(),\r\n    pxtorem(),\r\n    hexrgba(),\r\n    inlineSvg(config.svg.svgInStyle),\r\n    next()\r\n];\r\n\r\n\r\n\r\nexport function postcssInternal() {\r\n    browsersync.notify('Compiling CSS internal');\r\n\r\n    return gulp.src(config.css.srcInternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'CSS internal',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(gulpPostcss(processors))\r\n        .pipe(prefixer())\r\n        .pipe(gutil.env.env === 'prod' ? cssnano(config.cssnano) : gutil.noop())\r\n        .pipe(rename({extname: '.css'}))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write('.'))\r\n        .pipe(gulp.dest(config.css.dest));\r\n};\r\npostcssInternal.description = 'Сборка internal css';\r\n\r\n\r\nexport function postcssExternal() {\r\n    browsersync.notify('Compiling CSS external');\r\n\r\n    return gulp.src(config.css.srcExternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'CSS external',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(gulpPostcss([atImport()]))\r\n        .pipe(gutil.env.env === 'prod' ? cssnano(config.cssnano) : gutil.noop())\r\n        .pipe(rename({extname: '.css'}))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write('.'))\r\n        .pipe(gulp.dest(config.css.dest));\r\n};\r\npostcssExternal.description = 'Сборка external css';\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _serve = _interopRequireDefault(require(\"./gulp/tasks/serve\"));\n\nvar _watch = _interopRequireDefault(require(\"./gulp/tasks/watch\"));\n\nvar _clean = _interopRequireDefault(require(\"./gulp/tasks/clean\"));\n\nvar _html = _interopRequireDefault(require(\"./gulp/tasks/html\"));\n\nvar _fonts = _interopRequireDefault(require(\"./gulp/tasks/fonts\"));\n\nvar _images = _interopRequireDefault(require(\"./gulp/tasks/images\"));\n\nvar _sprite_svg = require(\"./gulp/tasks/sprite_svg\");\n\nvar _js = require(\"./gulp/tasks/js\");\n\nvar _postcss = require(\"./gulp/tasks/postcss\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_gulp.default.task(_serve.default);\n\n_gulp.default.task(_watch.default);\n\n_gulp.default.task(_clean.default);\n\n_gulp.default.task(_html.default);\n\n_gulp.default.task(_fonts.default);\n\n_gulp.default.task(_images.default);\n\n_gulp.default.task(_sprite_svg.cleanSvgSprite);\n\n_gulp.default.task(_sprite_svg.generateSvgSprite);\n\n_gulp.default.task(_sprite_svg.copySvgSprite);\n\n_gulp.default.task(_js.jsInternal);\n\n_gulp.default.task(_js.jsExternal);\n\n_gulp.default.task(_postcss.postcssInternal);\n\n_gulp.default.task(_postcss.postcssExternal);\n\n_gulp.default.task('js', _gulp.default.parallel('jsInternal', 'jsExternal'));\n\n_gulp.default.task('postcss', _gulp.default.parallel('postcssInternal', 'postcssExternal'));\n\n_gulp.default.task('spriteSvg', _gulp.default.series('cleanSvgSprite', _gulp.default.parallel('generateSvgSprite'), 'copySvgSprite', 'html'));\n\n_gulp.default.task('build', _gulpUtil.default.env.env === 'prod' ? _gulp.default.series('clean', _gulp.default.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'images') : _gulp.default.series('clean', _gulp.default.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'html', 'images'));\n\n_gulp.default.task('default', _gulpUtil.default.env.env === 'prod' ? _gulp.default.series('build') : _gulp.default.series('build', _gulp.default.parallel('serve', 'watch')));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJ0YXNrIiwic2VydmUiLCJ3YXRjaCIsImNsZWFuIiwiaHRtbCIsImZvbnRzIiwiaW1hZ2VzIiwiY2xlYW5TdmdTcHJpdGUiLCJnZW5lcmF0ZVN2Z1Nwcml0ZSIsImNvcHlTdmdTcHJpdGUiLCJqc0ludGVybmFsIiwianNFeHRlcm5hbCIsInBvc3Rjc3NJbnRlcm5hbCIsInBvc3Rjc3NFeHRlcm5hbCIsInBhcmFsbGVsIiwic2VyaWVzIiwiZ3V0aWwiLCJlbnYiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFHQUEsY0FBS0MsSUFBTCxDQUFVQyxjQUFWOztBQUNBRixjQUFLQyxJQUFMLENBQVVFLGNBQVY7O0FBQ0FILGNBQUtDLElBQUwsQ0FBVUcsY0FBVjs7QUFDQUosY0FBS0MsSUFBTCxDQUFVSSxhQUFWOztBQUNBTCxjQUFLQyxJQUFMLENBQVVLLGNBQVY7O0FBQ0FOLGNBQUtDLElBQUwsQ0FBVU0sZUFBVjs7QUFDQVAsY0FBS0MsSUFBTCxDQUFVTywwQkFBVjs7QUFDQVIsY0FBS0MsSUFBTCxDQUFVUSw2QkFBVjs7QUFDQVQsY0FBS0MsSUFBTCxDQUFVUyx5QkFBVjs7QUFDQVYsY0FBS0MsSUFBTCxDQUFVVSxjQUFWOztBQUNBWCxjQUFLQyxJQUFMLENBQVVXLGNBQVY7O0FBQ0FaLGNBQUtDLElBQUwsQ0FBVVksd0JBQVY7O0FBQ0FiLGNBQUtDLElBQUwsQ0FBVWEsd0JBQVY7O0FBR0FkLGNBQUtDLElBQUwsQ0FBVSxJQUFWLEVBQWdCRCxjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixDQUFoQjs7QUFDQWYsY0FBS0MsSUFBTCxDQUFVLFNBQVYsRUFBcUJELGNBQUtlLFFBQUwsQ0FBYyxpQkFBZCxFQUFpQyxpQkFBakMsQ0FBckI7O0FBQ0FmLGNBQUtDLElBQUwsQ0FBVSxXQUFWLEVBQXVCRCxjQUFLZ0IsTUFBTCxDQUFZLGdCQUFaLEVBQThCaEIsY0FBS2UsUUFBTCxDQUFjLG1CQUFkLENBQTlCLEVBQWtFLGVBQWxFLEVBQW1GLE1BQW5GLENBQXZCOztBQUdBZixjQUFLQyxJQUFMLENBQVUsT0FBVixFQUFtQmdCLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJsQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixFQUEwQyxpQkFBMUMsRUFBNkQsaUJBQTdELEVBQWdGLFdBQWhGLEVBQTZGLE9BQTdGLENBQXJCLEVBQTRILFFBQTVILENBQTNCLEdBQW1LZixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixFQUEwQyxpQkFBMUMsRUFBNkQsaUJBQTdELEVBQWdGLFdBQWhGLEVBQTZGLE9BQTdGLENBQXJCLEVBQTRILE1BQTVILEVBQW9JLFFBQXBJLENBQXRMOztBQUVBZixjQUFLQyxJQUFMLENBQVUsU0FBVixFQUFxQmdCLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJsQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosQ0FBM0IsR0FBa0RoQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsT0FBZCxFQUF1QixPQUF2QixDQUFyQixDQUF2RSIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXElRMDA3XFxpcVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBndXRpbCBmcm9tICdndWxwLXV0aWwnO1xyXG5cclxuaW1wb3J0IHNlcnZlIGZyb20gJy4vZ3VscC90YXNrcy9zZXJ2ZSc7XHJcbmltcG9ydCB3YXRjaCBmcm9tICcuL2d1bHAvdGFza3Mvd2F0Y2gnO1xyXG5pbXBvcnQgY2xlYW4gZnJvbSAnLi9ndWxwL3Rhc2tzL2NsZWFuJztcclxuaW1wb3J0IGh0bWwgZnJvbSAnLi9ndWxwL3Rhc2tzL2h0bWwnO1xyXG5pbXBvcnQgZm9udHMgZnJvbSAnLi9ndWxwL3Rhc2tzL2ZvbnRzJztcclxuaW1wb3J0IGltYWdlcyBmcm9tICcuL2d1bHAvdGFza3MvaW1hZ2VzJztcclxuaW1wb3J0IHtjbGVhblN2Z1Nwcml0ZSwgZ2VuZXJhdGVTdmdTcHJpdGUsIGNvcHlTdmdTcHJpdGV9IGZyb20gJy4vZ3VscC90YXNrcy9zcHJpdGVfc3ZnJztcclxuaW1wb3J0IHtqc0ludGVybmFsLCBqc0V4dGVybmFsfSBmcm9tICcuL2d1bHAvdGFza3MvanMnO1xyXG5pbXBvcnQge3Bvc3Rjc3NJbnRlcm5hbCwgcG9zdGNzc0V4dGVybmFsfSBmcm9tICcuL2d1bHAvdGFza3MvcG9zdGNzcyc7XHJcblxyXG5cclxuZ3VscC50YXNrKHNlcnZlKTtcclxuZ3VscC50YXNrKHdhdGNoKTtcclxuZ3VscC50YXNrKGNsZWFuKTtcclxuZ3VscC50YXNrKGh0bWwpO1xyXG5ndWxwLnRhc2soZm9udHMpO1xyXG5ndWxwLnRhc2soaW1hZ2VzKTtcclxuZ3VscC50YXNrKGNsZWFuU3ZnU3ByaXRlKTtcclxuZ3VscC50YXNrKGdlbmVyYXRlU3ZnU3ByaXRlKTtcclxuZ3VscC50YXNrKGNvcHlTdmdTcHJpdGUpO1xyXG5ndWxwLnRhc2soanNJbnRlcm5hbCk7XHJcbmd1bHAudGFzayhqc0V4dGVybmFsKTtcclxuZ3VscC50YXNrKHBvc3Rjc3NJbnRlcm5hbCk7XHJcbmd1bHAudGFzayhwb3N0Y3NzRXh0ZXJuYWwpO1xyXG5cclxuXHJcbmd1bHAudGFzaygnanMnLCBndWxwLnBhcmFsbGVsKCdqc0ludGVybmFsJywgJ2pzRXh0ZXJuYWwnKSk7XHJcbmd1bHAudGFzaygncG9zdGNzcycsIGd1bHAucGFyYWxsZWwoJ3Bvc3Rjc3NJbnRlcm5hbCcsICdwb3N0Y3NzRXh0ZXJuYWwnKSk7XHJcbmd1bHAudGFzaygnc3ByaXRlU3ZnJywgZ3VscC5zZXJpZXMoJ2NsZWFuU3ZnU3ByaXRlJywgZ3VscC5wYXJhbGxlbCgnZ2VuZXJhdGVTdmdTcHJpdGUnKSwgJ2NvcHlTdmdTcHJpdGUnLCAnaHRtbCcpKTtcclxuXHJcblxyXG5ndWxwLnRhc2soJ2J1aWxkJywgZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3VscC5zZXJpZXMoJ2NsZWFuJywgZ3VscC5wYXJhbGxlbCgnanNJbnRlcm5hbCcsICdqc0V4dGVybmFsJywgJ3Bvc3Rjc3NJbnRlcm5hbCcsICdwb3N0Y3NzRXh0ZXJuYWwnLCAnc3ByaXRlU3ZnJywgJ2ZvbnRzJyksICdpbWFnZXMnKSA6IGd1bHAuc2VyaWVzKCdjbGVhbicsIGd1bHAucGFyYWxsZWwoJ2pzSW50ZXJuYWwnLCAnanNFeHRlcm5hbCcsICdwb3N0Y3NzSW50ZXJuYWwnLCAncG9zdGNzc0V4dGVybmFsJywgJ3Nwcml0ZVN2ZycsICdmb250cycpLCAnaHRtbCcsICdpbWFnZXMnKSk7XHJcblxyXG5ndWxwLnRhc2soJ2RlZmF1bHQnLCBndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndWxwLnNlcmllcygnYnVpbGQnKSA6IGd1bHAuc2VyaWVzKCdidWlsZCcsIGd1bHAucGFyYWxsZWwoJ3NlcnZlJywgJ3dhdGNoJykpKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "task",
        "serve",
        "watch",
        "clean",
        "html",
        "fonts",
        "images",
        "cleanSvgSprite",
        "generateSvgSprite",
        "copySvgSprite",
        "jsInternal",
        "jsExternal",
        "postcssInternal",
        "postcssExternal",
        "parallel",
        "series",
        "gutil",
        "env"
      ],
      "mappings": ";;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGAA,cAAKC,IAAL,CAAUC,cAAV;;AACAF,cAAKC,IAAL,CAAUE,cAAV;;AACAH,cAAKC,IAAL,CAAUG,cAAV;;AACAJ,cAAKC,IAAL,CAAUI,aAAV;;AACAL,cAAKC,IAAL,CAAUK,cAAV;;AACAN,cAAKC,IAAL,CAAUM,eAAV;;AACAP,cAAKC,IAAL,CAAUO,0BAAV;;AACAR,cAAKC,IAAL,CAAUQ,6BAAV;;AACAT,cAAKC,IAAL,CAAUS,yBAAV;;AACAV,cAAKC,IAAL,CAAUU,cAAV;;AACAX,cAAKC,IAAL,CAAUW,cAAV;;AACAZ,cAAKC,IAAL,CAAUY,wBAAV;;AACAb,cAAKC,IAAL,CAAUa,wBAAV;;AAGAd,cAAKC,IAAL,CAAU,IAAV,EAAgBD,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,CAAhB;;AACAf,cAAKC,IAAL,CAAU,SAAV,EAAqBD,cAAKe,QAAL,CAAc,iBAAd,EAAiC,iBAAjC,CAArB;;AACAf,cAAKC,IAAL,CAAU,WAAV,EAAuBD,cAAKgB,MAAL,CAAY,gBAAZ,EAA8BhB,cAAKe,QAAL,CAAc,mBAAd,CAA9B,EAAkE,eAAlE,EAAmF,MAAnF,CAAvB;;AAGAf,cAAKC,IAAL,CAAU,OAAV,EAAmBgB,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BlB,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,EAA0C,iBAA1C,EAA6D,iBAA7D,EAAgF,WAAhF,EAA6F,OAA7F,CAArB,EAA4H,QAA5H,CAA3B,GAAmKf,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,EAA0C,iBAA1C,EAA6D,iBAA7D,EAAgF,WAAhF,EAA6F,OAA7F,CAArB,EAA4H,MAA5H,EAAoI,QAApI,CAAtL;;AAEAf,cAAKC,IAAL,CAAU,SAAV,EAAqBgB,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BlB,cAAKgB,MAAL,CAAY,OAAZ,CAA3B,GAAkDhB,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,OAAd,EAAuB,OAAvB,CAArB,CAAvE",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\n\r\nimport serve from './gulp/tasks/serve';\r\nimport watch from './gulp/tasks/watch';\r\nimport clean from './gulp/tasks/clean';\r\nimport html from './gulp/tasks/html';\r\nimport fonts from './gulp/tasks/fonts';\r\nimport images from './gulp/tasks/images';\r\nimport {cleanSvgSprite, generateSvgSprite, copySvgSprite} from './gulp/tasks/sprite_svg';\r\nimport {jsInternal, jsExternal} from './gulp/tasks/js';\r\nimport {postcssInternal, postcssExternal} from './gulp/tasks/postcss';\r\n\r\n\r\ngulp.task(serve);\r\ngulp.task(watch);\r\ngulp.task(clean);\r\ngulp.task(html);\r\ngulp.task(fonts);\r\ngulp.task(images);\r\ngulp.task(cleanSvgSprite);\r\ngulp.task(generateSvgSprite);\r\ngulp.task(copySvgSprite);\r\ngulp.task(jsInternal);\r\ngulp.task(jsExternal);\r\ngulp.task(postcssInternal);\r\ngulp.task(postcssExternal);\r\n\r\n\r\ngulp.task('js', gulp.parallel('jsInternal', 'jsExternal'));\r\ngulp.task('postcss', gulp.parallel('postcssInternal', 'postcssExternal'));\r\ngulp.task('spriteSvg', gulp.series('cleanSvgSprite', gulp.parallel('generateSvgSprite'), 'copySvgSprite', 'html'));\r\n\r\n\r\ngulp.task('build', gutil.env.env === 'prod' ? gulp.series('clean', gulp.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'images') : gulp.series('clean', gulp.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'html', 'images'));\r\n\r\ngulp.task('default', gutil.env.env === 'prod' ? gulp.series('build') : gulp.series('build', gulp.parallel('serve', 'watch')));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\serve.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\serve.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\serve.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\serve.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
        "sourceFileName": "serve.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Запуск вебсервера BrowserSync\r\n */\nfunction serve(done) {\n  var serveCreate = _browserSync.default.create();\n\n  serveCreate.init(_config.default.browsersync);\n}\n\nserve.description = 'Запускает вебсервер из директории /build';\nvar _default = serve;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlLmpzIl0sIm5hbWVzIjpbInNlcnZlIiwiZG9uZSIsInNlcnZlQ3JlYXRlIiwiYnJvd3NlcnN5bmMiLCJjcmVhdGUiLCJpbml0IiwiY29uZmlnIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxLQUFULENBQWVDLElBQWYsRUFBcUI7QUFDakIsTUFBTUMsV0FBVyxHQUFHQyxxQkFBWUMsTUFBWixFQUFwQjs7QUFDQUYsRUFBQUEsV0FBVyxDQUFDRyxJQUFaLENBQWlCQyxnQkFBT0gsV0FBeEI7QUFDSDs7QUFDREgsS0FBSyxDQUFDTyxXQUFOLEdBQW9CLDBDQUFwQjtlQUVlUCxLIiwic291cmNlUm9vdCI6IkM6XFxwcm9qZWN0c1xcbXktcHJvamVjdFxcSVEwMDdcXGlxXFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCdcclxuaW1wb3J0IGJyb3dzZXJzeW5jIGZyb20gJ2Jyb3dzZXItc3luYydcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnXHJcblxyXG4vKlxyXG4gKiDQl9Cw0L/Rg9GB0Log0LLQtdCx0YHQtdGA0LLQtdGA0LAgQnJvd3NlclN5bmNcclxuICovXHJcblxyXG5mdW5jdGlvbiBzZXJ2ZShkb25lKSB7XHJcbiAgICBjb25zdCBzZXJ2ZUNyZWF0ZSA9IGJyb3dzZXJzeW5jLmNyZWF0ZSgpO1xyXG4gICAgc2VydmVDcmVhdGUuaW5pdChjb25maWcuYnJvd3NlcnN5bmMpO1xyXG59XHJcbnNlcnZlLmRlc2NyaXB0aW9uID0gJ9CX0LDQv9GD0YHQutCw0LXRgiDQstC10LHRgdC10YDQstC10YAg0LjQtyDQtNC40YDQtdC60YLQvtGA0LjQuCAvYnVpbGQnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgc2VydmU7Il19",
    "map": {
      "version": 3,
      "sources": [
        "serve.js"
      ],
      "names": [
        "serve",
        "done",
        "serveCreate",
        "browsersync",
        "create",
        "init",
        "config",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjB,MAAMC,WAAW,GAAGC,qBAAYC,MAAZ,EAApB;;AACAF,EAAAA,WAAW,CAACG,IAAZ,CAAiBC,gBAAOH,WAAxB;AACH;;AACDH,KAAK,CAACO,WAAN,GAAoB,0CAApB;eAEeP,K",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp'\r\nimport browsersync from 'browser-sync'\r\nimport config from '../config'\r\n\r\n/*\r\n * Запуск вебсервера BrowserSync\r\n */\r\n\r\nfunction serve(done) {\r\n    const serveCreate = browsersync.create();\r\n    serveCreate.init(config.browsersync);\r\n}\r\nserve.description = 'Запускает вебсервер из директории /build';\r\n\r\nexport default serve;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\config.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar developmentDir = 'build/',\n    productionDir = '../public/assets/build/';\nvar path = {\n  dest: _gulpUtil.default.env.env === 'prod' ? productionDir : developmentDir,\n  build: {\n    html: developmentDir,\n    js: 'js/',\n    css: 'css/',\n    img: 'img/',\n    sprite: 'src/img/',\n    svgSprite: 'img/svg/',\n    fonts: 'fonts/'\n  },\n  src: {\n    html: 'src/*.html',\n    jsInternal: 'src/js/internal.js',\n    jsExternal: 'src/js/external.js',\n    styleInternal: _gulpUtil.default.env.env === 'prod' ? 'src/style/internal.pcss' : ['src/style/internal.pcss', 'src/style/ui_kit.pcss'],\n    styleExternal: 'src/style/external.pcss',\n    styleInclude: ['src/style/', './bower_components'],\n    img: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*'],\n    imgProduction: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/inhtml/**/*.*'],\n    sprite: 'src/img/sprite/**/*.*',\n    svg: 'src/img/svg/',\n    svgSpriteBuild: 'src/img/svg/',\n    svgSprite: 'src/img/svg/sprite/*.svg',\n    generatedSvgSprite: 'src/img/svg/sprite.svg',\n    fonts: 'src/fonts/**/*.*'\n  },\n  watch: {\n    html: 'src/**/*.html',\n    jsInternal: ['src/js/**/*.js', '!src/js/**/external.js', '!src/js/vendor/**/*.js'],\n    jsExternal: ['src/js/**/external.js', 'src/js/vendor/**/*.js'],\n    styleInternal: ['src/style/**/*.pcss', 'src/style/**/internal.pcss', '!src/style/**/external.pcss'],\n    styleExternal: 'src/style/external.pcss',\n    img: ['src/img/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/svg/sprite.svg'],\n    svgSprite: 'src/img/svg/sprite/*.svg',\n    fonts: 'src/fonts/**/*.*'\n  }\n};\nvar config = {\n  browsersync: {\n    server: {\n      baseDir: \"./\".concat(developmentDir)\n    },\n    tunnel: false,\n    open: false,\n    host: 'localhost',\n    port: 3000,\n    logPrefix: 'Blank'\n  },\n  html: {\n    src: path.src.html,\n    dest: path.build.html\n  },\n  js: {\n    srcInternal: path.src.jsInternal,\n    srcExternal: path.src.jsExternal,\n    dest: \"\".concat(path.dest).concat(path.build.js),\n    destJquery: \"\".concat(path.dest).concat(path.build.jquery)\n  },\n  css: {\n    srcInternal: path.src.styleInternal,\n    srcExternal: path.src.styleExternal,\n    options: {\n      includePaths: path.src.styleInclude,\n      sourceMap: true,\n      errLogToConsole: true\n    },\n    dest: \"\".concat(path.dest).concat(path.build.css)\n  },\n  images: {\n    src: path.src.img,\n    srcProduction: path.src.imgProduction,\n    dest: \"\".concat(path.dest).concat(path.build.img)\n  },\n  svg: {\n    svgInStyle: {\n      path: path.src.svg\n    },\n    sprite: path.src.svgSprite,\n    spriteGenerateDest: path.src.svgSpriteBuild,\n    spriteDest: path.dest + path.build.svgSprite,\n    generated: path.src.generatedSvgSprite\n  },\n  sprites: {\n    imagePath: path.src.sprite,\n    spritePath: path.build.sprite\n  },\n  fonts: {\n    src: path.src.fonts,\n    dest: path.dest + path.build.fonts\n  },\n  watch: {\n    html: path.watch.html,\n    jsInternal: path.watch.jsInternal,\n    jsExternal: path.watch.jsExternal,\n    cssInternal: path.watch.styleInternal,\n    cssExternal: path.watch.styleExternal,\n    images: path.watch.img,\n    svgSprite: path.watch.svgSprite,\n    fonts: path.watch.fonts\n  },\n  clean: {\n    dest: \"./\".concat(path.dest)\n  },\n  cssnano: {\n    zindex: false,\n    svgo: false,\n    // svgo отключен из-за ie11\n    autoprefixer: false,\n    reduceIdents: false\n  },\n  uglify: {\n    mangle: {\n      keep_fnames: true\n    },\n    compress: {\n      // unsafe: false,\n      // unsafe_Func: false,\n      unsafe_comps: false,\n      unsafe_math: false,\n      unsafe_proto: false,\n      unsafe_regexp: false,\n      typeofs: false,\n      reduce_vars: false,\n      reduce_funcs: false,\n      pure_getters: true,\n      properties: false,\n      collapse_vars: false\n    }\n  }\n};\nvar _default = config;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "developmentDir",
        "productionDir",
        "path",
        "dest",
        "gutil",
        "env",
        "build",
        "html",
        "js",
        "css",
        "img",
        "sprite",
        "svgSprite",
        "fonts",
        "src",
        "jsInternal",
        "jsExternal",
        "styleInternal",
        "styleExternal",
        "styleInclude",
        "imgProduction",
        "svg",
        "svgSpriteBuild",
        "generatedSvgSprite",
        "watch",
        "config",
        "browsersync",
        "server",
        "baseDir",
        "tunnel",
        "open",
        "host",
        "port",
        "logPrefix",
        "srcInternal",
        "srcExternal",
        "destJquery",
        "jquery",
        "options",
        "includePaths",
        "sourceMap",
        "errLogToConsole",
        "images",
        "srcProduction",
        "svgInStyle",
        "spriteGenerateDest",
        "spriteDest",
        "generated",
        "sprites",
        "imagePath",
        "spritePath",
        "cssInternal",
        "cssExternal",
        "clean",
        "cssnano",
        "zindex",
        "svgo",
        "autoprefixer",
        "reduceIdents",
        "uglify",
        "mangle",
        "keep_fnames",
        "compress",
        "unsafe_comps",
        "unsafe_math",
        "unsafe_proto",
        "unsafe_regexp",
        "typeofs",
        "reduce_vars",
        "reduce_funcs",
        "pure_getters",
        "properties",
        "collapse_vars"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,cAAc,GAAG,QAAvB;AAAA,IACIC,aAAa,GAAI,yBADrB;AAGA,IAAMC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAEC,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BJ,aAA3B,GAA2CD,cADxC;AAGTM,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEP,cADH;AAGHQ,IAAAA,EAAE,EAAE,KAHD;AAKHC,IAAAA,GAAG,EAAE,MALF;AAOHC,IAAAA,GAAG,EAAE,MAPF;AAQHC,IAAAA,MAAM,EAAE,UARL;AASHC,IAAAA,SAAS,EAAE,UATR;AAWHC,IAAAA,KAAK,EAAE;AAXJ,GAHE;AAgBTC,EAAAA,GAAG,EAAE;AACDP,IAAAA,IAAI,EAAE,YADL;AAGDQ,IAAAA,UAAU,EAAE,oBAHX;AAIDC,IAAAA,UAAU,EAAE,oBAJX;AAMDC,IAAAA,aAAa,EAAEb,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,yBAA3B,GAAuD,CAAC,yBAAD,EAA4B,uBAA5B,CANrE;AAODa,IAAAA,aAAa,EAAE,yBAPd;AAQDC,IAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,oBAAf,CARb;AAUDT,IAAAA,GAAG,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,4BAA7C,CAVJ;AAWDU,IAAAA,aAAa,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,4BAA7C,EAA2E,wBAA3E,CAXd;AAYDT,IAAAA,MAAM,EAAE,uBAZP;AAaDU,IAAAA,GAAG,EAAE,cAbJ;AAeDC,IAAAA,cAAc,EAAE,cAff;AAgBDV,IAAAA,SAAS,EAAE,0BAhBV;AAiBDW,IAAAA,kBAAkB,EAAE,wBAjBnB;AAmBDV,IAAAA,KAAK,EAAE;AAnBN,GAhBI;AAqCTW,EAAAA,KAAK,EAAE;AACHjB,IAAAA,IAAI,EAAE,eADH;AAGHQ,IAAAA,UAAU,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,wBAA7C,CAHT;AAIHC,IAAAA,UAAU,EAAE,CAAC,uBAAD,EAA0B,uBAA1B,CAJT;AAMHC,IAAAA,aAAa,EAAE,CAAC,qBAAD,EAAwB,4BAAxB,EAAsD,6BAAtD,CANZ;AAOHC,IAAAA,aAAa,EAAE,yBAPZ;AASHR,IAAAA,GAAG,EAAE,CAAC,gBAAD,EAAmB,4BAAnB,EAAiD,yBAAjD,CATF;AAWHE,IAAAA,SAAS,EAAE,0BAXR;AAaHC,IAAAA,KAAK,EAAE;AAbJ;AArCE,CAAb;AAsDA,IAAMY,MAAM,GAAG;AACXC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,cAAO5B,cAAP;AADH,KADC;AAIT6B,IAAAA,MAAM,EAAE,KAJC;AAKTC,IAAAA,IAAI,EAAE,KALG;AAMTC,IAAAA,IAAI,EAAE,WANG;AAOTC,IAAAA,IAAI,EAAE,IAPG;AAQTC,IAAAA,SAAS,EAAE;AARF,GADF;AAWX1B,EAAAA,IAAI,EAAE;AACFO,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASP,IADZ;AAEFJ,IAAAA,IAAI,EAAED,IAAI,CAACI,KAAL,CAAWC;AAFf,GAXK;AAeXC,EAAAA,EAAE,EAAE;AACA0B,IAAAA,WAAW,EAAEhC,IAAI,CAACY,GAAL,CAASC,UADtB;AAEAoB,IAAAA,WAAW,EAAEjC,IAAI,CAACY,GAAL,CAASE,UAFtB;AAGAb,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWE,EAA5B,CAHJ;AAIA4B,IAAAA,UAAU,YAAKlC,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAW+B,MAA5B;AAJV,GAfO;AAqBX5B,EAAAA,GAAG,EAAE;AACDyB,IAAAA,WAAW,EAAEhC,IAAI,CAACY,GAAL,CAASG,aADrB;AAEDkB,IAAAA,WAAW,EAAEjC,IAAI,CAACY,GAAL,CAASI,aAFrB;AAGDoB,IAAAA,OAAO,EAAE;AACLC,MAAAA,YAAY,EAAErC,IAAI,CAACY,GAAL,CAASK,YADlB;AAELqB,MAAAA,SAAS,EAAE,IAFN;AAGLC,MAAAA,eAAe,EAAE;AAHZ,KAHR;AAQDtC,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWG,GAA5B;AARH,GArBM;AA+BXiC,EAAAA,MAAM,EAAE;AACJ5B,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASJ,GADV;AAEJiC,IAAAA,aAAa,EAAEzC,IAAI,CAACY,GAAL,CAASM,aAFpB;AAGJjB,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWI,GAA5B;AAHA,GA/BG;AAoCXW,EAAAA,GAAG,EAAE;AACDuB,IAAAA,UAAU,EAAE;AACR1C,MAAAA,IAAI,EAAEA,IAAI,CAACY,GAAL,CAASO;AADP,KADX;AAIDV,IAAAA,MAAM,EAAET,IAAI,CAACY,GAAL,CAASF,SAJhB;AAKDiC,IAAAA,kBAAkB,EAAE3C,IAAI,CAACY,GAAL,CAASQ,cAL5B;AAMDwB,IAAAA,UAAU,EAAE5C,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACI,KAAL,CAAWM,SANlC;AAODmC,IAAAA,SAAS,EAAE7C,IAAI,CAACY,GAAL,CAASS;AAPnB,GApCM;AA6CXyB,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE/C,IAAI,CAACY,GAAL,CAASH,MADf;AAELuC,IAAAA,UAAU,EAAEhD,IAAI,CAACI,KAAL,CAAWK;AAFlB,GA7CE;AAiDXE,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASD,KADX;AAEHV,IAAAA,IAAI,EAAED,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACI,KAAL,CAAWO;AAF1B,GAjDI;AAqDXW,EAAAA,KAAK,EAAE;AACHjB,IAAAA,IAAI,EAAEL,IAAI,CAACsB,KAAL,CAAWjB,IADd;AAEHQ,IAAAA,UAAU,EAAEb,IAAI,CAACsB,KAAL,CAAWT,UAFpB;AAGHC,IAAAA,UAAU,EAAEd,IAAI,CAACsB,KAAL,CAAWR,UAHpB;AAIHmC,IAAAA,WAAW,EAAEjD,IAAI,CAACsB,KAAL,CAAWP,aAJrB;AAKHmC,IAAAA,WAAW,EAAElD,IAAI,CAACsB,KAAL,CAAWN,aALrB;AAMHwB,IAAAA,MAAM,EAAExC,IAAI,CAACsB,KAAL,CAAWd,GANhB;AAOHE,IAAAA,SAAS,EAAEV,IAAI,CAACsB,KAAL,CAAWZ,SAPnB;AAQHC,IAAAA,KAAK,EAAEX,IAAI,CAACsB,KAAL,CAAWX;AARf,GArDI;AA+DXwC,EAAAA,KAAK,EAAE;AACHlD,IAAAA,IAAI,cAAOD,IAAI,CAACC,IAAZ;AADD,GA/DI;AAkEXmD,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,IAAI,EAAE,KAFD;AAEQ;AACbC,IAAAA,YAAY,EAAE,KAHT;AAILC,IAAAA,YAAY,EAAE;AAJT,GAlEE;AAwEXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE;AACJC,MAAAA,WAAW,EAAE;AADT,KADJ;AAIJC,IAAAA,QAAQ,EAAE;AACN;AACA;AACAC,MAAAA,YAAY,EAAE,KAHR;AAINC,MAAAA,WAAW,EAAE,KAJP;AAKNC,MAAAA,YAAY,EAAE,KALR;AAMNC,MAAAA,aAAa,EAAE,KANT;AAONC,MAAAA,OAAO,EAAE,KAPH;AAQNC,MAAAA,WAAW,EAAE,KARP;AASNC,MAAAA,YAAY,EAAE,KATR;AAUNC,MAAAA,YAAY,EAAE,IAVR;AAWNC,MAAAA,UAAU,EAAE,KAXN;AAYNC,MAAAA,aAAa,EAAE;AAZT;AAJN;AAxEG,CAAf;eA6Fe/C,M",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\n\r\nconst developmentDir = 'build/',\r\n    productionDir  = '../public/assets/build/';\r\n\r\nconst path = {\r\n    dest: gutil.env.env === 'prod' ? productionDir : developmentDir,\r\n\r\n    build: {\r\n        html: developmentDir,\r\n\r\n        js: 'js/',\r\n\r\n        css: 'css/',\r\n\r\n        img: 'img/',\r\n        sprite: 'src/img/',\r\n        svgSprite: 'img/svg/',\r\n\r\n        fonts: 'fonts/'\r\n    },\r\n    src: {\r\n        html: 'src/*.html',\r\n\r\n        jsInternal: 'src/js/internal.js',\r\n        jsExternal: 'src/js/external.js',\r\n\r\n        styleInternal: gutil.env.env === 'prod' ? 'src/style/internal.pcss' : ['src/style/internal.pcss', 'src/style/ui_kit.pcss'],\r\n        styleExternal: 'src/style/external.pcss',\r\n        styleInclude: ['src/style/', './bower_components'],\r\n\r\n        img: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*'],\r\n        imgProduction: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/inhtml/**/*.*'],\r\n        sprite: 'src/img/sprite/**/*.*',\r\n        svg: 'src/img/svg/',\r\n\r\n        svgSpriteBuild: 'src/img/svg/',\r\n        svgSprite: 'src/img/svg/sprite/*.svg',\r\n        generatedSvgSprite: 'src/img/svg/sprite.svg',\r\n\r\n        fonts: 'src/fonts/**/*.*'\r\n    },\r\n    watch: {\r\n        html: 'src/**/*.html',\r\n\r\n        jsInternal: ['src/js/**/*.js', '!src/js/**/external.js', '!src/js/vendor/**/*.js'],\r\n        jsExternal: ['src/js/**/external.js', 'src/js/vendor/**/*.js'],\r\n\r\n        styleInternal: ['src/style/**/*.pcss', 'src/style/**/internal.pcss', '!src/style/**/external.pcss'],\r\n        styleExternal: 'src/style/external.pcss',\r\n\r\n        img: ['src/img/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/svg/sprite.svg'],\r\n\r\n        svgSprite: 'src/img/svg/sprite/*.svg',\r\n\r\n        fonts: 'src/fonts/**/*.*'\r\n    }\r\n};\r\n\r\nconst config = {\r\n    browsersync: {\r\n        server: {\r\n            baseDir: `./${developmentDir}`\r\n        },\r\n        tunnel: false,\r\n        open: false,\r\n        host: 'localhost',\r\n        port: 3000,\r\n        logPrefix: 'Blank'\r\n    },\r\n    html: {\r\n        src: path.src.html,\r\n        dest: path.build.html\r\n    },\r\n    js: {\r\n        srcInternal: path.src.jsInternal,\r\n        srcExternal: path.src.jsExternal,\r\n        dest: `${path.dest}${path.build.js}`,\r\n        destJquery: `${path.dest}${path.build.jquery}`\r\n    },\r\n    css: {\r\n        srcInternal: path.src.styleInternal,\r\n        srcExternal: path.src.styleExternal,\r\n        options: {\r\n            includePaths: path.src.styleInclude,\r\n            sourceMap: true,\r\n            errLogToConsole: true\r\n        },\r\n        dest: `${path.dest}${path.build.css}`\r\n    },\r\n    images: {\r\n        src: path.src.img,\r\n        srcProduction: path.src.imgProduction,\r\n        dest: `${path.dest}${path.build.img}`\r\n    },\r\n    svg: {\r\n        svgInStyle: {\r\n            path: path.src.svg\r\n        },\r\n        sprite: path.src.svgSprite,\r\n        spriteGenerateDest: path.src.svgSpriteBuild,\r\n        spriteDest: path.dest + path.build.svgSprite,\r\n        generated: path.src.generatedSvgSprite\r\n    },\r\n    sprites: {\r\n        imagePath: path.src.sprite,\r\n        spritePath: path.build.sprite\r\n    },\r\n    fonts: {\r\n        src: path.src.fonts,\r\n        dest: path.dest + path.build.fonts\r\n    },\r\n    watch: {\r\n        html: path.watch.html,\r\n        jsInternal: path.watch.jsInternal,\r\n        jsExternal: path.watch.jsExternal,\r\n        cssInternal: path.watch.styleInternal,\r\n        cssExternal: path.watch.styleExternal,\r\n        images: path.watch.img,\r\n        svgSprite: path.watch.svgSprite,\r\n        fonts: path.watch.fonts\r\n    },\r\n    clean: {\r\n        dest: `./${path.dest}`\r\n    },\r\n    cssnano: {\r\n        zindex: false,\r\n        svgo: false, // svgo отключен из-за ie11\r\n        autoprefixer: false,\r\n        reduceIdents: false\r\n    },\r\n    uglify: {\r\n        mangle: {\r\n            keep_fnames: true\r\n        },\r\n        compress: {\r\n            // unsafe: false,\r\n            // unsafe_Func: false,\r\n            unsafe_comps: false,\r\n            unsafe_math: false,\r\n            unsafe_proto: false,\r\n            unsafe_regexp: false,\r\n            typeofs: false,\r\n            reduce_vars: false,\r\n            reduce_funcs: false,\r\n            pure_getters: true,\r\n            properties: false,\r\n            collapse_vars: false\r\n        }\r\n    }\r\n};\r\n\r\nexport default config;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\watch.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\watch.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\watch.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\watch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
        "sourceFileName": "watch.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Смотрит за изменениями\r\n */\nfunction watch() {\n  _gulp.default.watch(_config.default.watch.html, _gulp.default.series('html'));\n\n  _gulp.default.watch(_config.default.watch.cssInternal, _gulp.default.series('postcssInternal'));\n\n  _gulp.default.watch(_config.default.watch.cssExternal, _gulp.default.series('postcssExternal'));\n\n  _gulp.default.watch(_config.default.watch.jsInternal, _gulp.default.series('jsInternal'));\n\n  _gulp.default.watch(_config.default.watch.jsExternal, _gulp.default.series('jsExternal'));\n\n  _gulp.default.watch(_config.default.watch.images, _gulp.default.series('images'));\n\n  _gulp.default.watch(_config.default.watch.svgSprite, _gulp.default.series('spriteSvg'));\n\n  _gulp.default.watch(_config.default.watch.fonts, _gulp.default.series('fonts'));\n}\n\n;\nwatch.description = 'Смотрит за изменениями файлов';\nvar _default = watch;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdGNoLmpzIl0sIm5hbWVzIjpbIndhdGNoIiwiZ3VscCIsImNvbmZpZyIsImh0bWwiLCJzZXJpZXMiLCJjc3NJbnRlcm5hbCIsImNzc0V4dGVybmFsIiwianNJbnRlcm5hbCIsImpzRXh0ZXJuYWwiLCJpbWFnZXMiLCJzdmdTcHJpdGUiLCJmb250cyIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTs7O0FBSUEsU0FBU0EsS0FBVCxHQUFpQjtBQUNiQyxnQkFBS0QsS0FBTCxDQUFXRSxnQkFBT0YsS0FBUCxDQUFhRyxJQUF4QixFQUE4QkYsY0FBS0csTUFBTCxDQUFZLE1BQVosQ0FBOUI7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFLLFdBQXhCLEVBQXFDSixjQUFLRyxNQUFMLENBQVksaUJBQVosQ0FBckM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFNLFdBQXhCLEVBQXFDTCxjQUFLRyxNQUFMLENBQVksaUJBQVosQ0FBckM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFPLFVBQXhCLEVBQW9DTixjQUFLRyxNQUFMLENBQVksWUFBWixDQUFwQzs7QUFDQUgsZ0JBQUtELEtBQUwsQ0FBV0UsZ0JBQU9GLEtBQVAsQ0FBYVEsVUFBeEIsRUFBb0NQLGNBQUtHLE1BQUwsQ0FBWSxZQUFaLENBQXBDOztBQUNBSCxnQkFBS0QsS0FBTCxDQUFXRSxnQkFBT0YsS0FBUCxDQUFhUyxNQUF4QixFQUFnQ1IsY0FBS0csTUFBTCxDQUFZLFFBQVosQ0FBaEM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFVLFNBQXhCLEVBQW1DVCxjQUFLRyxNQUFMLENBQVksV0FBWixDQUFuQzs7QUFDQUgsZ0JBQUtELEtBQUwsQ0FBV0UsZ0JBQU9GLEtBQVAsQ0FBYVcsS0FBeEIsRUFBK0JWLGNBQUtHLE1BQUwsQ0FBWSxPQUFaLENBQS9CO0FBQ0g7O0FBQUE7QUFDREosS0FBSyxDQUFDWSxXQUFOLEdBQW9CLCtCQUFwQjtlQUVlWixLIiwic291cmNlUm9vdCI6IkM6XFxwcm9qZWN0c1xcbXktcHJvamVjdFxcSVEwMDdcXGlxXFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0KHQvNC+0YLRgNC40YIg0LfQsCDQuNC30LzQtdC90LXQvdC40Y/QvNC4XHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gd2F0Y2goKSB7XHJcbiAgICBndWxwLndhdGNoKGNvbmZpZy53YXRjaC5odG1sLCBndWxwLnNlcmllcygnaHRtbCcpKTtcclxuICAgIGd1bHAud2F0Y2goY29uZmlnLndhdGNoLmNzc0ludGVybmFsLCBndWxwLnNlcmllcygncG9zdGNzc0ludGVybmFsJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guY3NzRXh0ZXJuYWwsIGd1bHAuc2VyaWVzKCdwb3N0Y3NzRXh0ZXJuYWwnKSk7XHJcbiAgICBndWxwLndhdGNoKGNvbmZpZy53YXRjaC5qc0ludGVybmFsLCBndWxwLnNlcmllcygnanNJbnRlcm5hbCcpKTtcclxuICAgIGd1bHAud2F0Y2goY29uZmlnLndhdGNoLmpzRXh0ZXJuYWwsIGd1bHAuc2VyaWVzKCdqc0V4dGVybmFsJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guaW1hZ2VzLCBndWxwLnNlcmllcygnaW1hZ2VzJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guc3ZnU3ByaXRlLCBndWxwLnNlcmllcygnc3ByaXRlU3ZnJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guZm9udHMsIGd1bHAuc2VyaWVzKCdmb250cycpKTtcclxufTtcclxud2F0Y2guZGVzY3JpcHRpb24gPSAn0KHQvNC+0YLRgNC40YIg0LfQsCDQuNC30LzQtdC90LXQvdC40Y/QvNC4INGE0LDQudC70L7Qsic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB3YXRjaDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "watch.js"
      ],
      "names": [
        "watch",
        "gulp",
        "config",
        "html",
        "series",
        "cssInternal",
        "cssExternal",
        "jsInternal",
        "jsExternal",
        "images",
        "svgSprite",
        "fonts",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;AAIA,SAASA,KAAT,GAAiB;AACbC,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaG,IAAxB,EAA8BF,cAAKG,MAAL,CAAY,MAAZ,CAA9B;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaK,WAAxB,EAAqCJ,cAAKG,MAAL,CAAY,iBAAZ,CAArC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaM,WAAxB,EAAqCL,cAAKG,MAAL,CAAY,iBAAZ,CAArC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaO,UAAxB,EAAoCN,cAAKG,MAAL,CAAY,YAAZ,CAApC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaQ,UAAxB,EAAoCP,cAAKG,MAAL,CAAY,YAAZ,CAApC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaS,MAAxB,EAAgCR,cAAKG,MAAL,CAAY,QAAZ,CAAhC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaU,SAAxB,EAAmCT,cAAKG,MAAL,CAAY,WAAZ,CAAnC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaW,KAAxB,EAA+BV,cAAKG,MAAL,CAAY,OAAZ,CAA/B;AACH;;AAAA;AACDJ,KAAK,CAACY,WAAN,GAAoB,+BAApB;eAEeZ,K",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport config from '../config'\r\n\r\n/*\r\n * Смотрит за изменениями\r\n */\r\n\r\nfunction watch() {\r\n    gulp.watch(config.watch.html, gulp.series('html'));\r\n    gulp.watch(config.watch.cssInternal, gulp.series('postcssInternal'));\r\n    gulp.watch(config.watch.cssExternal, gulp.series('postcssExternal'));\r\n    gulp.watch(config.watch.jsInternal, gulp.series('jsInternal'));\r\n    gulp.watch(config.watch.jsExternal, gulp.series('jsExternal'));\r\n    gulp.watch(config.watch.images, gulp.series('images'));\r\n    gulp.watch(config.watch.svgSprite, gulp.series('spriteSvg'));\r\n    gulp.watch(config.watch.fonts, gulp.series('fonts'));\r\n};\r\nwatch.description = 'Смотрит за изменениями файлов';\r\n\r\nexport default watch;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\clean.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\clean.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\clean.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\clean.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
        "sourceFileName": "clean.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Удаление папки build\r\n */\nfunction clean(done) {\n  (0, _rimraf.default)(_config.default.clean.dest, done);\n}\n\nclean.description = 'Удаляет build директорию';\nvar _default = clean;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFuLmpzIl0sIm5hbWVzIjpbImNsZWFuIiwiZG9uZSIsImNvbmZpZyIsImRlc3QiLCJkZXNjcmlwdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBR0E7OztBQUlBLFNBQVNBLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtBQUNqQix1QkFBT0MsZ0JBQU9GLEtBQVAsQ0FBYUcsSUFBcEIsRUFBMEJGLElBQTFCO0FBQ0g7O0FBQ0RELEtBQUssQ0FBQ0ksV0FBTixHQUFvQiwwQkFBcEI7ZUFFZUosSyIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXElRMDA3XFxpcVxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnXHJcbmltcG9ydCByaW1yYWYgZnJvbSAncmltcmFmJ1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZydcclxuXHJcblxyXG4vKlxyXG4gKiDQo9C00LDQu9C10L3QuNC1INC/0LDQv9C60LggYnVpbGRcclxuICovXHJcblxyXG5mdW5jdGlvbiBjbGVhbihkb25lKSB7XHJcbiAgICByaW1yYWYoY29uZmlnLmNsZWFuLmRlc3QsIGRvbmUpO1xyXG59XHJcbmNsZWFuLmRlc2NyaXB0aW9uID0gJ9Cj0LTQsNC70Y/QtdGCIGJ1aWxkINC00LjRgNC10LrRgtC+0YDQuNGOJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsZWFuOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "clean.js"
      ],
      "names": [
        "clean",
        "done",
        "config",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAGA;;;AAIA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjB,uBAAOC,gBAAOF,KAAP,CAAaG,IAApB,EAA0BF,IAA1B;AACH;;AACDD,KAAK,CAACI,WAAN,GAAoB,0BAApB;eAEeJ,K",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp'\r\nimport rimraf from 'rimraf'\r\nimport config from '../config'\r\n\r\n\r\n/*\r\n * Удаление папки build\r\n */\r\n\r\nfunction clean(done) {\r\n    rimraf(config.clean.dest, done);\r\n}\r\nclean.description = 'Удаляет build директорию';\r\n\r\nexport default clean;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\html.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\html.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\html.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\html.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
        "sourceFileName": "html.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpFileInclude = _interopRequireDefault(require(\"gulp-file-include\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сборка html\r\n */\nfunction html(done) {\n  _browserSync.default.notify('Compiling html');\n\n  return _gulp.default.src(_config.default.html.src).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'HTML',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe(_gulp.default.dest(_config.default.html.dest));\n}\n\nhtml.description = 'Сборка html';\nvar _default = html;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0bWwuanMiXSwibmFtZXMiOlsiaHRtbCIsImRvbmUiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwicHJlZml4IiwiYmFzZXBhdGgiLCJpbmRlbnQiLCJkZXN0IiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxJQUFULENBQWNDLElBQWQsRUFBb0I7QUFDaEJDLHVCQUFZQyxNQUFaLENBQW1CLGdCQUFuQjs7QUFFQSxTQUFPQyxjQUFLQyxHQUFMLENBQVNDLGdCQUFPTixJQUFQLENBQVlLLEdBQXJCLEVBQ0ZFLElBREUsQ0FDRywwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVMLG9CQUFPTSxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxNQUQwQjtBQUVqQ0MsUUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsT0FBTDtBQUFBLEtBQWxCO0FBREosR0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyw4QkFBWTtBQUNkTyxJQUFBQSxNQUFNLEVBQUUsSUFETTtBQUVkQyxJQUFBQSxRQUFRLEVBQUUsT0FGSTtBQUdkQyxJQUFBQSxNQUFNLEVBQUU7QUFITSxHQUFaLENBUEgsRUFZRlQsSUFaRSxDQVlHSCxjQUFLYSxJQUFMLENBQVVYLGdCQUFPTixJQUFQLENBQVlpQixJQUF0QixDQVpILENBQVA7QUFhSDs7QUFDRGpCLElBQUksQ0FBQ2tCLFdBQUwsR0FBbUIsYUFBbkI7ZUFFZWxCLEkiLCJzb3VyY2VSb290IjoiQzpcXHByb2plY3RzXFxteS1wcm9qZWN0XFxJUTAwN1xcaXFcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgZmlsZWluY2x1ZGUgZnJvbSAnZ3VscC1maWxlLWluY2x1ZGUnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZydcclxuXHJcbi8qXHJcbiAqINCh0LHQvtGA0LrQsCBodG1sXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gaHRtbChkb25lKSB7XHJcbiAgICBicm93c2Vyc3luYy5ub3RpZnkoJ0NvbXBpbGluZyBodG1sJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5odG1sLnNyYylcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSFRNTCcsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShmaWxlaW5jbHVkZSh7XHJcbiAgICAgICAgICAgIHByZWZpeDogJ0BAJyxcclxuICAgICAgICAgICAgYmFzZXBhdGg6ICdAZmlsZScsXHJcbiAgICAgICAgICAgIGluZGVudDogdHJ1ZVxyXG4gICAgICAgIH0pKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChjb25maWcuaHRtbC5kZXN0KSk7XHJcbn1cclxuaHRtbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaHRtbCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBodG1sOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "html.js"
      ],
      "names": [
        "html",
        "done",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "prefix",
        "basepath",
        "indent",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAChBC,uBAAYC,MAAZ,CAAmB,gBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAON,IAAP,CAAYK,GAArB,EACFE,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEL,oBAAOM,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,MAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOG,8BAAY;AACdO,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CAPH,EAYFT,IAZE,CAYGH,cAAKa,IAAL,CAAUX,gBAAON,IAAP,CAAYiB,IAAtB,CAZH,CAAP;AAaH;;AACDjB,IAAI,CAACkB,WAAL,GAAmB,aAAnB;eAEelB,I",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport fileinclude from 'gulp-file-include';\r\nimport config from '../config'\r\n\r\n/*\r\n * Сборка html\r\n */\r\n\r\nfunction html(done) {\r\n    browsersync.notify('Compiling html');\r\n\r\n    return gulp.src(config.html.src)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'HTML',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(gulp.dest(config.html.dest));\r\n}\r\nhtml.description = 'Сборка html';\r\n\r\nexport default html;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\fonts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\fonts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\fonts.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\fonts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
        "sourceFileName": "fonts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Копирование шрифтов\r\n */\nfunction fonts(done) {\n  _gulp.default.src(_config.default.fonts.src).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Fonts',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulp.default.dest(_config.default.fonts.dest));\n\n  done();\n}\n\nfonts.description = 'Копирует шрифты в /build директорию';\nvar _default = fonts;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvbnRzLmpzIl0sIm5hbWVzIjpbImZvbnRzIiwiZG9uZSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwibm90aWZ5Iiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwiZGVzdCIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTs7O0FBS0EsU0FBU0EsS0FBVCxDQUFlQyxJQUFmLEVBQXFCO0FBQ2pCQyxnQkFBS0MsR0FBTCxDQUFTQyxnQkFBT0osS0FBUCxDQUFhRyxHQUF0QixFQUNLRSxJQURMLENBQ1UsMEJBQVE7QUFDVkMsSUFBQUEsWUFBWSxFQUFFQyxvQkFBT0MsT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxhQUFLO0FBQ2pDQyxRQUFBQSxLQUFLLEVBQUUsT0FEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FEVixFQU9LUCxJQVBMLENBT1VILGNBQUtXLElBQUwsQ0FBVVQsZ0JBQU9KLEtBQVAsQ0FBYWEsSUFBdkIsQ0FQVjs7QUFTQVosRUFBQUEsSUFBSTtBQUNQOztBQUNERCxLQUFLLENBQUNjLFdBQU4sR0FBb0IscUNBQXBCO2VBRWVkLEsiLCJzb3VyY2VSb290IjoiQzpcXHByb2plY3RzXFxteS1wcm9qZWN0XFxJUTAwN1xcaXFcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0JrQvtC/0LjRgNC+0LLQsNC90LjQtSDRiNGA0LjRhNGC0L7QslxyXG4gKi9cclxuXHJcblxyXG5mdW5jdGlvbiBmb250cyhkb25lKSB7XHJcbiAgICBndWxwLnNyYyhjb25maWcuZm9udHMuc3JjKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdGb250cycsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmZvbnRzLmRlc3QpKTtcclxuXHJcbiAgICBkb25lKCk7XHJcbn1cclxuZm9udHMuZGVzY3JpcHRpb24gPSAn0JrQvtC/0LjRgNGD0LXRgiDRiNGA0LjRhNGC0Ysg0LIgL2J1aWxkINC00LjRgNC10LrRgtC+0YDQuNGOJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZvbnRzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "fonts.js"
      ],
      "names": [
        "fonts",
        "done",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "notify",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;;;AAKA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjBC,gBAAKC,GAAL,CAASC,gBAAOJ,KAAP,CAAaG,GAAtB,EACKE,IADL,CACU,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,OAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADV,EAOKP,IAPL,CAOUH,cAAKW,IAAL,CAAUT,gBAAOJ,KAAP,CAAaa,IAAvB,CAPV;;AASAZ,EAAAA,IAAI;AACP;;AACDD,KAAK,CAACc,WAAN,GAAoB,qCAApB;eAEed,K",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport config from '../config'\r\n\r\n/*\r\n * Копирование шрифтов\r\n */\r\n\r\n\r\nfunction fonts(done) {\r\n    gulp.src(config.fonts.src)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Fonts',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gulp.dest(config.fonts.dest));\r\n\r\n    done();\r\n}\r\nfonts.description = 'Копирует шрифты в /build директорию';\r\n\r\nexport default fonts;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\images.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\images.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\images.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\images.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
        "sourceFileName": "images.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpNewer = _interopRequireDefault(require(\"gulp-newer\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сжатие картинок\r\n */\nfunction images(done) {\n  _browserSync.default.notify('Compiling images'); // отключаю оптимизацию картинок для дева\n\n\n  if (_gulpUtil.default.env.env !== 'prod') {\n    return _gulp.default.src(_config.default.images.src).pipe((0, _gulpPlumber.default)({\n      errorHandler: _gulpNotify.default.onError(function (err) {\n        return {\n          title: 'Image dev copy',\n          message: err.toString()\n        };\n      })\n    })).pipe((0, _gulpNewer.default)(_config.default.images.dest)).pipe(_gulp.default.dest(_config.default.images.dest));\n  } else {\n    return _gulp.default.src(_config.default.images.srcProduction).pipe((0, _gulpPlumber.default)({\n      errorHandler: _gulpNotify.default.onError(function (err) {\n        return {\n          title: 'Image optimizer',\n          message: err.toString()\n        };\n      })\n    })).pipe((0, _gulpNewer.default)(_config.default.images.dest)).pipe((0, _gulpImagemin.default)([_gulpImagemin.default.gifsicle({\n      optimizationLevel: 3\n    }), _gulpImagemin.default.jpegtran({\n      quality: 65,\n      progressive: true\n    }), _gulpImagemin.default.optipng({\n      optimizationLevel: 5\n    }), _gulpImagemin.default.svgo({\n      plugins: [{\n        removeViewBox: false\n      }, {\n        convertStyleToAttrs: true\n      }]\n    })])).pipe(_gulp.default.dest(_config.default.images.dest));\n  }\n}\n\nimages.description = 'Оптимизация картинок';\nvar _default = images;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlcy5qcyJdLCJuYW1lcyI6WyJpbWFnZXMiLCJkb25lIiwiYnJvd3NlcnN5bmMiLCJub3RpZnkiLCJndXRpbCIsImVudiIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwiZGVzdCIsInNyY1Byb2R1Y3Rpb24iLCJpbWFnZW1pbiIsImdpZnNpY2xlIiwib3B0aW1pemF0aW9uTGV2ZWwiLCJqcGVndHJhbiIsInF1YWxpdHkiLCJwcm9ncmVzc2l2ZSIsIm9wdGlwbmciLCJzdmdvIiwicGx1Z2lucyIsInJlbW92ZVZpZXdCb3giLCJjb252ZXJ0U3R5bGVUb0F0dHJzIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxNQUFULENBQWdCQyxJQUFoQixFQUFzQjtBQUNsQkMsdUJBQVlDLE1BQVosQ0FBbUIsa0JBQW5CLEVBRGtCLENBRWxCOzs7QUFDQSxNQUFJQyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQXRCLEVBQThCO0FBQzFCLFdBQU9DLGNBQUtDLEdBQUwsQ0FBU0MsZ0JBQU9SLE1BQVAsQ0FBY08sR0FBdkIsRUFDRkUsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLE1BQUFBLFlBQVksRUFBRVAsb0JBQU9RLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsZUFBSztBQUNqQ0MsVUFBQUEsS0FBSyxFQUFFLGdCQUQwQjtBQUVqQ0MsVUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsU0FBTDtBQUFBLE9BQWxCO0FBREosS0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyx3QkFBTUQsZ0JBQU9SLE1BQVAsQ0FBY2dCLElBQXBCLENBUEgsRUFRRlAsSUFSRSxDQVFHSCxjQUFLVSxJQUFMLENBQVVSLGdCQUFPUixNQUFQLENBQWNnQixJQUF4QixDQVJILENBQVA7QUFTSCxHQVZELE1BVU87QUFDSCxXQUFPVixjQUFLQyxHQUFMLENBQVNDLGdCQUFPUixNQUFQLENBQWNpQixhQUF2QixFQUNGUixJQURFLENBQ0csMEJBQVE7QUFDVkMsTUFBQUEsWUFBWSxFQUFFUCxvQkFBT1EsT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxlQUFLO0FBQ2pDQyxVQUFBQSxLQUFLLEVBQUUsaUJBRDBCO0FBRWpDQyxVQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixTQUFMO0FBQUEsT0FBbEI7QUFESixLQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HLHdCQUFNRCxnQkFBT1IsTUFBUCxDQUFjZ0IsSUFBcEIsQ0FQSCxFQVFGUCxJQVJFLENBUUcsMkJBQVMsQ0FDWFMsc0JBQVNDLFFBQVQsQ0FBa0I7QUFDZEMsTUFBQUEsaUJBQWlCLEVBQUU7QUFETCxLQUFsQixDQURXLEVBSVhGLHNCQUFTRyxRQUFULENBQWtCO0FBQ2RDLE1BQUFBLE9BQU8sRUFBRSxFQURLO0FBRWRDLE1BQUFBLFdBQVcsRUFBRTtBQUZDLEtBQWxCLENBSlcsRUFRWEwsc0JBQVNNLE9BQVQsQ0FBaUI7QUFDYkosTUFBQUEsaUJBQWlCLEVBQUU7QUFETixLQUFqQixDQVJXLEVBV1hGLHNCQUFTTyxJQUFULENBQWM7QUFDVkMsTUFBQUEsT0FBTyxFQUFFLENBQ0w7QUFBQ0MsUUFBQUEsYUFBYSxFQUFFO0FBQWhCLE9BREssRUFFTDtBQUFDQyxRQUFBQSxtQkFBbUIsRUFBRTtBQUF0QixPQUZLO0FBREMsS0FBZCxDQVhXLENBQVQsQ0FSSCxFQTBCRm5CLElBMUJFLENBMEJHSCxjQUFLVSxJQUFMLENBQVVSLGdCQUFPUixNQUFQLENBQWNnQixJQUF4QixDQTFCSCxDQUFQO0FBMkJIO0FBQ0o7O0FBQ0RoQixNQUFNLENBQUM2QixXQUFQLEdBQXFCLHNCQUFyQjtlQUVlN0IsTSIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXElRMDA3XFxpcVxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xyXG5pbXBvcnQgZ3V0aWwgZnJvbSAnZ3VscC11dGlsJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgbmV3ZXIgZnJvbSAnZ3VscC1uZXdlcic7XHJcbmltcG9ydCBpbWFnZW1pbiBmcm9tICdndWxwLWltYWdlbWluJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnO1xyXG5cclxuLypcclxuICog0KHQttCw0YLQuNC1INC60LDRgNGC0LjQvdC+0LpcclxuICovXHJcblxyXG5mdW5jdGlvbiBpbWFnZXMoZG9uZSkge1xyXG4gICAgYnJvd3NlcnN5bmMubm90aWZ5KCdDb21waWxpbmcgaW1hZ2VzJyk7XHJcbiAgICAvLyDQvtGC0LrQu9GO0YfQsNGOINC+0L/RgtC40LzQuNC30LDRhtC40Y4g0LrQsNGA0YLQuNC90L7QuiDQtNC70Y8g0LTQtdCy0LBcclxuICAgIGlmIChndXRpbC5lbnYuZW52ICE9PSAncHJvZCcpIHtcclxuICAgICAgICByZXR1cm4gZ3VscC5zcmMoY29uZmlnLmltYWdlcy5zcmMpXHJcbiAgICAgICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0ltYWdlIGRldiBjb3B5JyxcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICAucGlwZShuZXdlcihjb25maWcuaW1hZ2VzLmRlc3QpKVxyXG4gICAgICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmltYWdlcy5kZXN0KSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBndWxwLnNyYyhjb25maWcuaW1hZ2VzLnNyY1Byb2R1Y3Rpb24pXHJcbiAgICAgICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0ltYWdlIG9wdGltaXplcicsXHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICAgICAgLnBpcGUobmV3ZXIoY29uZmlnLmltYWdlcy5kZXN0KSlcclxuICAgICAgICAgICAgLnBpcGUoaW1hZ2VtaW4oW1xyXG4gICAgICAgICAgICAgICAgaW1hZ2VtaW4uZ2lmc2ljbGUoe1xyXG4gICAgICAgICAgICAgICAgICAgIG9wdGltaXphdGlvbkxldmVsOiAzXHJcbiAgICAgICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgICAgIGltYWdlbWluLmpwZWd0cmFuKHtcclxuICAgICAgICAgICAgICAgICAgICBxdWFsaXR5OiA2NSxcclxuICAgICAgICAgICAgICAgICAgICBwcm9ncmVzc2l2ZTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICAgICBpbWFnZW1pbi5vcHRpcG5nKHtcclxuICAgICAgICAgICAgICAgICAgICBvcHRpbWl6YXRpb25MZXZlbDogNVxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICAgICBpbWFnZW1pbi5zdmdvKHtcclxuICAgICAgICAgICAgICAgICAgICBwbHVnaW5zOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtyZW1vdmVWaWV3Qm94OiBmYWxzZX0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtjb252ZXJ0U3R5bGVUb0F0dHJzOiB0cnVlfVxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIF0pKVxyXG4gICAgICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmltYWdlcy5kZXN0KSk7XHJcbiAgICB9XHJcbn1cclxuaW1hZ2VzLmRlc2NyaXB0aW9uID0gJ9Ce0L/RgtC40LzQuNC30LDRhtC40Y8g0LrQsNGA0YLQuNC90L7Quic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBpbWFnZXM7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "images.js"
      ],
      "names": [
        "images",
        "done",
        "browsersync",
        "notify",
        "gutil",
        "env",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "dest",
        "srcProduction",
        "imagemin",
        "gifsicle",
        "optimizationLevel",
        "jpegtran",
        "quality",
        "progressive",
        "optipng",
        "svgo",
        "plugins",
        "removeViewBox",
        "convertStyleToAttrs",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AAClBC,uBAAYC,MAAZ,CAAmB,kBAAnB,EADkB,CAElB;;;AACA,MAAIC,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAtB,EAA8B;AAC1B,WAAOC,cAAKC,GAAL,CAASC,gBAAOR,MAAP,CAAcO,GAAvB,EACFE,IADE,CACG,0BAAQ;AACVC,MAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,eAAK;AACjCC,UAAAA,KAAK,EAAE,gBAD0B;AAEjCC,UAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,SAAL;AAAA,OAAlB;AADJ,KAAR,CADH,EAOFN,IAPE,CAOG,wBAAMD,gBAAOR,MAAP,CAAcgB,IAApB,CAPH,EAQFP,IARE,CAQGH,cAAKU,IAAL,CAAUR,gBAAOR,MAAP,CAAcgB,IAAxB,CARH,CAAP;AASH,GAVD,MAUO;AACH,WAAOV,cAAKC,GAAL,CAASC,gBAAOR,MAAP,CAAciB,aAAvB,EACFR,IADE,CACG,0BAAQ;AACVC,MAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,eAAK;AACjCC,UAAAA,KAAK,EAAE,iBAD0B;AAEjCC,UAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,SAAL;AAAA,OAAlB;AADJ,KAAR,CADH,EAOFN,IAPE,CAOG,wBAAMD,gBAAOR,MAAP,CAAcgB,IAApB,CAPH,EAQFP,IARE,CAQG,2BAAS,CACXS,sBAASC,QAAT,CAAkB;AACdC,MAAAA,iBAAiB,EAAE;AADL,KAAlB,CADW,EAIXF,sBAASG,QAAT,CAAkB;AACdC,MAAAA,OAAO,EAAE,EADK;AAEdC,MAAAA,WAAW,EAAE;AAFC,KAAlB,CAJW,EAQXL,sBAASM,OAAT,CAAiB;AACbJ,MAAAA,iBAAiB,EAAE;AADN,KAAjB,CARW,EAWXF,sBAASO,IAAT,CAAc;AACVC,MAAAA,OAAO,EAAE,CACL;AAACC,QAAAA,aAAa,EAAE;AAAhB,OADK,EAEL;AAACC,QAAAA,mBAAmB,EAAE;AAAtB,OAFK;AADC,KAAd,CAXW,CAAT,CARH,EA0BFnB,IA1BE,CA0BGH,cAAKU,IAAL,CAAUR,gBAAOR,MAAP,CAAcgB,IAAxB,CA1BH,CAAP;AA2BH;AACJ;;AACDhB,MAAM,CAAC6B,WAAP,GAAqB,sBAArB;eAEe7B,M",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport newer from 'gulp-newer';\r\nimport imagemin from 'gulp-imagemin';\r\nimport config from '../config';\r\n\r\n/*\r\n * Сжатие картинок\r\n */\r\n\r\nfunction images(done) {\r\n    browsersync.notify('Compiling images');\r\n    // отключаю оптимизацию картинок для дева\r\n    if (gutil.env.env !== 'prod') {\r\n        return gulp.src(config.images.src)\r\n            .pipe(plumber({\r\n                errorHandler: notify.onError(err => ({\r\n                    title: 'Image dev copy',\r\n                    message: err.toString()\r\n                }))\r\n            }))\r\n            .pipe(newer(config.images.dest))\r\n            .pipe(gulp.dest(config.images.dest));\r\n    } else {\r\n        return gulp.src(config.images.srcProduction)\r\n            .pipe(plumber({\r\n                errorHandler: notify.onError(err => ({\r\n                    title: 'Image optimizer',\r\n                    message: err.toString()\r\n                }))\r\n            }))\r\n            .pipe(newer(config.images.dest))\r\n            .pipe(imagemin([\r\n                imagemin.gifsicle({\r\n                    optimizationLevel: 3\r\n                }),\r\n                imagemin.jpegtran({\r\n                    quality: 65,\r\n                    progressive: true\r\n                }),\r\n                imagemin.optipng({\r\n                    optimizationLevel: 5\r\n                }),\r\n                imagemin.svgo({\r\n                    plugins: [\r\n                        {removeViewBox: false},\r\n                        {convertStyleToAttrs: true}\r\n                    ]\r\n                })\r\n            ]))\r\n            .pipe(gulp.dest(config.images.dest));\r\n    }\r\n}\r\nimages.description = 'Оптимизация картинок';\r\n\r\nexport default images;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\sprite_svg.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\sprite_svg.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\sprite_svg.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\sprite_svg.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
        "sourceFileName": "sprite_svg.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanSvgSprite = cleanSvgSprite;\nexports.generateSvgSprite = generateSvgSprite;\nexports.copySvgSprite = copySvgSprite;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _gulpSvgSprites = _interopRequireDefault(require(\"gulp-svg-sprites\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Удаляет svg спрайт /src/img/svg/sprite.svg\r\n */\nfunction cleanSvgSprite(done) {\n  (0, _rimraf.default)(_config.default.svg.generated, done);\n}\n\n;\ncleanSvgSprite.description = 'Удаляет svg спрайт';\n/*\r\n * Генрит svg спрайт из файлов /src/img/svg/sprite/*.svg\r\n */\n\nfunction generateSvgSprite(done) {\n  return _gulp.default.src(_config.default.svg.sprite).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Svg sprite',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpSvgSprites.default)({\n    mode: 'symbols',\n    selector: 'icon-%f',\n    cssFile: false,\n    svg: {\n      sprite: 'sprite.svg',\n      symbols: 'sprite.svg'\n    },\n    preview: false\n  })).pipe(_gulp.default.dest(_config.default.svg.spriteGenerateDest));\n}\n\n;\ngenerateSvgSprite.description = 'Создает svg спрайт';\n\nfunction copySvgSprite(done) {\n  _gulp.default.src(_config.default.svg.generated).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Copy svg sprite',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulp.default.dest(_config.default.svg.spriteDest));\n\n  done();\n}\n\n;\ncopySvgSprite.description = 'Копирует svg спрайт в /build директорию';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwcml0ZV9zdmcuanMiXSwibmFtZXMiOlsiY2xlYW5TdmdTcHJpdGUiLCJkb25lIiwiY29uZmlnIiwic3ZnIiwiZ2VuZXJhdGVkIiwiZGVzY3JpcHRpb24iLCJnZW5lcmF0ZVN2Z1Nwcml0ZSIsImd1bHAiLCJzcmMiLCJzcHJpdGUiLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwibm90aWZ5Iiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwibW9kZSIsInNlbGVjdG9yIiwiY3NzRmlsZSIsInN5bWJvbHMiLCJwcmV2aWV3IiwiZGVzdCIsInNwcml0ZUdlbmVyYXRlRGVzdCIsImNvcHlTdmdTcHJpdGUiLCJzcHJpdGVEZXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBOzs7QUFJTyxTQUFTQSxjQUFULENBQXdCQyxJQUF4QixFQUE4QjtBQUNqQyx1QkFBT0MsZ0JBQU9DLEdBQVAsQ0FBV0MsU0FBbEIsRUFBNkJILElBQTdCO0FBQ0g7O0FBQUE7QUFDREQsY0FBYyxDQUFDSyxXQUFmLEdBQTZCLG9CQUE3QjtBQUVBOzs7O0FBSU8sU0FBU0MsaUJBQVQsQ0FBMkJMLElBQTNCLEVBQWlDO0FBQ3BDLFNBQU9NLGNBQUtDLEdBQUwsQ0FBU04sZ0JBQU9DLEdBQVAsQ0FBV00sTUFBcEIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRUMsb0JBQU9DLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLFlBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRlAsSUFQRSxDQU9HLDZCQUFVO0FBQ1pRLElBQUFBLElBQUksRUFBRSxTQURNO0FBRVpDLElBQUFBLFFBQVEsRUFBRSxTQUZFO0FBR1pDLElBQUFBLE9BQU8sRUFBRSxLQUhHO0FBSVpqQixJQUFBQSxHQUFHLEVBQUU7QUFDRE0sTUFBQUEsTUFBTSxFQUFFLFlBRFA7QUFFRFksTUFBQUEsT0FBTyxFQUFFO0FBRlIsS0FKTztBQVFaQyxJQUFBQSxPQUFPLEVBQUU7QUFSRyxHQUFWLENBUEgsRUFpQkZaLElBakJFLENBaUJHSCxjQUFLZ0IsSUFBTCxDQUFVckIsZ0JBQU9DLEdBQVAsQ0FBV3FCLGtCQUFyQixDQWpCSCxDQUFQO0FBa0JIOztBQUFBO0FBQ0RsQixpQkFBaUIsQ0FBQ0QsV0FBbEIsR0FBZ0Msb0JBQWhDOztBQUdPLFNBQVNvQixhQUFULENBQXVCeEIsSUFBdkIsRUFBNkI7QUFDaENNLGdCQUFLQyxHQUFMLENBQVNOLGdCQUFPQyxHQUFQLENBQVdDLFNBQXBCLEVBQ0tNLElBREwsQ0FDVSwwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVDLG9CQUFPQyxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxpQkFEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FEVixFQU9LUCxJQVBMLENBT1VILGNBQUtnQixJQUFMLENBQVVyQixnQkFBT0MsR0FBUCxDQUFXdUIsVUFBckIsQ0FQVjs7QUFTQXpCLEVBQUFBLElBQUk7QUFDUDs7QUFBQTtBQUNEd0IsYUFBYSxDQUFDcEIsV0FBZCxHQUE0Qix5Q0FBNUIiLCJzb3VyY2VSb290IjoiQzpcXHByb2plY3RzXFxteS1wcm9qZWN0XFxJUTAwN1xcaXFcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCByaW1yYWYgZnJvbSAncmltcmFmJztcclxuaW1wb3J0IHN2Z1Nwcml0ZSBmcm9tICdndWxwLXN2Zy1zcHJpdGVzJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnXHJcblxyXG5cclxuLypcclxuICog0KPQtNCw0LvRj9C10YIgc3ZnINGB0L/RgNCw0LnRgiAvc3JjL2ltZy9zdmcvc3ByaXRlLnN2Z1xyXG4gKi9cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjbGVhblN2Z1Nwcml0ZShkb25lKSB7XHJcbiAgICByaW1yYWYoY29uZmlnLnN2Zy5nZW5lcmF0ZWQsIGRvbmUpO1xyXG59O1xyXG5jbGVhblN2Z1Nwcml0ZS5kZXNjcmlwdGlvbiA9ICfQo9C00LDQu9GP0LXRgiBzdmcg0YHQv9GA0LDQudGCJztcclxuXHJcbi8qXHJcbiAqINCT0LXQvdGA0LjRgiBzdmcg0YHQv9GA0LDQudGCINC40Lcg0YTQsNC50LvQvtCyIC9zcmMvaW1nL3N2Zy9zcHJpdGUvKi5zdmdcclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTdmdTcHJpdGUoZG9uZSkge1xyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5zdmcuc3ByaXRlKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdTdmcgc3ByaXRlJyxcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVyci50b1N0cmluZygpXHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgIH0pKVxyXG4gICAgICAgIC5waXBlKHN2Z1Nwcml0ZSh7XHJcbiAgICAgICAgICAgIG1vZGU6ICdzeW1ib2xzJyxcclxuICAgICAgICAgICAgc2VsZWN0b3I6ICdpY29uLSVmJyxcclxuICAgICAgICAgICAgY3NzRmlsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHN2Zzoge1xyXG4gICAgICAgICAgICAgICAgc3ByaXRlOiAnc3ByaXRlLnN2ZycsXHJcbiAgICAgICAgICAgICAgICBzeW1ib2xzOiAnc3ByaXRlLnN2ZydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcHJldmlldzogZmFsc2VcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLnN2Zy5zcHJpdGVHZW5lcmF0ZURlc3QpKTtcclxufTtcclxuZ2VuZXJhdGVTdmdTcHJpdGUuZGVzY3JpcHRpb24gPSAn0KHQvtC30LTQsNC10YIgc3ZnINGB0L/RgNCw0LnRgic7XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvcHlTdmdTcHJpdGUoZG9uZSkge1xyXG4gICAgZ3VscC5zcmMoY29uZmlnLnN2Zy5nZW5lcmF0ZWQpXHJcbiAgICAgICAgLnBpcGUocGx1bWJlcih7XHJcbiAgICAgICAgICAgIGVycm9ySGFuZGxlcjogbm90aWZ5Lm9uRXJyb3IoZXJyID0+ICh7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0NvcHkgc3ZnIHNwcml0ZScsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLnN2Zy5zcHJpdGVEZXN0KSk7XHJcblxyXG4gICAgZG9uZSgpO1xyXG59O1xyXG5jb3B5U3ZnU3ByaXRlLmRlc2NyaXB0aW9uID0gJ9Ca0L7Qv9C40YDRg9C10YIgc3ZnINGB0L/RgNCw0LnRgiDQsiAvYnVpbGQg0LTQuNGA0LXQutGC0L7RgNC40Y4nOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "sprite_svg.js"
      ],
      "names": [
        "cleanSvgSprite",
        "done",
        "config",
        "svg",
        "generated",
        "description",
        "generateSvgSprite",
        "gulp",
        "src",
        "sprite",
        "pipe",
        "errorHandler",
        "notify",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "mode",
        "selector",
        "cssFile",
        "symbols",
        "preview",
        "dest",
        "spriteGenerateDest",
        "copySvgSprite",
        "spriteDest"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGA;;;AAIO,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,uBAAOC,gBAAOC,GAAP,CAAWC,SAAlB,EAA6BH,IAA7B;AACH;;AAAA;AACDD,cAAc,CAACK,WAAf,GAA6B,oBAA7B;AAEA;;;;AAIO,SAASC,iBAAT,CAA2BL,IAA3B,EAAiC;AACpC,SAAOM,cAAKC,GAAL,CAASN,gBAAOC,GAAP,CAAWM,MAApB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,YAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFP,IAPE,CAOG,6BAAU;AACZQ,IAAAA,IAAI,EAAE,SADM;AAEZC,IAAAA,QAAQ,EAAE,SAFE;AAGZC,IAAAA,OAAO,EAAE,KAHG;AAIZjB,IAAAA,GAAG,EAAE;AACDM,MAAAA,MAAM,EAAE,YADP;AAEDY,MAAAA,OAAO,EAAE;AAFR,KAJO;AAQZC,IAAAA,OAAO,EAAE;AARG,GAAV,CAPH,EAiBFZ,IAjBE,CAiBGH,cAAKgB,IAAL,CAAUrB,gBAAOC,GAAP,CAAWqB,kBAArB,CAjBH,CAAP;AAkBH;;AAAA;AACDlB,iBAAiB,CAACD,WAAlB,GAAgC,oBAAhC;;AAGO,SAASoB,aAAT,CAAuBxB,IAAvB,EAA6B;AAChCM,gBAAKC,GAAL,CAASN,gBAAOC,GAAP,CAAWC,SAApB,EACKM,IADL,CACU,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,iBAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADV,EAOKP,IAPL,CAOUH,cAAKgB,IAAL,CAAUrB,gBAAOC,GAAP,CAAWuB,UAArB,CAPV;;AASAzB,EAAAA,IAAI;AACP;;AAAA;AACDwB,aAAa,CAACpB,WAAd,GAA4B,yCAA5B",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport rimraf from 'rimraf';\r\nimport svgSprite from 'gulp-svg-sprites';\r\nimport config from '../config'\r\n\r\n\r\n/*\r\n * Удаляет svg спрайт /src/img/svg/sprite.svg\r\n */\r\n\r\nexport function cleanSvgSprite(done) {\r\n    rimraf(config.svg.generated, done);\r\n};\r\ncleanSvgSprite.description = 'Удаляет svg спрайт';\r\n\r\n/*\r\n * Генрит svg спрайт из файлов /src/img/svg/sprite/*.svg\r\n */\r\n\r\nexport function generateSvgSprite(done) {\r\n    return gulp.src(config.svg.sprite)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Svg sprite',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(svgSprite({\r\n            mode: 'symbols',\r\n            selector: 'icon-%f',\r\n            cssFile: false,\r\n            svg: {\r\n                sprite: 'sprite.svg',\r\n                symbols: 'sprite.svg'\r\n            },\r\n            preview: false\r\n        }))\r\n        .pipe(gulp.dest(config.svg.spriteGenerateDest));\r\n};\r\ngenerateSvgSprite.description = 'Создает svg спрайт';\r\n\r\n\r\nexport function copySvgSprite(done) {\r\n    gulp.src(config.svg.generated)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Copy svg sprite',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gulp.dest(config.svg.spriteDest));\r\n\r\n    done();\r\n};\r\ncopySvgSprite.description = 'Копирует svg спрайт в /build директорию';"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\js.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\js.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\js.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\js.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
        "sourceFileName": "js.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.jsInternal = jsInternal;\nexports.jsExternal = jsExternal;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpFileInclude = _interopRequireDefault(require(\"gulp-file-include\"));\n\nvar _gulpUglify = _interopRequireDefault(require(\"gulp-uglify\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сборка js\r\n * Минификация\r\n */\nfunction jsInternal() {\n  _browserSync.default.notify('Compiling js internal');\n\n  return _gulp.default.src(_config.default.js.srcInternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'JS internal',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe((0, _gulpBabel.default)()).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpUglify.default)(_config.default.uglify) : _gulpUtil.default.noop()).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write()).pipe(_gulp.default.dest(_config.default.js.dest));\n}\n\njsInternal.description = 'Сборка internal js';\n\nfunction jsExternal() {\n  _browserSync.default.notify('Compiling js external');\n\n  return _gulp.default.src(_config.default.js.srcExternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'JS external',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpUglify.default)() : _gulpUtil.default.noop()).pipe(_gulp.default.dest(_config.default.js.dest));\n}\n\njsExternal.description = 'Сборка external js';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzLmpzIl0sIm5hbWVzIjpbImpzSW50ZXJuYWwiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJqcyIsInNyY0ludGVybmFsIiwicGlwZSIsImVycm9ySGFuZGxlciIsIm9uRXJyb3IiLCJlcnIiLCJ0aXRsZSIsIm1lc3NhZ2UiLCJ0b1N0cmluZyIsImd1dGlsIiwiZW52Iiwibm9vcCIsInNvdXJjZW1hcHMiLCJpbml0IiwicHJlZml4IiwiYmFzZXBhdGgiLCJpbmRlbnQiLCJ1Z2xpZnkiLCJ3cml0ZSIsImRlc3QiLCJkZXNjcmlwdGlvbiIsImpzRXh0ZXJuYWwiLCJzcmNFeHRlcm5hbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7O0FBS08sU0FBU0EsVUFBVCxHQUFzQjtBQUN6QkMsdUJBQVlDLE1BQVosQ0FBbUIsdUJBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU0MsZ0JBQU9DLEVBQVAsQ0FBVUMsV0FBbkIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRVAsb0JBQU9RLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLGFBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCRCxrQkFBTUUsSUFBTixFQUEzQixHQUEwQ0Msd0JBQVdDLElBQVgsRUFQN0MsRUFRRlgsSUFSRSxDQVFHLDhCQUFZO0FBQ2RZLElBQUFBLE1BQU0sRUFBRSxJQURNO0FBRWRDLElBQUFBLFFBQVEsRUFBRSxPQUZJO0FBR2RDLElBQUFBLE1BQU0sRUFBRTtBQUhNLEdBQVosQ0FSSCxFQWFGZCxJQWJFLENBYUcseUJBYkgsRUFjRkEsSUFkRSxDQWNHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLHlCQUFPWCxnQkFBT2tCLE1BQWQsQ0FBM0IsR0FBbURSLGtCQUFNRSxJQUFOLEVBZHRELEVBZUZULElBZkUsQ0FlR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQkQsa0JBQU1FLElBQU4sRUFBM0IsR0FBMENDLHdCQUFXTSxLQUFYLEVBZjdDLEVBZ0JGaEIsSUFoQkUsQ0FnQkdMLGNBQUtzQixJQUFMLENBQVVwQixnQkFBT0MsRUFBUCxDQUFVbUIsSUFBcEIsQ0FoQkgsQ0FBUDtBQWlCSDs7QUFDRHpCLFVBQVUsQ0FBQzBCLFdBQVgsR0FBeUIsb0JBQXpCOztBQUlPLFNBQVNDLFVBQVQsR0FBc0I7QUFDekIxQix1QkFBWUMsTUFBWixDQUFtQix1QkFBbkI7O0FBRUEsU0FBT0MsY0FBS0MsR0FBTCxDQUFTQyxnQkFBT0MsRUFBUCxDQUFVc0IsV0FBbkIsRUFDRnBCLElBREUsQ0FDRywwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVQLG9CQUFPUSxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxhQUQwQjtBQUVqQ0MsUUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsT0FBTDtBQUFBLEtBQWxCO0FBREosR0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyw4QkFBWTtBQUNkWSxJQUFBQSxNQUFNLEVBQUUsSUFETTtBQUVkQyxJQUFBQSxRQUFRLEVBQUUsT0FGSTtBQUdkQyxJQUFBQSxNQUFNLEVBQUU7QUFITSxHQUFaLENBUEgsRUFZRmQsSUFaRSxDQVlHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLDBCQUEzQixHQUFzQ0Qsa0JBQU1FLElBQU4sRUFaekMsRUFhRlQsSUFiRSxDQWFHTCxjQUFLc0IsSUFBTCxDQUFVcEIsZ0JBQU9DLEVBQVAsQ0FBVW1CLElBQXBCLENBYkgsQ0FBUDtBQWNIOztBQUNERSxVQUFVLENBQUNELFdBQVgsR0FBeUIsb0JBQXpCIiwic291cmNlUm9vdCI6IkM6XFxwcm9qZWN0c1xcbXktcHJvamVjdFxcSVEwMDdcXGlxXFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBiYWJlbCBmcm9tICdndWxwLWJhYmVsJztcclxuaW1wb3J0IGd1dGlsIGZyb20gJ2d1bHAtdXRpbCc7XHJcbmltcG9ydCBwbHVtYmVyIGZyb20gJ2d1bHAtcGx1bWJlcic7XHJcbmltcG9ydCBub3RpZnkgZnJvbSAnZ3VscC1ub3RpZnknO1xyXG5pbXBvcnQgYnJvd3NlcnN5bmMgZnJvbSAnYnJvd3Nlci1zeW5jJztcclxuaW1wb3J0IGZpbGVpbmNsdWRlIGZyb20gJ2d1bHAtZmlsZS1pbmNsdWRlJztcclxuaW1wb3J0IHVnbGlmeSBmcm9tICdndWxwLXVnbGlmeSc7XHJcbmltcG9ydCBzb3VyY2VtYXBzIGZyb20gJ2d1bHAtc291cmNlbWFwcyc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0KHQsdC+0YDQutCwIGpzXHJcbiAqINCc0LjQvdC40YTQuNC60LDRhtC40Y9cclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24ganNJbnRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIGpzIGludGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5qcy5zcmNJbnRlcm5hbClcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSlMgaW50ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy5pbml0KCkpXHJcbiAgICAgICAgLnBpcGUoZmlsZWluY2x1ZGUoe1xyXG4gICAgICAgICAgICBwcmVmaXg6ICdAQCcsXHJcbiAgICAgICAgICAgIGJhc2VwYXRoOiAnQGZpbGUnLFxyXG4gICAgICAgICAgICBpbmRlbnQ6IHRydWVcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShiYWJlbCgpKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IHVnbGlmeShjb25maWcudWdsaWZ5KSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndXRpbC5ub29wKCkgOiBzb3VyY2VtYXBzLndyaXRlKCkpXHJcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KGNvbmZpZy5qcy5kZXN0KSk7XHJcbn1cclxuanNJbnRlcm5hbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaW50ZXJuYWwganMnO1xyXG5cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24ganNFeHRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIGpzIGV4dGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5qcy5zcmNFeHRlcm5hbClcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSlMgZXh0ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZmlsZWluY2x1ZGUoe1xyXG4gICAgICAgICAgICBwcmVmaXg6ICdAQCcsXHJcbiAgICAgICAgICAgIGJhc2VwYXRoOiAnQGZpbGUnLFxyXG4gICAgICAgICAgICBpbmRlbnQ6IHRydWVcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyB1Z2xpZnkoKSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmpzLmRlc3QpKTtcclxufVxyXG5qc0V4dGVybmFsLmRlc2NyaXB0aW9uID0gJ9Ch0LHQvtGA0LrQsCBleHRlcm5hbCBqcyc7Il19",
    "map": {
      "version": 3,
      "sources": [
        "js.js"
      ],
      "names": [
        "jsInternal",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "config",
        "js",
        "srcInternal",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "gutil",
        "env",
        "noop",
        "sourcemaps",
        "init",
        "prefix",
        "basepath",
        "indent",
        "uglify",
        "write",
        "dest",
        "description",
        "jsExternal",
        "srcExternal"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;AAKO,SAASA,UAAT,GAAsB;AACzBC,uBAAYC,MAAZ,CAAmB,uBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAOC,EAAP,CAAUC,WAAnB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,aAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,8BAAY;AACdY,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CARH,EAaFd,IAbE,CAaG,yBAbH,EAcFA,IAdE,CAcGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,yBAAOX,gBAAOkB,MAAd,CAA3B,GAAmDR,kBAAME,IAAN,EAdtD,EAeFT,IAfE,CAeGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWM,KAAX,EAf7C,EAgBFhB,IAhBE,CAgBGL,cAAKsB,IAAL,CAAUpB,gBAAOC,EAAP,CAAUmB,IAApB,CAhBH,CAAP;AAiBH;;AACDzB,UAAU,CAAC0B,WAAX,GAAyB,oBAAzB;;AAIO,SAASC,UAAT,GAAsB;AACzB1B,uBAAYC,MAAZ,CAAmB,uBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAOC,EAAP,CAAUsB,WAAnB,EACFpB,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,aAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOG,8BAAY;AACdY,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CAPH,EAYFd,IAZE,CAYGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAA3B,GAAsCD,kBAAME,IAAN,EAZzC,EAaFT,IAbE,CAaGL,cAAKsB,IAAL,CAAUpB,gBAAOC,EAAP,CAAUmB,IAApB,CAbH,CAAP;AAcH;;AACDE,UAAU,CAACD,WAAX,GAAyB,oBAAzB",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport babel from 'gulp-babel';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport fileinclude from 'gulp-file-include';\r\nimport uglify from 'gulp-uglify';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport config from '../config'\r\n\r\n/*\r\n * Сборка js\r\n * Минификация\r\n */\r\n\r\nexport function jsInternal() {\r\n    browsersync.notify('Compiling js internal');\r\n\r\n    return gulp.src(config.js.srcInternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'JS internal',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(babel())\r\n        .pipe(gutil.env.env === 'prod' ? uglify(config.uglify) : gutil.noop())\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write())\r\n        .pipe(gulp.dest(config.js.dest));\r\n}\r\njsInternal.description = 'Сборка internal js';\r\n\r\n\r\n\r\nexport function jsExternal() {\r\n    browsersync.notify('Compiling js external');\r\n\r\n    return gulp.src(config.js.srcExternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'JS external',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? uglify() : gutil.noop())\r\n        .pipe(gulp.dest(config.js.dest));\r\n}\r\njsExternal.description = 'Сборка external js';"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"filename\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\\\\gulp\\\\tasks\\\\postcss.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projects\\\\my-project\\\\IQ007\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\projects\\my-project\\IQ007\\iq",
      "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\postcss.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\projects\\my-project\\IQ007\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\postcss.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\postcss.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
        "sourceFileName": "postcss.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postcssInternal = postcssInternal;\nexports.postcssExternal = postcssExternal;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpRename = _interopRequireDefault(require(\"gulp-rename\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpCssnano = _interopRequireDefault(require(\"gulp-cssnano\"));\n\nvar _postcssInlineSvg = _interopRequireDefault(require(\"postcss-inline-svg\"));\n\nvar _postcssImport = _interopRequireDefault(require(\"postcss-import\"));\n\nvar _precss = _interopRequireDefault(require(\"precss\"));\n\nvar _postcssSassyMixins = _interopRequireDefault(require(\"postcss-sassy-mixins\"));\n\nvar _lost = _interopRequireDefault(require(\"lost\"));\n\nvar _postcssCssnext = _interopRequireDefault(require(\"postcss-cssnext\"));\n\nvar _postcssPxtorem = _interopRequireDefault(require(\"postcss-pxtorem\"));\n\nvar _postcssHexrgba = _interopRequireDefault(require(\"postcss-hexrgba\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Компиляция POSTCSS в CSS\r\n * Создание sourcemaps\r\n * Минификация\r\n */\nvar processors = [(0, _postcssImport.default)(), (0, _postcssSassyMixins.default)(), (0, _precss.default)(), (0, _lost.default)(), (0, _postcssPxtorem.default)(), (0, _postcssHexrgba.default)(), (0, _postcssInlineSvg.default)(_config.default.svg.svgInStyle), (0, _postcssCssnext.default)()];\n\nfunction postcssInternal() {\n  _browserSync.default.notify('Compiling CSS internal');\n\n  return _gulp.default.src(_config.default.css.srcInternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'CSS internal',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpPostcss.default)(processors)).pipe((0, _gulpAutoprefixer.default)()).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpCssnano.default)(_config.default.cssnano) : _gulpUtil.default.noop()).pipe((0, _gulpRename.default)({\n    extname: '.css'\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write('.')).pipe(_gulp.default.dest(_config.default.css.dest));\n}\n\n;\npostcssInternal.description = 'Сборка internal css';\n\nfunction postcssExternal() {\n  _browserSync.default.notify('Compiling CSS external');\n\n  return _gulp.default.src(_config.default.css.srcExternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'CSS external',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpPostcss.default)([(0, _postcssImport.default)()])).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpCssnano.default)(_config.default.cssnano) : _gulpUtil.default.noop()).pipe((0, _gulpRename.default)({\n    extname: '.css'\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write('.')).pipe(_gulp.default.dest(_config.default.css.dest));\n}\n\n;\npostcssExternal.description = 'Сборка external css';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3Rjc3MuanMiXSwibmFtZXMiOlsicHJvY2Vzc29ycyIsImNvbmZpZyIsInN2ZyIsInN2Z0luU3R5bGUiLCJwb3N0Y3NzSW50ZXJuYWwiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjc3MiLCJzcmNJbnRlcm5hbCIsInBpcGUiLCJlcnJvckhhbmRsZXIiLCJvbkVycm9yIiwiZXJyIiwidGl0bGUiLCJtZXNzYWdlIiwidG9TdHJpbmciLCJndXRpbCIsImVudiIsIm5vb3AiLCJzb3VyY2VtYXBzIiwiaW5pdCIsImNzc25hbm8iLCJleHRuYW1lIiwid3JpdGUiLCJkZXN0IiwiZGVzY3JpcHRpb24iLCJwb3N0Y3NzRXh0ZXJuYWwiLCJzcmNFeHRlcm5hbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7OztBQU1BLElBQU1BLFVBQVUsR0FBRyxDQUNmLDZCQURlLEVBRWYsa0NBRmUsRUFHZixzQkFIZSxFQUlmLG9CQUplLEVBS2YsOEJBTGUsRUFNZiw4QkFOZSxFQU9mLCtCQUFVQyxnQkFBT0MsR0FBUCxDQUFXQyxVQUFyQixDQVBlLEVBUWYsOEJBUmUsQ0FBbkI7O0FBYU8sU0FBU0MsZUFBVCxHQUEyQjtBQUM5QkMsdUJBQVlDLE1BQVosQ0FBbUIsd0JBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU1AsZ0JBQU9RLEdBQVAsQ0FBV0MsV0FBcEIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRU4sb0JBQU9PLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLGNBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCRCxrQkFBTUUsSUFBTixFQUEzQixHQUEwQ0Msd0JBQVdDLElBQVgsRUFQN0MsRUFRRlgsSUFSRSxDQVFHLDBCQUFZWCxVQUFaLENBUkgsRUFTRlcsSUFURSxDQVNHLGdDQVRILEVBVUZBLElBVkUsQ0FVR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQiwwQkFBUWxCLGdCQUFPc0IsT0FBZixDQUEzQixHQUFxREwsa0JBQU1FLElBQU4sRUFWeEQsRUFXRlQsSUFYRSxDQVdHLHlCQUFPO0FBQUNhLElBQUFBLE9BQU8sRUFBRTtBQUFWLEdBQVAsQ0FYSCxFQVlGYixJQVpFLENBWUdPLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJELGtCQUFNRSxJQUFOLEVBQTNCLEdBQTBDQyx3QkFBV0ksS0FBWCxDQUFpQixHQUFqQixDQVo3QyxFQWFGZCxJQWJFLENBYUdKLGNBQUttQixJQUFMLENBQVV6QixnQkFBT1EsR0FBUCxDQUFXaUIsSUFBckIsQ0FiSCxDQUFQO0FBY0g7O0FBQUE7QUFDRHRCLGVBQWUsQ0FBQ3VCLFdBQWhCLEdBQThCLHFCQUE5Qjs7QUFHTyxTQUFTQyxlQUFULEdBQTJCO0FBQzlCdkIsdUJBQVlDLE1BQVosQ0FBbUIsd0JBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU1AsZ0JBQU9RLEdBQVAsQ0FBV29CLFdBQXBCLEVBQ0ZsQixJQURFLENBQ0csMEJBQVE7QUFDVkMsSUFBQUEsWUFBWSxFQUFFTixvQkFBT08sT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxhQUFLO0FBQ2pDQyxRQUFBQSxLQUFLLEVBQUUsY0FEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FESCxFQU9GTixJQVBFLENBT0dPLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJELGtCQUFNRSxJQUFOLEVBQTNCLEdBQTBDQyx3QkFBV0MsSUFBWCxFQVA3QyxFQVFGWCxJQVJFLENBUUcsMEJBQVksQ0FBQyw2QkFBRCxDQUFaLENBUkgsRUFTRkEsSUFURSxDQVNHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLDBCQUFRbEIsZ0JBQU9zQixPQUFmLENBQTNCLEdBQXFETCxrQkFBTUUsSUFBTixFQVR4RCxFQVVGVCxJQVZFLENBVUcseUJBQU87QUFBQ2EsSUFBQUEsT0FBTyxFQUFFO0FBQVYsR0FBUCxDQVZILEVBV0ZiLElBWEUsQ0FXR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQkQsa0JBQU1FLElBQU4sRUFBM0IsR0FBMENDLHdCQUFXSSxLQUFYLENBQWlCLEdBQWpCLENBWDdDLEVBWUZkLElBWkUsQ0FZR0osY0FBS21CLElBQUwsQ0FBVXpCLGdCQUFPUSxHQUFQLENBQVdpQixJQUFyQixDQVpILENBQVA7QUFhSDs7QUFBQTtBQUNERSxlQUFlLENBQUNELFdBQWhCLEdBQThCLHFCQUE5QiIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVjdHNcXG15LXByb2plY3RcXElRMDA3XFxpcVxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xyXG5pbXBvcnQgZ3V0aWwgZnJvbSAnZ3VscC11dGlsJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgcmVuYW1lIGZyb20gJ2d1bHAtcmVuYW1lJztcclxuaW1wb3J0IHNvdXJjZW1hcHMgZnJvbSAnZ3VscC1zb3VyY2VtYXBzJztcclxuaW1wb3J0IHByZWZpeGVyIGZyb20gJ2d1bHAtYXV0b3ByZWZpeGVyJztcclxuaW1wb3J0IGd1bHBQb3N0Y3NzIGZyb20gJ2d1bHAtcG9zdGNzcyc7XHJcbmltcG9ydCBjc3NuYW5vIGZyb20gJ2d1bHAtY3NzbmFubyc7XHJcbmltcG9ydCBpbmxpbmVTdmcgZnJvbSAncG9zdGNzcy1pbmxpbmUtc3ZnJztcclxuaW1wb3J0IGF0SW1wb3J0IGZyb20gJ3Bvc3Rjc3MtaW1wb3J0JztcclxuaW1wb3J0IHByZWNzcyBmcm9tICdwcmVjc3MnO1xyXG5pbXBvcnQgbWl4aW5zIGZyb20gJ3Bvc3Rjc3Mtc2Fzc3ktbWl4aW5zJztcclxuaW1wb3J0IGxvc3QgZnJvbSAnbG9zdCc7XHJcbmltcG9ydCBuZXh0IGZyb20gJ3Bvc3Rjc3MtY3NzbmV4dCc7XHJcbmltcG9ydCBweHRvcmVtIGZyb20gJ3Bvc3Rjc3MtcHh0b3JlbSc7XHJcbmltcG9ydCBoZXhyZ2JhIGZyb20gJ3Bvc3Rjc3MtaGV4cmdiYSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJztcclxuXHJcbi8qXHJcbiAqINCa0L7QvNC/0LjQu9GP0YbQuNGPIFBPU1RDU1Mg0LIgQ1NTXHJcbiAqINCh0L7Qt9C00LDQvdC40LUgc291cmNlbWFwc1xyXG4gKiDQnNC40L3QuNGE0LjQutCw0YbQuNGPXHJcbiAqL1xyXG5cclxuY29uc3QgcHJvY2Vzc29ycyA9IFtcclxuICAgIGF0SW1wb3J0KCksXHJcbiAgICBtaXhpbnMoKSxcclxuICAgIHByZWNzcygpLFxyXG4gICAgbG9zdCgpLFxyXG4gICAgcHh0b3JlbSgpLFxyXG4gICAgaGV4cmdiYSgpLFxyXG4gICAgaW5saW5lU3ZnKGNvbmZpZy5zdmcuc3ZnSW5TdHlsZSksXHJcbiAgICBuZXh0KClcclxuXTtcclxuXHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBvc3Rjc3NJbnRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIENTUyBpbnRlcm5hbCcpO1xyXG5cclxuICAgIHJldHVybiBndWxwLnNyYyhjb25maWcuY3NzLnNyY0ludGVybmFsKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdDU1MgaW50ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy5pbml0KCkpXHJcbiAgICAgICAgLnBpcGUoZ3VscFBvc3Rjc3MocHJvY2Vzc29ycykpXHJcbiAgICAgICAgLnBpcGUocHJlZml4ZXIoKSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBjc3NuYW5vKGNvbmZpZy5jc3NuYW5vKSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShyZW5hbWUoe2V4dG5hbWU6ICcuY3NzJ30pKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IGd1dGlsLm5vb3AoKSA6IHNvdXJjZW1hcHMud3JpdGUoJy4nKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmNzcy5kZXN0KSk7XHJcbn07XHJcbnBvc3Rjc3NJbnRlcm5hbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaW50ZXJuYWwgY3NzJztcclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcG9zdGNzc0V4dGVybmFsKCkge1xyXG4gICAgYnJvd3NlcnN5bmMubm90aWZ5KCdDb21waWxpbmcgQ1NTIGV4dGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5jc3Muc3JjRXh0ZXJuYWwpXHJcbiAgICAgICAgLnBpcGUocGx1bWJlcih7XHJcbiAgICAgICAgICAgIGVycm9ySGFuZGxlcjogbm90aWZ5Lm9uRXJyb3IoZXJyID0+ICh7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0NTUyBleHRlcm5hbCcsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndXRpbC5ub29wKCkgOiBzb3VyY2VtYXBzLmluaXQoKSlcclxuICAgICAgICAucGlwZShndWxwUG9zdGNzcyhbYXRJbXBvcnQoKV0pKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IGNzc25hbm8oY29uZmlnLmNzc25hbm8pIDogZ3V0aWwubm9vcCgpKVxyXG4gICAgICAgIC5waXBlKHJlbmFtZSh7ZXh0bmFtZTogJy5jc3MnfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy53cml0ZSgnLicpKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChjb25maWcuY3NzLmRlc3QpKTtcclxufTtcclxucG9zdGNzc0V4dGVybmFsLmRlc2NyaXB0aW9uID0gJ9Ch0LHQvtGA0LrQsCBleHRlcm5hbCBjc3MnO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "postcss.js"
      ],
      "names": [
        "processors",
        "config",
        "svg",
        "svgInStyle",
        "postcssInternal",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "css",
        "srcInternal",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "gutil",
        "env",
        "noop",
        "sourcemaps",
        "init",
        "cssnano",
        "extname",
        "write",
        "dest",
        "description",
        "postcssExternal",
        "srcExternal"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;AAMA,IAAMA,UAAU,GAAG,CACf,6BADe,EAEf,kCAFe,EAGf,sBAHe,EAIf,oBAJe,EAKf,8BALe,EAMf,8BANe,EAOf,+BAAUC,gBAAOC,GAAP,CAAWC,UAArB,CAPe,EAQf,8BARe,CAAnB;;AAaO,SAASC,eAAT,GAA2B;AAC9BC,uBAAYC,MAAZ,CAAmB,wBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASP,gBAAOQ,GAAP,CAAWC,WAApB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEN,oBAAOO,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,cAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,0BAAYX,UAAZ,CARH,EASFW,IATE,CASG,gCATH,EAUFA,IAVE,CAUGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAAQlB,gBAAOsB,OAAf,CAA3B,GAAqDL,kBAAME,IAAN,EAVxD,EAWFT,IAXE,CAWG,yBAAO;AAACa,IAAAA,OAAO,EAAE;AAAV,GAAP,CAXH,EAYFb,IAZE,CAYGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWI,KAAX,CAAiB,GAAjB,CAZ7C,EAaFd,IAbE,CAaGJ,cAAKmB,IAAL,CAAUzB,gBAAOQ,GAAP,CAAWiB,IAArB,CAbH,CAAP;AAcH;;AAAA;AACDtB,eAAe,CAACuB,WAAhB,GAA8B,qBAA9B;;AAGO,SAASC,eAAT,GAA2B;AAC9BvB,uBAAYC,MAAZ,CAAmB,wBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASP,gBAAOQ,GAAP,CAAWoB,WAApB,EACFlB,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEN,oBAAOO,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,cAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,0BAAY,CAAC,6BAAD,CAAZ,CARH,EASFA,IATE,CASGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAAQlB,gBAAOsB,OAAf,CAA3B,GAAqDL,kBAAME,IAAN,EATxD,EAUFT,IAVE,CAUG,yBAAO;AAACa,IAAAA,OAAO,EAAE;AAAV,GAAP,CAVH,EAWFb,IAXE,CAWGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWI,KAAX,CAAiB,GAAjB,CAX7C,EAYFd,IAZE,CAYGJ,cAAKmB,IAAL,CAAUzB,gBAAOQ,GAAP,CAAWiB,IAArB,CAZH,CAAP;AAaH;;AAAA;AACDE,eAAe,CAACD,WAAhB,GAA8B,qBAA9B",
      "sourceRoot": "C:\\projects\\my-project\\IQ007\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport rename from 'gulp-rename';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport prefixer from 'gulp-autoprefixer';\r\nimport gulpPostcss from 'gulp-postcss';\r\nimport cssnano from 'gulp-cssnano';\r\nimport inlineSvg from 'postcss-inline-svg';\r\nimport atImport from 'postcss-import';\r\nimport precss from 'precss';\r\nimport mixins from 'postcss-sassy-mixins';\r\nimport lost from 'lost';\r\nimport next from 'postcss-cssnext';\r\nimport pxtorem from 'postcss-pxtorem';\r\nimport hexrgba from 'postcss-hexrgba';\r\nimport config from '../config';\r\n\r\n/*\r\n * Компиляция POSTCSS в CSS\r\n * Создание sourcemaps\r\n * Минификация\r\n */\r\n\r\nconst processors = [\r\n    atImport(),\r\n    mixins(),\r\n    precss(),\r\n    lost(),\r\n    pxtorem(),\r\n    hexrgba(),\r\n    inlineSvg(config.svg.svgInStyle),\r\n    next()\r\n];\r\n\r\n\r\n\r\nexport function postcssInternal() {\r\n    browsersync.notify('Compiling CSS internal');\r\n\r\n    return gulp.src(config.css.srcInternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'CSS internal',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(gulpPostcss(processors))\r\n        .pipe(prefixer())\r\n        .pipe(gutil.env.env === 'prod' ? cssnano(config.cssnano) : gutil.noop())\r\n        .pipe(rename({extname: '.css'}))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write('.'))\r\n        .pipe(gulp.dest(config.css.dest));\r\n};\r\npostcssInternal.description = 'Сборка internal css';\r\n\r\n\r\nexport function postcssExternal() {\r\n    browsersync.notify('Compiling CSS external');\r\n\r\n    return gulp.src(config.css.srcExternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'CSS external',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(gulpPostcss([atImport()]))\r\n        .pipe(gutil.env.env === 'prod' ? cssnano(config.cssnano) : gutil.noop())\r\n        .pipe(rename({extname: '.css'}))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write('.'))\r\n        .pipe(gulp.dest(config.css.dest));\r\n};\r\npostcssExternal.description = 'Сборка external css';\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _serve = _interopRequireDefault(require(\"./gulp/tasks/serve\"));\n\nvar _watch = _interopRequireDefault(require(\"./gulp/tasks/watch\"));\n\nvar _clean = _interopRequireDefault(require(\"./gulp/tasks/clean\"));\n\nvar _html = _interopRequireDefault(require(\"./gulp/tasks/html\"));\n\nvar _fonts = _interopRequireDefault(require(\"./gulp/tasks/fonts\"));\n\nvar _images = _interopRequireDefault(require(\"./gulp/tasks/images\"));\n\nvar _sprite_svg = require(\"./gulp/tasks/sprite_svg\");\n\nvar _js = require(\"./gulp/tasks/js\");\n\nvar _postcss = require(\"./gulp/tasks/postcss\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_gulp.default.task(_serve.default);\n\n_gulp.default.task(_watch.default);\n\n_gulp.default.task(_clean.default);\n\n_gulp.default.task(_html.default);\n\n_gulp.default.task(_fonts.default);\n\n_gulp.default.task(_images.default);\n\n_gulp.default.task(_sprite_svg.cleanSvgSprite);\n\n_gulp.default.task(_sprite_svg.generateSvgSprite);\n\n_gulp.default.task(_sprite_svg.copySvgSprite);\n\n_gulp.default.task(_js.jsInternal);\n\n_gulp.default.task(_js.jsExternal);\n\n_gulp.default.task(_postcss.postcssInternal);\n\n_gulp.default.task(_postcss.postcssExternal);\n\n_gulp.default.task('js', _gulp.default.parallel('jsInternal', 'jsExternal'));\n\n_gulp.default.task('postcss', _gulp.default.parallel('postcssInternal', 'postcssExternal'));\n\n_gulp.default.task('spriteSvg', _gulp.default.series('cleanSvgSprite', _gulp.default.parallel('generateSvgSprite'), 'copySvgSprite', 'html'));\n\n_gulp.default.task('build', _gulpUtil.default.env.env === 'prod' ? _gulp.default.series('clean', _gulp.default.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'images') : _gulp.default.series('clean', _gulp.default.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'html', 'images'));\n\n_gulp.default.task('default', _gulpUtil.default.env.env === 'prod' ? _gulp.default.series('build') : _gulp.default.series('build', _gulp.default.parallel('serve', 'watch')));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJ0YXNrIiwic2VydmUiLCJ3YXRjaCIsImNsZWFuIiwiaHRtbCIsImZvbnRzIiwiaW1hZ2VzIiwiY2xlYW5TdmdTcHJpdGUiLCJnZW5lcmF0ZVN2Z1Nwcml0ZSIsImNvcHlTdmdTcHJpdGUiLCJqc0ludGVybmFsIiwianNFeHRlcm5hbCIsInBvc3Rjc3NJbnRlcm5hbCIsInBvc3Rjc3NFeHRlcm5hbCIsInBhcmFsbGVsIiwic2VyaWVzIiwiZ3V0aWwiLCJlbnYiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFHQUEsY0FBS0MsSUFBTCxDQUFVQyxjQUFWOztBQUNBRixjQUFLQyxJQUFMLENBQVVFLGNBQVY7O0FBQ0FILGNBQUtDLElBQUwsQ0FBVUcsY0FBVjs7QUFDQUosY0FBS0MsSUFBTCxDQUFVSSxhQUFWOztBQUNBTCxjQUFLQyxJQUFMLENBQVVLLGNBQVY7O0FBQ0FOLGNBQUtDLElBQUwsQ0FBVU0sZUFBVjs7QUFDQVAsY0FBS0MsSUFBTCxDQUFVTywwQkFBVjs7QUFDQVIsY0FBS0MsSUFBTCxDQUFVUSw2QkFBVjs7QUFDQVQsY0FBS0MsSUFBTCxDQUFVUyx5QkFBVjs7QUFDQVYsY0FBS0MsSUFBTCxDQUFVVSxjQUFWOztBQUNBWCxjQUFLQyxJQUFMLENBQVVXLGNBQVY7O0FBQ0FaLGNBQUtDLElBQUwsQ0FBVVksd0JBQVY7O0FBQ0FiLGNBQUtDLElBQUwsQ0FBVWEsd0JBQVY7O0FBR0FkLGNBQUtDLElBQUwsQ0FBVSxJQUFWLEVBQWdCRCxjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixDQUFoQjs7QUFDQWYsY0FBS0MsSUFBTCxDQUFVLFNBQVYsRUFBcUJELGNBQUtlLFFBQUwsQ0FBYyxpQkFBZCxFQUFpQyxpQkFBakMsQ0FBckI7O0FBQ0FmLGNBQUtDLElBQUwsQ0FBVSxXQUFWLEVBQXVCRCxjQUFLZ0IsTUFBTCxDQUFZLGdCQUFaLEVBQThCaEIsY0FBS2UsUUFBTCxDQUFjLG1CQUFkLENBQTlCLEVBQWtFLGVBQWxFLEVBQW1GLE1BQW5GLENBQXZCOztBQUdBZixjQUFLQyxJQUFMLENBQVUsT0FBVixFQUFtQmdCLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJsQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixFQUEwQyxpQkFBMUMsRUFBNkQsaUJBQTdELEVBQWdGLFdBQWhGLEVBQTZGLE9BQTdGLENBQXJCLEVBQTRILFFBQTVILENBQTNCLEdBQW1LZixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsWUFBZCxFQUE0QixZQUE1QixFQUEwQyxpQkFBMUMsRUFBNkQsaUJBQTdELEVBQWdGLFdBQWhGLEVBQTZGLE9BQTdGLENBQXJCLEVBQTRILE1BQTVILEVBQW9JLFFBQXBJLENBQXRMOztBQUVBZixjQUFLQyxJQUFMLENBQVUsU0FBVixFQUFxQmdCLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJsQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosQ0FBM0IsR0FBa0RoQixjQUFLZ0IsTUFBTCxDQUFZLE9BQVosRUFBcUJoQixjQUFLZSxRQUFMLENBQWMsT0FBZCxFQUF1QixPQUF2QixDQUFyQixDQUF2RSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE1heFxcRGV2UHJvamVjdHNcXElxMDA3XFxJUTAwNy1mXFxpcVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBndXRpbCBmcm9tICdndWxwLXV0aWwnO1xyXG5cclxuaW1wb3J0IHNlcnZlIGZyb20gJy4vZ3VscC90YXNrcy9zZXJ2ZSc7XHJcbmltcG9ydCB3YXRjaCBmcm9tICcuL2d1bHAvdGFza3Mvd2F0Y2gnO1xyXG5pbXBvcnQgY2xlYW4gZnJvbSAnLi9ndWxwL3Rhc2tzL2NsZWFuJztcclxuaW1wb3J0IGh0bWwgZnJvbSAnLi9ndWxwL3Rhc2tzL2h0bWwnO1xyXG5pbXBvcnQgZm9udHMgZnJvbSAnLi9ndWxwL3Rhc2tzL2ZvbnRzJztcclxuaW1wb3J0IGltYWdlcyBmcm9tICcuL2d1bHAvdGFza3MvaW1hZ2VzJztcclxuaW1wb3J0IHtjbGVhblN2Z1Nwcml0ZSwgZ2VuZXJhdGVTdmdTcHJpdGUsIGNvcHlTdmdTcHJpdGV9IGZyb20gJy4vZ3VscC90YXNrcy9zcHJpdGVfc3ZnJztcclxuaW1wb3J0IHtqc0ludGVybmFsLCBqc0V4dGVybmFsfSBmcm9tICcuL2d1bHAvdGFza3MvanMnO1xyXG5pbXBvcnQge3Bvc3Rjc3NJbnRlcm5hbCwgcG9zdGNzc0V4dGVybmFsfSBmcm9tICcuL2d1bHAvdGFza3MvcG9zdGNzcyc7XHJcblxyXG5cclxuZ3VscC50YXNrKHNlcnZlKTtcclxuZ3VscC50YXNrKHdhdGNoKTtcclxuZ3VscC50YXNrKGNsZWFuKTtcclxuZ3VscC50YXNrKGh0bWwpO1xyXG5ndWxwLnRhc2soZm9udHMpO1xyXG5ndWxwLnRhc2soaW1hZ2VzKTtcclxuZ3VscC50YXNrKGNsZWFuU3ZnU3ByaXRlKTtcclxuZ3VscC50YXNrKGdlbmVyYXRlU3ZnU3ByaXRlKTtcclxuZ3VscC50YXNrKGNvcHlTdmdTcHJpdGUpO1xyXG5ndWxwLnRhc2soanNJbnRlcm5hbCk7XHJcbmd1bHAudGFzayhqc0V4dGVybmFsKTtcclxuZ3VscC50YXNrKHBvc3Rjc3NJbnRlcm5hbCk7XHJcbmd1bHAudGFzayhwb3N0Y3NzRXh0ZXJuYWwpO1xyXG5cclxuXHJcbmd1bHAudGFzaygnanMnLCBndWxwLnBhcmFsbGVsKCdqc0ludGVybmFsJywgJ2pzRXh0ZXJuYWwnKSk7XHJcbmd1bHAudGFzaygncG9zdGNzcycsIGd1bHAucGFyYWxsZWwoJ3Bvc3Rjc3NJbnRlcm5hbCcsICdwb3N0Y3NzRXh0ZXJuYWwnKSk7XHJcbmd1bHAudGFzaygnc3ByaXRlU3ZnJywgZ3VscC5zZXJpZXMoJ2NsZWFuU3ZnU3ByaXRlJywgZ3VscC5wYXJhbGxlbCgnZ2VuZXJhdGVTdmdTcHJpdGUnKSwgJ2NvcHlTdmdTcHJpdGUnLCAnaHRtbCcpKTtcclxuXHJcblxyXG5ndWxwLnRhc2soJ2J1aWxkJywgZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3VscC5zZXJpZXMoJ2NsZWFuJywgZ3VscC5wYXJhbGxlbCgnanNJbnRlcm5hbCcsICdqc0V4dGVybmFsJywgJ3Bvc3Rjc3NJbnRlcm5hbCcsICdwb3N0Y3NzRXh0ZXJuYWwnLCAnc3ByaXRlU3ZnJywgJ2ZvbnRzJyksICdpbWFnZXMnKSA6IGd1bHAuc2VyaWVzKCdjbGVhbicsIGd1bHAucGFyYWxsZWwoJ2pzSW50ZXJuYWwnLCAnanNFeHRlcm5hbCcsICdwb3N0Y3NzSW50ZXJuYWwnLCAncG9zdGNzc0V4dGVybmFsJywgJ3Nwcml0ZVN2ZycsICdmb250cycpLCAnaHRtbCcsICdpbWFnZXMnKSk7XHJcblxyXG5ndWxwLnRhc2soJ2RlZmF1bHQnLCBndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndWxwLnNlcmllcygnYnVpbGQnKSA6IGd1bHAuc2VyaWVzKCdidWlsZCcsIGd1bHAucGFyYWxsZWwoJ3NlcnZlJywgJ3dhdGNoJykpKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "task",
        "serve",
        "watch",
        "clean",
        "html",
        "fonts",
        "images",
        "cleanSvgSprite",
        "generateSvgSprite",
        "copySvgSprite",
        "jsInternal",
        "jsExternal",
        "postcssInternal",
        "postcssExternal",
        "parallel",
        "series",
        "gutil",
        "env"
      ],
      "mappings": ";;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGAA,cAAKC,IAAL,CAAUC,cAAV;;AACAF,cAAKC,IAAL,CAAUE,cAAV;;AACAH,cAAKC,IAAL,CAAUG,cAAV;;AACAJ,cAAKC,IAAL,CAAUI,aAAV;;AACAL,cAAKC,IAAL,CAAUK,cAAV;;AACAN,cAAKC,IAAL,CAAUM,eAAV;;AACAP,cAAKC,IAAL,CAAUO,0BAAV;;AACAR,cAAKC,IAAL,CAAUQ,6BAAV;;AACAT,cAAKC,IAAL,CAAUS,yBAAV;;AACAV,cAAKC,IAAL,CAAUU,cAAV;;AACAX,cAAKC,IAAL,CAAUW,cAAV;;AACAZ,cAAKC,IAAL,CAAUY,wBAAV;;AACAb,cAAKC,IAAL,CAAUa,wBAAV;;AAGAd,cAAKC,IAAL,CAAU,IAAV,EAAgBD,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,CAAhB;;AACAf,cAAKC,IAAL,CAAU,SAAV,EAAqBD,cAAKe,QAAL,CAAc,iBAAd,EAAiC,iBAAjC,CAArB;;AACAf,cAAKC,IAAL,CAAU,WAAV,EAAuBD,cAAKgB,MAAL,CAAY,gBAAZ,EAA8BhB,cAAKe,QAAL,CAAc,mBAAd,CAA9B,EAAkE,eAAlE,EAAmF,MAAnF,CAAvB;;AAGAf,cAAKC,IAAL,CAAU,OAAV,EAAmBgB,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BlB,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,EAA0C,iBAA1C,EAA6D,iBAA7D,EAAgF,WAAhF,EAA6F,OAA7F,CAArB,EAA4H,QAA5H,CAA3B,GAAmKf,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,YAAd,EAA4B,YAA5B,EAA0C,iBAA1C,EAA6D,iBAA7D,EAAgF,WAAhF,EAA6F,OAA7F,CAArB,EAA4H,MAA5H,EAAoI,QAApI,CAAtL;;AAEAf,cAAKC,IAAL,CAAU,SAAV,EAAqBgB,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BlB,cAAKgB,MAAL,CAAY,OAAZ,CAA3B,GAAkDhB,cAAKgB,MAAL,CAAY,OAAZ,EAAqBhB,cAAKe,QAAL,CAAc,OAAd,EAAuB,OAAvB,CAArB,CAAvE",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\n\r\nimport serve from './gulp/tasks/serve';\r\nimport watch from './gulp/tasks/watch';\r\nimport clean from './gulp/tasks/clean';\r\nimport html from './gulp/tasks/html';\r\nimport fonts from './gulp/tasks/fonts';\r\nimport images from './gulp/tasks/images';\r\nimport {cleanSvgSprite, generateSvgSprite, copySvgSprite} from './gulp/tasks/sprite_svg';\r\nimport {jsInternal, jsExternal} from './gulp/tasks/js';\r\nimport {postcssInternal, postcssExternal} from './gulp/tasks/postcss';\r\n\r\n\r\ngulp.task(serve);\r\ngulp.task(watch);\r\ngulp.task(clean);\r\ngulp.task(html);\r\ngulp.task(fonts);\r\ngulp.task(images);\r\ngulp.task(cleanSvgSprite);\r\ngulp.task(generateSvgSprite);\r\ngulp.task(copySvgSprite);\r\ngulp.task(jsInternal);\r\ngulp.task(jsExternal);\r\ngulp.task(postcssInternal);\r\ngulp.task(postcssExternal);\r\n\r\n\r\ngulp.task('js', gulp.parallel('jsInternal', 'jsExternal'));\r\ngulp.task('postcss', gulp.parallel('postcssInternal', 'postcssExternal'));\r\ngulp.task('spriteSvg', gulp.series('cleanSvgSprite', gulp.parallel('generateSvgSprite'), 'copySvgSprite', 'html'));\r\n\r\n\r\ngulp.task('build', gutil.env.env === 'prod' ? gulp.series('clean', gulp.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'images') : gulp.series('clean', gulp.parallel('jsInternal', 'jsExternal', 'postcssInternal', 'postcssExternal', 'spriteSvg', 'fonts'), 'html', 'images'));\r\n\r\ngulp.task('default', gutil.env.env === 'prod' ? gulp.series('build') : gulp.series('build', gulp.parallel('serve', 'watch')));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\serve.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\serve.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\serve.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\serve.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
        "sourceFileName": "serve.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Запуск вебсервера BrowserSync\r\n */\nfunction serve(done) {\n  var serveCreate = _browserSync.default.create();\n\n  serveCreate.init(_config.default.browsersync);\n}\n\nserve.description = 'Запускает вебсервер из директории /build';\nvar _default = serve;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlLmpzIl0sIm5hbWVzIjpbInNlcnZlIiwiZG9uZSIsInNlcnZlQ3JlYXRlIiwiYnJvd3NlcnN5bmMiLCJjcmVhdGUiLCJpbml0IiwiY29uZmlnIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxLQUFULENBQWVDLElBQWYsRUFBcUI7QUFDakIsTUFBTUMsV0FBVyxHQUFHQyxxQkFBWUMsTUFBWixFQUFwQjs7QUFDQUYsRUFBQUEsV0FBVyxDQUFDRyxJQUFaLENBQWlCQyxnQkFBT0gsV0FBeEI7QUFDSDs7QUFDREgsS0FBSyxDQUFDTyxXQUFOLEdBQW9CLDBDQUFwQjtlQUVlUCxLIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcTWF4XFxEZXZQcm9qZWN0c1xcSXEwMDdcXElRMDA3LWZcXGlxXFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCdcclxuaW1wb3J0IGJyb3dzZXJzeW5jIGZyb20gJ2Jyb3dzZXItc3luYydcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnXHJcblxyXG4vKlxyXG4gKiDQl9Cw0L/Rg9GB0Log0LLQtdCx0YHQtdGA0LLQtdGA0LAgQnJvd3NlclN5bmNcclxuICovXHJcblxyXG5mdW5jdGlvbiBzZXJ2ZShkb25lKSB7XHJcbiAgICBjb25zdCBzZXJ2ZUNyZWF0ZSA9IGJyb3dzZXJzeW5jLmNyZWF0ZSgpO1xyXG4gICAgc2VydmVDcmVhdGUuaW5pdChjb25maWcuYnJvd3NlcnN5bmMpO1xyXG59XHJcbnNlcnZlLmRlc2NyaXB0aW9uID0gJ9CX0LDQv9GD0YHQutCw0LXRgiDQstC10LHRgdC10YDQstC10YAg0LjQtyDQtNC40YDQtdC60YLQvtGA0LjQuCAvYnVpbGQnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgc2VydmU7Il19",
    "map": {
      "version": 3,
      "sources": [
        "serve.js"
      ],
      "names": [
        "serve",
        "done",
        "serveCreate",
        "browsersync",
        "create",
        "init",
        "config",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjB,MAAMC,WAAW,GAAGC,qBAAYC,MAAZ,EAApB;;AACAF,EAAAA,WAAW,CAACG,IAAZ,CAAiBC,gBAAOH,WAAxB;AACH;;AACDH,KAAK,CAACO,WAAN,GAAoB,0CAApB;eAEeP,K",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp'\r\nimport browsersync from 'browser-sync'\r\nimport config from '../config'\r\n\r\n/*\r\n * Запуск вебсервера BrowserSync\r\n */\r\n\r\nfunction serve(done) {\r\n    const serveCreate = browsersync.create();\r\n    serveCreate.init(config.browsersync);\r\n}\r\nserve.description = 'Запускает вебсервер из директории /build';\r\n\r\nexport default serve;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\config.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar developmentDir = 'build/',\n    productionDir = '../public/assets/build/';\nvar path = {\n  dest: _gulpUtil.default.env.env === 'prod' ? productionDir : developmentDir,\n  build: {\n    html: developmentDir,\n    js: 'js/',\n    css: 'css/',\n    img: 'img/',\n    sprite: 'src/img/',\n    svgSprite: 'img/svg/',\n    fonts: 'fonts/'\n  },\n  src: {\n    html: 'src/*.html',\n    jsInternal: 'src/js/internal.js',\n    jsExternal: 'src/js/external.js',\n    styleInternal: _gulpUtil.default.env.env === 'prod' ? 'src/style/internal.pcss' : ['src/style/internal.pcss', 'src/style/ui_kit.pcss'],\n    styleExternal: 'src/style/external.pcss',\n    styleInclude: ['src/style/', './bower_components'],\n    img: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*'],\n    imgProduction: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/inhtml/**/*.*'],\n    sprite: 'src/img/sprite/**/*.*',\n    svg: 'src/img/svg/',\n    svgSpriteBuild: 'src/img/svg/',\n    svgSprite: 'src/img/svg/sprite/*.svg',\n    generatedSvgSprite: 'src/img/svg/sprite.svg',\n    fonts: 'src/fonts/**/*.*'\n  },\n  watch: {\n    html: 'src/**/*.html',\n    jsInternal: ['src/js/**/*.js', '!src/js/**/external.js', '!src/js/vendor/**/*.js'],\n    jsExternal: ['src/js/**/external.js', 'src/js/vendor/**/*.js'],\n    styleInternal: ['src/style/**/*.pcss', 'src/style/**/internal.pcss', '!src/style/**/external.pcss'],\n    styleExternal: 'src/style/external.pcss',\n    img: ['src/img/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/svg/sprite.svg'],\n    svgSprite: 'src/img/svg/sprite/*.svg',\n    fonts: 'src/fonts/**/*.*'\n  }\n};\nvar config = {\n  browsersync: {\n    server: {\n      baseDir: \"./\".concat(developmentDir)\n    },\n    tunnel: false,\n    open: false,\n    host: 'localhost',\n    port: 3000,\n    logPrefix: 'Blank'\n  },\n  html: {\n    src: path.src.html,\n    dest: path.build.html\n  },\n  js: {\n    srcInternal: path.src.jsInternal,\n    srcExternal: path.src.jsExternal,\n    dest: \"\".concat(path.dest).concat(path.build.js),\n    destJquery: \"\".concat(path.dest).concat(path.build.jquery)\n  },\n  css: {\n    srcInternal: path.src.styleInternal,\n    srcExternal: path.src.styleExternal,\n    options: {\n      includePaths: path.src.styleInclude,\n      sourceMap: true,\n      errLogToConsole: true\n    },\n    dest: \"\".concat(path.dest).concat(path.build.css)\n  },\n  images: {\n    src: path.src.img,\n    srcProduction: path.src.imgProduction,\n    dest: \"\".concat(path.dest).concat(path.build.img)\n  },\n  svg: {\n    svgInStyle: {\n      path: path.src.svg\n    },\n    sprite: path.src.svgSprite,\n    spriteGenerateDest: path.src.svgSpriteBuild,\n    spriteDest: path.dest + path.build.svgSprite,\n    generated: path.src.generatedSvgSprite\n  },\n  sprites: {\n    imagePath: path.src.sprite,\n    spritePath: path.build.sprite\n  },\n  fonts: {\n    src: path.src.fonts,\n    dest: path.dest + path.build.fonts\n  },\n  watch: {\n    html: path.watch.html,\n    jsInternal: path.watch.jsInternal,\n    jsExternal: path.watch.jsExternal,\n    cssInternal: path.watch.styleInternal,\n    cssExternal: path.watch.styleExternal,\n    images: path.watch.img,\n    svgSprite: path.watch.svgSprite,\n    fonts: path.watch.fonts\n  },\n  clean: {\n    dest: \"./\".concat(path.dest)\n  },\n  cssnano: {\n    zindex: false,\n    svgo: false,\n    // svgo отключен из-за ie11\n    autoprefixer: false,\n    reduceIdents: false\n  },\n  uglify: {\n    mangle: {\n      keep_fnames: true\n    },\n    compress: {\n      // unsafe: false,\n      // unsafe_Func: false,\n      unsafe_comps: false,\n      unsafe_math: false,\n      unsafe_proto: false,\n      unsafe_regexp: false,\n      typeofs: false,\n      reduce_vars: false,\n      reduce_funcs: false,\n      pure_getters: true,\n      properties: false,\n      collapse_vars: false\n    }\n  }\n};\nvar _default = config;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "developmentDir",
        "productionDir",
        "path",
        "dest",
        "gutil",
        "env",
        "build",
        "html",
        "js",
        "css",
        "img",
        "sprite",
        "svgSprite",
        "fonts",
        "src",
        "jsInternal",
        "jsExternal",
        "styleInternal",
        "styleExternal",
        "styleInclude",
        "imgProduction",
        "svg",
        "svgSpriteBuild",
        "generatedSvgSprite",
        "watch",
        "config",
        "browsersync",
        "server",
        "baseDir",
        "tunnel",
        "open",
        "host",
        "port",
        "logPrefix",
        "srcInternal",
        "srcExternal",
        "destJquery",
        "jquery",
        "options",
        "includePaths",
        "sourceMap",
        "errLogToConsole",
        "images",
        "srcProduction",
        "svgInStyle",
        "spriteGenerateDest",
        "spriteDest",
        "generated",
        "sprites",
        "imagePath",
        "spritePath",
        "cssInternal",
        "cssExternal",
        "clean",
        "cssnano",
        "zindex",
        "svgo",
        "autoprefixer",
        "reduceIdents",
        "uglify",
        "mangle",
        "keep_fnames",
        "compress",
        "unsafe_comps",
        "unsafe_math",
        "unsafe_proto",
        "unsafe_regexp",
        "typeofs",
        "reduce_vars",
        "reduce_funcs",
        "pure_getters",
        "properties",
        "collapse_vars"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,cAAc,GAAG,QAAvB;AAAA,IACIC,aAAa,GAAI,yBADrB;AAGA,IAAMC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAEC,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BJ,aAA3B,GAA2CD,cADxC;AAGTM,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEP,cADH;AAGHQ,IAAAA,EAAE,EAAE,KAHD;AAKHC,IAAAA,GAAG,EAAE,MALF;AAOHC,IAAAA,GAAG,EAAE,MAPF;AAQHC,IAAAA,MAAM,EAAE,UARL;AASHC,IAAAA,SAAS,EAAE,UATR;AAWHC,IAAAA,KAAK,EAAE;AAXJ,GAHE;AAgBTC,EAAAA,GAAG,EAAE;AACDP,IAAAA,IAAI,EAAE,YADL;AAGDQ,IAAAA,UAAU,EAAE,oBAHX;AAIDC,IAAAA,UAAU,EAAE,oBAJX;AAMDC,IAAAA,aAAa,EAAEb,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,yBAA3B,GAAuD,CAAC,yBAAD,EAA4B,uBAA5B,CANrE;AAODa,IAAAA,aAAa,EAAE,yBAPd;AAQDC,IAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,oBAAf,CARb;AAUDT,IAAAA,GAAG,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,4BAA7C,CAVJ;AAWDU,IAAAA,aAAa,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,4BAA7C,EAA2E,wBAA3E,CAXd;AAYDT,IAAAA,MAAM,EAAE,uBAZP;AAaDU,IAAAA,GAAG,EAAE,cAbJ;AAeDC,IAAAA,cAAc,EAAE,cAff;AAgBDV,IAAAA,SAAS,EAAE,0BAhBV;AAiBDW,IAAAA,kBAAkB,EAAE,wBAjBnB;AAmBDV,IAAAA,KAAK,EAAE;AAnBN,GAhBI;AAqCTW,EAAAA,KAAK,EAAE;AACHjB,IAAAA,IAAI,EAAE,eADH;AAGHQ,IAAAA,UAAU,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,wBAA7C,CAHT;AAIHC,IAAAA,UAAU,EAAE,CAAC,uBAAD,EAA0B,uBAA1B,CAJT;AAMHC,IAAAA,aAAa,EAAE,CAAC,qBAAD,EAAwB,4BAAxB,EAAsD,6BAAtD,CANZ;AAOHC,IAAAA,aAAa,EAAE,yBAPZ;AASHR,IAAAA,GAAG,EAAE,CAAC,gBAAD,EAAmB,4BAAnB,EAAiD,yBAAjD,CATF;AAWHE,IAAAA,SAAS,EAAE,0BAXR;AAaHC,IAAAA,KAAK,EAAE;AAbJ;AArCE,CAAb;AAsDA,IAAMY,MAAM,GAAG;AACXC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,cAAO5B,cAAP;AADH,KADC;AAIT6B,IAAAA,MAAM,EAAE,KAJC;AAKTC,IAAAA,IAAI,EAAE,KALG;AAMTC,IAAAA,IAAI,EAAE,WANG;AAOTC,IAAAA,IAAI,EAAE,IAPG;AAQTC,IAAAA,SAAS,EAAE;AARF,GADF;AAWX1B,EAAAA,IAAI,EAAE;AACFO,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASP,IADZ;AAEFJ,IAAAA,IAAI,EAAED,IAAI,CAACI,KAAL,CAAWC;AAFf,GAXK;AAeXC,EAAAA,EAAE,EAAE;AACA0B,IAAAA,WAAW,EAAEhC,IAAI,CAACY,GAAL,CAASC,UADtB;AAEAoB,IAAAA,WAAW,EAAEjC,IAAI,CAACY,GAAL,CAASE,UAFtB;AAGAb,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWE,EAA5B,CAHJ;AAIA4B,IAAAA,UAAU,YAAKlC,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAW+B,MAA5B;AAJV,GAfO;AAqBX5B,EAAAA,GAAG,EAAE;AACDyB,IAAAA,WAAW,EAAEhC,IAAI,CAACY,GAAL,CAASG,aADrB;AAEDkB,IAAAA,WAAW,EAAEjC,IAAI,CAACY,GAAL,CAASI,aAFrB;AAGDoB,IAAAA,OAAO,EAAE;AACLC,MAAAA,YAAY,EAAErC,IAAI,CAACY,GAAL,CAASK,YADlB;AAELqB,MAAAA,SAAS,EAAE,IAFN;AAGLC,MAAAA,eAAe,EAAE;AAHZ,KAHR;AAQDtC,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWG,GAA5B;AARH,GArBM;AA+BXiC,EAAAA,MAAM,EAAE;AACJ5B,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASJ,GADV;AAEJiC,IAAAA,aAAa,EAAEzC,IAAI,CAACY,GAAL,CAASM,aAFpB;AAGJjB,IAAAA,IAAI,YAAKD,IAAI,CAACC,IAAV,SAAiBD,IAAI,CAACI,KAAL,CAAWI,GAA5B;AAHA,GA/BG;AAoCXW,EAAAA,GAAG,EAAE;AACDuB,IAAAA,UAAU,EAAE;AACR1C,MAAAA,IAAI,EAAEA,IAAI,CAACY,GAAL,CAASO;AADP,KADX;AAIDV,IAAAA,MAAM,EAAET,IAAI,CAACY,GAAL,CAASF,SAJhB;AAKDiC,IAAAA,kBAAkB,EAAE3C,IAAI,CAACY,GAAL,CAASQ,cAL5B;AAMDwB,IAAAA,UAAU,EAAE5C,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACI,KAAL,CAAWM,SANlC;AAODmC,IAAAA,SAAS,EAAE7C,IAAI,CAACY,GAAL,CAASS;AAPnB,GApCM;AA6CXyB,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE/C,IAAI,CAACY,GAAL,CAASH,MADf;AAELuC,IAAAA,UAAU,EAAEhD,IAAI,CAACI,KAAL,CAAWK;AAFlB,GA7CE;AAiDXE,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAEZ,IAAI,CAACY,GAAL,CAASD,KADX;AAEHV,IAAAA,IAAI,EAAED,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACI,KAAL,CAAWO;AAF1B,GAjDI;AAqDXW,EAAAA,KAAK,EAAE;AACHjB,IAAAA,IAAI,EAAEL,IAAI,CAACsB,KAAL,CAAWjB,IADd;AAEHQ,IAAAA,UAAU,EAAEb,IAAI,CAACsB,KAAL,CAAWT,UAFpB;AAGHC,IAAAA,UAAU,EAAEd,IAAI,CAACsB,KAAL,CAAWR,UAHpB;AAIHmC,IAAAA,WAAW,EAAEjD,IAAI,CAACsB,KAAL,CAAWP,aAJrB;AAKHmC,IAAAA,WAAW,EAAElD,IAAI,CAACsB,KAAL,CAAWN,aALrB;AAMHwB,IAAAA,MAAM,EAAExC,IAAI,CAACsB,KAAL,CAAWd,GANhB;AAOHE,IAAAA,SAAS,EAAEV,IAAI,CAACsB,KAAL,CAAWZ,SAPnB;AAQHC,IAAAA,KAAK,EAAEX,IAAI,CAACsB,KAAL,CAAWX;AARf,GArDI;AA+DXwC,EAAAA,KAAK,EAAE;AACHlD,IAAAA,IAAI,cAAOD,IAAI,CAACC,IAAZ;AADD,GA/DI;AAkEXmD,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,IAAI,EAAE,KAFD;AAEQ;AACbC,IAAAA,YAAY,EAAE,KAHT;AAILC,IAAAA,YAAY,EAAE;AAJT,GAlEE;AAwEXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE;AACJC,MAAAA,WAAW,EAAE;AADT,KADJ;AAIJC,IAAAA,QAAQ,EAAE;AACN;AACA;AACAC,MAAAA,YAAY,EAAE,KAHR;AAINC,MAAAA,WAAW,EAAE,KAJP;AAKNC,MAAAA,YAAY,EAAE,KALR;AAMNC,MAAAA,aAAa,EAAE,KANT;AAONC,MAAAA,OAAO,EAAE,KAPH;AAQNC,MAAAA,WAAW,EAAE,KARP;AASNC,MAAAA,YAAY,EAAE,KATR;AAUNC,MAAAA,YAAY,EAAE,IAVR;AAWNC,MAAAA,UAAU,EAAE,KAXN;AAYNC,MAAAA,aAAa,EAAE;AAZT;AAJN;AAxEG,CAAf;eA6Fe/C,M",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\n\r\nconst developmentDir = 'build/',\r\n    productionDir  = '../public/assets/build/';\r\n\r\nconst path = {\r\n    dest: gutil.env.env === 'prod' ? productionDir : developmentDir,\r\n\r\n    build: {\r\n        html: developmentDir,\r\n\r\n        js: 'js/',\r\n\r\n        css: 'css/',\r\n\r\n        img: 'img/',\r\n        sprite: 'src/img/',\r\n        svgSprite: 'img/svg/',\r\n\r\n        fonts: 'fonts/'\r\n    },\r\n    src: {\r\n        html: 'src/*.html',\r\n\r\n        jsInternal: 'src/js/internal.js',\r\n        jsExternal: 'src/js/external.js',\r\n\r\n        styleInternal: gutil.env.env === 'prod' ? 'src/style/internal.pcss' : ['src/style/internal.pcss', 'src/style/ui_kit.pcss'],\r\n        styleExternal: 'src/style/external.pcss',\r\n        styleInclude: ['src/style/', './bower_components'],\r\n\r\n        img: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*'],\r\n        imgProduction: ['src/img/**/*.*', '!src/img/sprite/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/inhtml/**/*.*'],\r\n        sprite: 'src/img/sprite/**/*.*',\r\n        svg: 'src/img/svg/',\r\n\r\n        svgSpriteBuild: 'src/img/svg/',\r\n        svgSprite: 'src/img/svg/sprite/*.svg',\r\n        generatedSvgSprite: 'src/img/svg/sprite.svg',\r\n\r\n        fonts: 'src/fonts/**/*.*'\r\n    },\r\n    watch: {\r\n        html: 'src/**/*.html',\r\n\r\n        jsInternal: ['src/js/**/*.js', '!src/js/**/external.js', '!src/js/vendor/**/*.js'],\r\n        jsExternal: ['src/js/**/external.js', 'src/js/vendor/**/*.js'],\r\n\r\n        styleInternal: ['src/style/**/*.pcss', 'src/style/**/internal.pcss', '!src/style/**/external.pcss'],\r\n        styleExternal: 'src/style/external.pcss',\r\n\r\n        img: ['src/img/**/*.*', '!src/img/svg/sprite/**/*.*', '!src/img/svg/sprite.svg'],\r\n\r\n        svgSprite: 'src/img/svg/sprite/*.svg',\r\n\r\n        fonts: 'src/fonts/**/*.*'\r\n    }\r\n};\r\n\r\nconst config = {\r\n    browsersync: {\r\n        server: {\r\n            baseDir: `./${developmentDir}`\r\n        },\r\n        tunnel: false,\r\n        open: false,\r\n        host: 'localhost',\r\n        port: 3000,\r\n        logPrefix: 'Blank'\r\n    },\r\n    html: {\r\n        src: path.src.html,\r\n        dest: path.build.html\r\n    },\r\n    js: {\r\n        srcInternal: path.src.jsInternal,\r\n        srcExternal: path.src.jsExternal,\r\n        dest: `${path.dest}${path.build.js}`,\r\n        destJquery: `${path.dest}${path.build.jquery}`\r\n    },\r\n    css: {\r\n        srcInternal: path.src.styleInternal,\r\n        srcExternal: path.src.styleExternal,\r\n        options: {\r\n            includePaths: path.src.styleInclude,\r\n            sourceMap: true,\r\n            errLogToConsole: true\r\n        },\r\n        dest: `${path.dest}${path.build.css}`\r\n    },\r\n    images: {\r\n        src: path.src.img,\r\n        srcProduction: path.src.imgProduction,\r\n        dest: `${path.dest}${path.build.img}`\r\n    },\r\n    svg: {\r\n        svgInStyle: {\r\n            path: path.src.svg\r\n        },\r\n        sprite: path.src.svgSprite,\r\n        spriteGenerateDest: path.src.svgSpriteBuild,\r\n        spriteDest: path.dest + path.build.svgSprite,\r\n        generated: path.src.generatedSvgSprite\r\n    },\r\n    sprites: {\r\n        imagePath: path.src.sprite,\r\n        spritePath: path.build.sprite\r\n    },\r\n    fonts: {\r\n        src: path.src.fonts,\r\n        dest: path.dest + path.build.fonts\r\n    },\r\n    watch: {\r\n        html: path.watch.html,\r\n        jsInternal: path.watch.jsInternal,\r\n        jsExternal: path.watch.jsExternal,\r\n        cssInternal: path.watch.styleInternal,\r\n        cssExternal: path.watch.styleExternal,\r\n        images: path.watch.img,\r\n        svgSprite: path.watch.svgSprite,\r\n        fonts: path.watch.fonts\r\n    },\r\n    clean: {\r\n        dest: `./${path.dest}`\r\n    },\r\n    cssnano: {\r\n        zindex: false,\r\n        svgo: false, // svgo отключен из-за ie11\r\n        autoprefixer: false,\r\n        reduceIdents: false\r\n    },\r\n    uglify: {\r\n        mangle: {\r\n            keep_fnames: true\r\n        },\r\n        compress: {\r\n            // unsafe: false,\r\n            // unsafe_Func: false,\r\n            unsafe_comps: false,\r\n            unsafe_math: false,\r\n            unsafe_proto: false,\r\n            unsafe_regexp: false,\r\n            typeofs: false,\r\n            reduce_vars: false,\r\n            reduce_funcs: false,\r\n            pure_getters: true,\r\n            properties: false,\r\n            collapse_vars: false\r\n        }\r\n    }\r\n};\r\n\r\nexport default config;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\watch.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\watch.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\watch.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\watch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
        "sourceFileName": "watch.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Смотрит за изменениями\r\n */\nfunction watch() {\n  _gulp.default.watch(_config.default.watch.html, _gulp.default.series('html'));\n\n  _gulp.default.watch(_config.default.watch.cssInternal, _gulp.default.series('postcssInternal'));\n\n  _gulp.default.watch(_config.default.watch.cssExternal, _gulp.default.series('postcssExternal'));\n\n  _gulp.default.watch(_config.default.watch.jsInternal, _gulp.default.series('jsInternal'));\n\n  _gulp.default.watch(_config.default.watch.jsExternal, _gulp.default.series('jsExternal'));\n\n  _gulp.default.watch(_config.default.watch.images, _gulp.default.series('images'));\n\n  _gulp.default.watch(_config.default.watch.svgSprite, _gulp.default.series('spriteSvg'));\n\n  _gulp.default.watch(_config.default.watch.fonts, _gulp.default.series('fonts'));\n}\n\n;\nwatch.description = 'Смотрит за изменениями файлов';\nvar _default = watch;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdGNoLmpzIl0sIm5hbWVzIjpbIndhdGNoIiwiZ3VscCIsImNvbmZpZyIsImh0bWwiLCJzZXJpZXMiLCJjc3NJbnRlcm5hbCIsImNzc0V4dGVybmFsIiwianNJbnRlcm5hbCIsImpzRXh0ZXJuYWwiLCJpbWFnZXMiLCJzdmdTcHJpdGUiLCJmb250cyIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTs7O0FBSUEsU0FBU0EsS0FBVCxHQUFpQjtBQUNiQyxnQkFBS0QsS0FBTCxDQUFXRSxnQkFBT0YsS0FBUCxDQUFhRyxJQUF4QixFQUE4QkYsY0FBS0csTUFBTCxDQUFZLE1BQVosQ0FBOUI7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFLLFdBQXhCLEVBQXFDSixjQUFLRyxNQUFMLENBQVksaUJBQVosQ0FBckM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFNLFdBQXhCLEVBQXFDTCxjQUFLRyxNQUFMLENBQVksaUJBQVosQ0FBckM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFPLFVBQXhCLEVBQW9DTixjQUFLRyxNQUFMLENBQVksWUFBWixDQUFwQzs7QUFDQUgsZ0JBQUtELEtBQUwsQ0FBV0UsZ0JBQU9GLEtBQVAsQ0FBYVEsVUFBeEIsRUFBb0NQLGNBQUtHLE1BQUwsQ0FBWSxZQUFaLENBQXBDOztBQUNBSCxnQkFBS0QsS0FBTCxDQUFXRSxnQkFBT0YsS0FBUCxDQUFhUyxNQUF4QixFQUFnQ1IsY0FBS0csTUFBTCxDQUFZLFFBQVosQ0FBaEM7O0FBQ0FILGdCQUFLRCxLQUFMLENBQVdFLGdCQUFPRixLQUFQLENBQWFVLFNBQXhCLEVBQW1DVCxjQUFLRyxNQUFMLENBQVksV0FBWixDQUFuQzs7QUFDQUgsZ0JBQUtELEtBQUwsQ0FBV0UsZ0JBQU9GLEtBQVAsQ0FBYVcsS0FBeEIsRUFBK0JWLGNBQUtHLE1BQUwsQ0FBWSxPQUFaLENBQS9CO0FBQ0g7O0FBQUE7QUFDREosS0FBSyxDQUFDWSxXQUFOLEdBQW9CLCtCQUFwQjtlQUVlWixLIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcTWF4XFxEZXZQcm9qZWN0c1xcSXEwMDdcXElRMDA3LWZcXGlxXFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0KHQvNC+0YLRgNC40YIg0LfQsCDQuNC30LzQtdC90LXQvdC40Y/QvNC4XHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gd2F0Y2goKSB7XHJcbiAgICBndWxwLndhdGNoKGNvbmZpZy53YXRjaC5odG1sLCBndWxwLnNlcmllcygnaHRtbCcpKTtcclxuICAgIGd1bHAud2F0Y2goY29uZmlnLndhdGNoLmNzc0ludGVybmFsLCBndWxwLnNlcmllcygncG9zdGNzc0ludGVybmFsJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guY3NzRXh0ZXJuYWwsIGd1bHAuc2VyaWVzKCdwb3N0Y3NzRXh0ZXJuYWwnKSk7XHJcbiAgICBndWxwLndhdGNoKGNvbmZpZy53YXRjaC5qc0ludGVybmFsLCBndWxwLnNlcmllcygnanNJbnRlcm5hbCcpKTtcclxuICAgIGd1bHAud2F0Y2goY29uZmlnLndhdGNoLmpzRXh0ZXJuYWwsIGd1bHAuc2VyaWVzKCdqc0V4dGVybmFsJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guaW1hZ2VzLCBndWxwLnNlcmllcygnaW1hZ2VzJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guc3ZnU3ByaXRlLCBndWxwLnNlcmllcygnc3ByaXRlU3ZnJykpO1xyXG4gICAgZ3VscC53YXRjaChjb25maWcud2F0Y2guZm9udHMsIGd1bHAuc2VyaWVzKCdmb250cycpKTtcclxufTtcclxud2F0Y2guZGVzY3JpcHRpb24gPSAn0KHQvNC+0YLRgNC40YIg0LfQsCDQuNC30LzQtdC90LXQvdC40Y/QvNC4INGE0LDQudC70L7Qsic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB3YXRjaDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "watch.js"
      ],
      "names": [
        "watch",
        "gulp",
        "config",
        "html",
        "series",
        "cssInternal",
        "cssExternal",
        "jsInternal",
        "jsExternal",
        "images",
        "svgSprite",
        "fonts",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;AAIA,SAASA,KAAT,GAAiB;AACbC,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaG,IAAxB,EAA8BF,cAAKG,MAAL,CAAY,MAAZ,CAA9B;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaK,WAAxB,EAAqCJ,cAAKG,MAAL,CAAY,iBAAZ,CAArC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaM,WAAxB,EAAqCL,cAAKG,MAAL,CAAY,iBAAZ,CAArC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaO,UAAxB,EAAoCN,cAAKG,MAAL,CAAY,YAAZ,CAApC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaQ,UAAxB,EAAoCP,cAAKG,MAAL,CAAY,YAAZ,CAApC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaS,MAAxB,EAAgCR,cAAKG,MAAL,CAAY,QAAZ,CAAhC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaU,SAAxB,EAAmCT,cAAKG,MAAL,CAAY,WAAZ,CAAnC;;AACAH,gBAAKD,KAAL,CAAWE,gBAAOF,KAAP,CAAaW,KAAxB,EAA+BV,cAAKG,MAAL,CAAY,OAAZ,CAA/B;AACH;;AAAA;AACDJ,KAAK,CAACY,WAAN,GAAoB,+BAApB;eAEeZ,K",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport config from '../config'\r\n\r\n/*\r\n * Смотрит за изменениями\r\n */\r\n\r\nfunction watch() {\r\n    gulp.watch(config.watch.html, gulp.series('html'));\r\n    gulp.watch(config.watch.cssInternal, gulp.series('postcssInternal'));\r\n    gulp.watch(config.watch.cssExternal, gulp.series('postcssExternal'));\r\n    gulp.watch(config.watch.jsInternal, gulp.series('jsInternal'));\r\n    gulp.watch(config.watch.jsExternal, gulp.series('jsExternal'));\r\n    gulp.watch(config.watch.images, gulp.series('images'));\r\n    gulp.watch(config.watch.svgSprite, gulp.series('spriteSvg'));\r\n    gulp.watch(config.watch.fonts, gulp.series('fonts'));\r\n};\r\nwatch.description = 'Смотрит за изменениями файлов';\r\n\r\nexport default watch;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\clean.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\clean.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\clean.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\clean.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
        "sourceFileName": "clean.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Удаление папки build\r\n */\nfunction clean(done) {\n  (0, _rimraf.default)(_config.default.clean.dest, done);\n}\n\nclean.description = 'Удаляет build директорию';\nvar _default = clean;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFuLmpzIl0sIm5hbWVzIjpbImNsZWFuIiwiZG9uZSIsImNvbmZpZyIsImRlc3QiLCJkZXNjcmlwdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBR0E7OztBQUlBLFNBQVNBLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtBQUNqQix1QkFBT0MsZ0JBQU9GLEtBQVAsQ0FBYUcsSUFBcEIsRUFBMEJGLElBQTFCO0FBQ0g7O0FBQ0RELEtBQUssQ0FBQ0ksV0FBTixHQUFvQiwwQkFBcEI7ZUFFZUosSyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE1heFxcRGV2UHJvamVjdHNcXElxMDA3XFxJUTAwNy1mXFxpcVxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnXHJcbmltcG9ydCByaW1yYWYgZnJvbSAncmltcmFmJ1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZydcclxuXHJcblxyXG4vKlxyXG4gKiDQo9C00LDQu9C10L3QuNC1INC/0LDQv9C60LggYnVpbGRcclxuICovXHJcblxyXG5mdW5jdGlvbiBjbGVhbihkb25lKSB7XHJcbiAgICByaW1yYWYoY29uZmlnLmNsZWFuLmRlc3QsIGRvbmUpO1xyXG59XHJcbmNsZWFuLmRlc2NyaXB0aW9uID0gJ9Cj0LTQsNC70Y/QtdGCIGJ1aWxkINC00LjRgNC10LrRgtC+0YDQuNGOJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsZWFuOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "clean.js"
      ],
      "names": [
        "clean",
        "done",
        "config",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAGA;;;AAIA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjB,uBAAOC,gBAAOF,KAAP,CAAaG,IAApB,EAA0BF,IAA1B;AACH;;AACDD,KAAK,CAACI,WAAN,GAAoB,0BAApB;eAEeJ,K",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp'\r\nimport rimraf from 'rimraf'\r\nimport config from '../config'\r\n\r\n\r\n/*\r\n * Удаление папки build\r\n */\r\n\r\nfunction clean(done) {\r\n    rimraf(config.clean.dest, done);\r\n}\r\nclean.description = 'Удаляет build директорию';\r\n\r\nexport default clean;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\html.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\html.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\html.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\html.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
        "sourceFileName": "html.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpFileInclude = _interopRequireDefault(require(\"gulp-file-include\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сборка html\r\n */\nfunction html(done) {\n  _browserSync.default.notify('Compiling html');\n\n  return _gulp.default.src(_config.default.html.src).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'HTML',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe(_gulp.default.dest(_config.default.html.dest));\n}\n\nhtml.description = 'Сборка html';\nvar _default = html;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0bWwuanMiXSwibmFtZXMiOlsiaHRtbCIsImRvbmUiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwicHJlZml4IiwiYmFzZXBhdGgiLCJpbmRlbnQiLCJkZXN0IiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxJQUFULENBQWNDLElBQWQsRUFBb0I7QUFDaEJDLHVCQUFZQyxNQUFaLENBQW1CLGdCQUFuQjs7QUFFQSxTQUFPQyxjQUFLQyxHQUFMLENBQVNDLGdCQUFPTixJQUFQLENBQVlLLEdBQXJCLEVBQ0ZFLElBREUsQ0FDRywwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVMLG9CQUFPTSxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxNQUQwQjtBQUVqQ0MsUUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsT0FBTDtBQUFBLEtBQWxCO0FBREosR0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyw4QkFBWTtBQUNkTyxJQUFBQSxNQUFNLEVBQUUsSUFETTtBQUVkQyxJQUFBQSxRQUFRLEVBQUUsT0FGSTtBQUdkQyxJQUFBQSxNQUFNLEVBQUU7QUFITSxHQUFaLENBUEgsRUFZRlQsSUFaRSxDQVlHSCxjQUFLYSxJQUFMLENBQVVYLGdCQUFPTixJQUFQLENBQVlpQixJQUF0QixDQVpILENBQVA7QUFhSDs7QUFDRGpCLElBQUksQ0FBQ2tCLFdBQUwsR0FBbUIsYUFBbkI7ZUFFZWxCLEkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxNYXhcXERldlByb2plY3RzXFxJcTAwN1xcSVEwMDctZlxcaXFcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgZmlsZWluY2x1ZGUgZnJvbSAnZ3VscC1maWxlLWluY2x1ZGUnO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZydcclxuXHJcbi8qXHJcbiAqINCh0LHQvtGA0LrQsCBodG1sXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gaHRtbChkb25lKSB7XHJcbiAgICBicm93c2Vyc3luYy5ub3RpZnkoJ0NvbXBpbGluZyBodG1sJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5odG1sLnNyYylcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSFRNTCcsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShmaWxlaW5jbHVkZSh7XHJcbiAgICAgICAgICAgIHByZWZpeDogJ0BAJyxcclxuICAgICAgICAgICAgYmFzZXBhdGg6ICdAZmlsZScsXHJcbiAgICAgICAgICAgIGluZGVudDogdHJ1ZVxyXG4gICAgICAgIH0pKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChjb25maWcuaHRtbC5kZXN0KSk7XHJcbn1cclxuaHRtbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaHRtbCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBodG1sOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "html.js"
      ],
      "names": [
        "html",
        "done",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "prefix",
        "basepath",
        "indent",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAChBC,uBAAYC,MAAZ,CAAmB,gBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAON,IAAP,CAAYK,GAArB,EACFE,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEL,oBAAOM,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,MAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOG,8BAAY;AACdO,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CAPH,EAYFT,IAZE,CAYGH,cAAKa,IAAL,CAAUX,gBAAON,IAAP,CAAYiB,IAAtB,CAZH,CAAP;AAaH;;AACDjB,IAAI,CAACkB,WAAL,GAAmB,aAAnB;eAEelB,I",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport fileinclude from 'gulp-file-include';\r\nimport config from '../config'\r\n\r\n/*\r\n * Сборка html\r\n */\r\n\r\nfunction html(done) {\r\n    browsersync.notify('Compiling html');\r\n\r\n    return gulp.src(config.html.src)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'HTML',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(gulp.dest(config.html.dest));\r\n}\r\nhtml.description = 'Сборка html';\r\n\r\nexport default html;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\fonts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\fonts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\fonts.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\fonts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
        "sourceFileName": "fonts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Копирование шрифтов\r\n */\nfunction fonts(done) {\n  _gulp.default.src(_config.default.fonts.src).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Fonts',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulp.default.dest(_config.default.fonts.dest));\n\n  done();\n}\n\nfonts.description = 'Копирует шрифты в /build директорию';\nvar _default = fonts;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvbnRzLmpzIl0sIm5hbWVzIjpbImZvbnRzIiwiZG9uZSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwibm90aWZ5Iiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwiZGVzdCIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTs7O0FBS0EsU0FBU0EsS0FBVCxDQUFlQyxJQUFmLEVBQXFCO0FBQ2pCQyxnQkFBS0MsR0FBTCxDQUFTQyxnQkFBT0osS0FBUCxDQUFhRyxHQUF0QixFQUNLRSxJQURMLENBQ1UsMEJBQVE7QUFDVkMsSUFBQUEsWUFBWSxFQUFFQyxvQkFBT0MsT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxhQUFLO0FBQ2pDQyxRQUFBQSxLQUFLLEVBQUUsT0FEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FEVixFQU9LUCxJQVBMLENBT1VILGNBQUtXLElBQUwsQ0FBVVQsZ0JBQU9KLEtBQVAsQ0FBYWEsSUFBdkIsQ0FQVjs7QUFTQVosRUFBQUEsSUFBSTtBQUNQOztBQUNERCxLQUFLLENBQUNjLFdBQU4sR0FBb0IscUNBQXBCO2VBRWVkLEsiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxNYXhcXERldlByb2plY3RzXFxJcTAwN1xcSVEwMDctZlxcaXFcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0JrQvtC/0LjRgNC+0LLQsNC90LjQtSDRiNGA0LjRhNGC0L7QslxyXG4gKi9cclxuXHJcblxyXG5mdW5jdGlvbiBmb250cyhkb25lKSB7XHJcbiAgICBndWxwLnNyYyhjb25maWcuZm9udHMuc3JjKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdGb250cycsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmZvbnRzLmRlc3QpKTtcclxuXHJcbiAgICBkb25lKCk7XHJcbn1cclxuZm9udHMuZGVzY3JpcHRpb24gPSAn0JrQvtC/0LjRgNGD0LXRgiDRiNGA0LjRhNGC0Ysg0LIgL2J1aWxkINC00LjRgNC10LrRgtC+0YDQuNGOJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZvbnRzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "fonts.js"
      ],
      "names": [
        "fonts",
        "done",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "notify",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "dest",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;;;AAKA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACjBC,gBAAKC,GAAL,CAASC,gBAAOJ,KAAP,CAAaG,GAAtB,EACKE,IADL,CACU,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,OAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADV,EAOKP,IAPL,CAOUH,cAAKW,IAAL,CAAUT,gBAAOJ,KAAP,CAAaa,IAAvB,CAPV;;AASAZ,EAAAA,IAAI;AACP;;AACDD,KAAK,CAACc,WAAN,GAAoB,qCAApB;eAEed,K",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport config from '../config'\r\n\r\n/*\r\n * Копирование шрифтов\r\n */\r\n\r\n\r\nfunction fonts(done) {\r\n    gulp.src(config.fonts.src)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Fonts',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gulp.dest(config.fonts.dest));\r\n\r\n    done();\r\n}\r\nfonts.description = 'Копирует шрифты в /build директорию';\r\n\r\nexport default fonts;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235181
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\images.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\images.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\images.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\images.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
        "sourceFileName": "images.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpNewer = _interopRequireDefault(require(\"gulp-newer\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сжатие картинок\r\n */\nfunction images(done) {\n  _browserSync.default.notify('Compiling images'); // отключаю оптимизацию картинок для дева\n\n\n  if (_gulpUtil.default.env.env !== 'prod') {\n    return _gulp.default.src(_config.default.images.src).pipe((0, _gulpPlumber.default)({\n      errorHandler: _gulpNotify.default.onError(function (err) {\n        return {\n          title: 'Image dev copy',\n          message: err.toString()\n        };\n      })\n    })).pipe((0, _gulpNewer.default)(_config.default.images.dest)).pipe(_gulp.default.dest(_config.default.images.dest));\n  } else {\n    return _gulp.default.src(_config.default.images.srcProduction).pipe((0, _gulpPlumber.default)({\n      errorHandler: _gulpNotify.default.onError(function (err) {\n        return {\n          title: 'Image optimizer',\n          message: err.toString()\n        };\n      })\n    })).pipe((0, _gulpNewer.default)(_config.default.images.dest)).pipe((0, _gulpImagemin.default)([_gulpImagemin.default.gifsicle({\n      optimizationLevel: 3\n    }), _gulpImagemin.default.jpegtran({\n      quality: 65,\n      progressive: true\n    }), _gulpImagemin.default.optipng({\n      optimizationLevel: 5\n    }), _gulpImagemin.default.svgo({\n      plugins: [{\n        removeViewBox: false\n      }, {\n        convertStyleToAttrs: true\n      }]\n    })])).pipe(_gulp.default.dest(_config.default.images.dest));\n  }\n}\n\nimages.description = 'Оптимизация картинок';\nvar _default = images;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlcy5qcyJdLCJuYW1lcyI6WyJpbWFnZXMiLCJkb25lIiwiYnJvd3NlcnN5bmMiLCJub3RpZnkiLCJndXRpbCIsImVudiIsImd1bHAiLCJzcmMiLCJjb25maWciLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwiZGVzdCIsInNyY1Byb2R1Y3Rpb24iLCJpbWFnZW1pbiIsImdpZnNpY2xlIiwib3B0aW1pemF0aW9uTGV2ZWwiLCJqcGVndHJhbiIsInF1YWxpdHkiLCJwcm9ncmVzc2l2ZSIsIm9wdGlwbmciLCJzdmdvIiwicGx1Z2lucyIsInJlbW92ZVZpZXdCb3giLCJjb252ZXJ0U3R5bGVUb0F0dHJzIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7QUFJQSxTQUFTQSxNQUFULENBQWdCQyxJQUFoQixFQUFzQjtBQUNsQkMsdUJBQVlDLE1BQVosQ0FBbUIsa0JBQW5CLEVBRGtCLENBRWxCOzs7QUFDQSxNQUFJQyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQXRCLEVBQThCO0FBQzFCLFdBQU9DLGNBQUtDLEdBQUwsQ0FBU0MsZ0JBQU9SLE1BQVAsQ0FBY08sR0FBdkIsRUFDRkUsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLE1BQUFBLFlBQVksRUFBRVAsb0JBQU9RLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsZUFBSztBQUNqQ0MsVUFBQUEsS0FBSyxFQUFFLGdCQUQwQjtBQUVqQ0MsVUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsU0FBTDtBQUFBLE9BQWxCO0FBREosS0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyx3QkFBTUQsZ0JBQU9SLE1BQVAsQ0FBY2dCLElBQXBCLENBUEgsRUFRRlAsSUFSRSxDQVFHSCxjQUFLVSxJQUFMLENBQVVSLGdCQUFPUixNQUFQLENBQWNnQixJQUF4QixDQVJILENBQVA7QUFTSCxHQVZELE1BVU87QUFDSCxXQUFPVixjQUFLQyxHQUFMLENBQVNDLGdCQUFPUixNQUFQLENBQWNpQixhQUF2QixFQUNGUixJQURFLENBQ0csMEJBQVE7QUFDVkMsTUFBQUEsWUFBWSxFQUFFUCxvQkFBT1EsT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxlQUFLO0FBQ2pDQyxVQUFBQSxLQUFLLEVBQUUsaUJBRDBCO0FBRWpDQyxVQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixTQUFMO0FBQUEsT0FBbEI7QUFESixLQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HLHdCQUFNRCxnQkFBT1IsTUFBUCxDQUFjZ0IsSUFBcEIsQ0FQSCxFQVFGUCxJQVJFLENBUUcsMkJBQVMsQ0FDWFMsc0JBQVNDLFFBQVQsQ0FBa0I7QUFDZEMsTUFBQUEsaUJBQWlCLEVBQUU7QUFETCxLQUFsQixDQURXLEVBSVhGLHNCQUFTRyxRQUFULENBQWtCO0FBQ2RDLE1BQUFBLE9BQU8sRUFBRSxFQURLO0FBRWRDLE1BQUFBLFdBQVcsRUFBRTtBQUZDLEtBQWxCLENBSlcsRUFRWEwsc0JBQVNNLE9BQVQsQ0FBaUI7QUFDYkosTUFBQUEsaUJBQWlCLEVBQUU7QUFETixLQUFqQixDQVJXLEVBV1hGLHNCQUFTTyxJQUFULENBQWM7QUFDVkMsTUFBQUEsT0FBTyxFQUFFLENBQ0w7QUFBQ0MsUUFBQUEsYUFBYSxFQUFFO0FBQWhCLE9BREssRUFFTDtBQUFDQyxRQUFBQSxtQkFBbUIsRUFBRTtBQUF0QixPQUZLO0FBREMsS0FBZCxDQVhXLENBQVQsQ0FSSCxFQTBCRm5CLElBMUJFLENBMEJHSCxjQUFLVSxJQUFMLENBQVVSLGdCQUFPUixNQUFQLENBQWNnQixJQUF4QixDQTFCSCxDQUFQO0FBMkJIO0FBQ0o7O0FBQ0RoQixNQUFNLENBQUM2QixXQUFQLEdBQXFCLHNCQUFyQjtlQUVlN0IsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE1heFxcRGV2UHJvamVjdHNcXElxMDA3XFxJUTAwNy1mXFxpcVxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xyXG5pbXBvcnQgZ3V0aWwgZnJvbSAnZ3VscC11dGlsJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgbmV3ZXIgZnJvbSAnZ3VscC1uZXdlcic7XHJcbmltcG9ydCBpbWFnZW1pbiBmcm9tICdndWxwLWltYWdlbWluJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnO1xyXG5cclxuLypcclxuICog0KHQttCw0YLQuNC1INC60LDRgNGC0LjQvdC+0LpcclxuICovXHJcblxyXG5mdW5jdGlvbiBpbWFnZXMoZG9uZSkge1xyXG4gICAgYnJvd3NlcnN5bmMubm90aWZ5KCdDb21waWxpbmcgaW1hZ2VzJyk7XHJcbiAgICAvLyDQvtGC0LrQu9GO0YfQsNGOINC+0L/RgtC40LzQuNC30LDRhtC40Y4g0LrQsNGA0YLQuNC90L7QuiDQtNC70Y8g0LTQtdCy0LBcclxuICAgIGlmIChndXRpbC5lbnYuZW52ICE9PSAncHJvZCcpIHtcclxuICAgICAgICByZXR1cm4gZ3VscC5zcmMoY29uZmlnLmltYWdlcy5zcmMpXHJcbiAgICAgICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0ltYWdlIGRldiBjb3B5JyxcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICAucGlwZShuZXdlcihjb25maWcuaW1hZ2VzLmRlc3QpKVxyXG4gICAgICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmltYWdlcy5kZXN0KSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBndWxwLnNyYyhjb25maWcuaW1hZ2VzLnNyY1Byb2R1Y3Rpb24pXHJcbiAgICAgICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0ltYWdlIG9wdGltaXplcicsXHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICAgICAgLnBpcGUobmV3ZXIoY29uZmlnLmltYWdlcy5kZXN0KSlcclxuICAgICAgICAgICAgLnBpcGUoaW1hZ2VtaW4oW1xyXG4gICAgICAgICAgICAgICAgaW1hZ2VtaW4uZ2lmc2ljbGUoe1xyXG4gICAgICAgICAgICAgICAgICAgIG9wdGltaXphdGlvbkxldmVsOiAzXHJcbiAgICAgICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgICAgIGltYWdlbWluLmpwZWd0cmFuKHtcclxuICAgICAgICAgICAgICAgICAgICBxdWFsaXR5OiA2NSxcclxuICAgICAgICAgICAgICAgICAgICBwcm9ncmVzc2l2ZTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICAgICBpbWFnZW1pbi5vcHRpcG5nKHtcclxuICAgICAgICAgICAgICAgICAgICBvcHRpbWl6YXRpb25MZXZlbDogNVxyXG4gICAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgICAgICBpbWFnZW1pbi5zdmdvKHtcclxuICAgICAgICAgICAgICAgICAgICBwbHVnaW5zOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtyZW1vdmVWaWV3Qm94OiBmYWxzZX0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtjb252ZXJ0U3R5bGVUb0F0dHJzOiB0cnVlfVxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIF0pKVxyXG4gICAgICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmltYWdlcy5kZXN0KSk7XHJcbiAgICB9XHJcbn1cclxuaW1hZ2VzLmRlc2NyaXB0aW9uID0gJ9Ce0L/RgtC40LzQuNC30LDRhtC40Y8g0LrQsNGA0YLQuNC90L7Quic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBpbWFnZXM7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "images.js"
      ],
      "names": [
        "images",
        "done",
        "browsersync",
        "notify",
        "gutil",
        "env",
        "gulp",
        "src",
        "config",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "dest",
        "srcProduction",
        "imagemin",
        "gifsicle",
        "optimizationLevel",
        "jpegtran",
        "quality",
        "progressive",
        "optipng",
        "svgo",
        "plugins",
        "removeViewBox",
        "convertStyleToAttrs",
        "description"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;AAIA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AAClBC,uBAAYC,MAAZ,CAAmB,kBAAnB,EADkB,CAElB;;;AACA,MAAIC,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAtB,EAA8B;AAC1B,WAAOC,cAAKC,GAAL,CAASC,gBAAOR,MAAP,CAAcO,GAAvB,EACFE,IADE,CACG,0BAAQ;AACVC,MAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,eAAK;AACjCC,UAAAA,KAAK,EAAE,gBAD0B;AAEjCC,UAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,SAAL;AAAA,OAAlB;AADJ,KAAR,CADH,EAOFN,IAPE,CAOG,wBAAMD,gBAAOR,MAAP,CAAcgB,IAApB,CAPH,EAQFP,IARE,CAQGH,cAAKU,IAAL,CAAUR,gBAAOR,MAAP,CAAcgB,IAAxB,CARH,CAAP;AASH,GAVD,MAUO;AACH,WAAOV,cAAKC,GAAL,CAASC,gBAAOR,MAAP,CAAciB,aAAvB,EACFR,IADE,CACG,0BAAQ;AACVC,MAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,eAAK;AACjCC,UAAAA,KAAK,EAAE,iBAD0B;AAEjCC,UAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,SAAL;AAAA,OAAlB;AADJ,KAAR,CADH,EAOFN,IAPE,CAOG,wBAAMD,gBAAOR,MAAP,CAAcgB,IAApB,CAPH,EAQFP,IARE,CAQG,2BAAS,CACXS,sBAASC,QAAT,CAAkB;AACdC,MAAAA,iBAAiB,EAAE;AADL,KAAlB,CADW,EAIXF,sBAASG,QAAT,CAAkB;AACdC,MAAAA,OAAO,EAAE,EADK;AAEdC,MAAAA,WAAW,EAAE;AAFC,KAAlB,CAJW,EAQXL,sBAASM,OAAT,CAAiB;AACbJ,MAAAA,iBAAiB,EAAE;AADN,KAAjB,CARW,EAWXF,sBAASO,IAAT,CAAc;AACVC,MAAAA,OAAO,EAAE,CACL;AAACC,QAAAA,aAAa,EAAE;AAAhB,OADK,EAEL;AAACC,QAAAA,mBAAmB,EAAE;AAAtB,OAFK;AADC,KAAd,CAXW,CAAT,CARH,EA0BFnB,IA1BE,CA0BGH,cAAKU,IAAL,CAAUR,gBAAOR,MAAP,CAAcgB,IAAxB,CA1BH,CAAP;AA2BH;AACJ;;AACDhB,MAAM,CAAC6B,WAAP,GAAqB,sBAArB;eAEe7B,M",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport newer from 'gulp-newer';\r\nimport imagemin from 'gulp-imagemin';\r\nimport config from '../config';\r\n\r\n/*\r\n * Сжатие картинок\r\n */\r\n\r\nfunction images(done) {\r\n    browsersync.notify('Compiling images');\r\n    // отключаю оптимизацию картинок для дева\r\n    if (gutil.env.env !== 'prod') {\r\n        return gulp.src(config.images.src)\r\n            .pipe(plumber({\r\n                errorHandler: notify.onError(err => ({\r\n                    title: 'Image dev copy',\r\n                    message: err.toString()\r\n                }))\r\n            }))\r\n            .pipe(newer(config.images.dest))\r\n            .pipe(gulp.dest(config.images.dest));\r\n    } else {\r\n        return gulp.src(config.images.srcProduction)\r\n            .pipe(plumber({\r\n                errorHandler: notify.onError(err => ({\r\n                    title: 'Image optimizer',\r\n                    message: err.toString()\r\n                }))\r\n            }))\r\n            .pipe(newer(config.images.dest))\r\n            .pipe(imagemin([\r\n                imagemin.gifsicle({\r\n                    optimizationLevel: 3\r\n                }),\r\n                imagemin.jpegtran({\r\n                    quality: 65,\r\n                    progressive: true\r\n                }),\r\n                imagemin.optipng({\r\n                    optimizationLevel: 5\r\n                }),\r\n                imagemin.svgo({\r\n                    plugins: [\r\n                        {removeViewBox: false},\r\n                        {convertStyleToAttrs: true}\r\n                    ]\r\n                })\r\n            ]))\r\n            .pipe(gulp.dest(config.images.dest));\r\n    }\r\n}\r\nimages.description = 'Оптимизация картинок';\r\n\r\nexport default images;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\sprite_svg.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\sprite_svg.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\sprite_svg.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\sprite_svg.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
        "sourceFileName": "sprite_svg.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanSvgSprite = cleanSvgSprite;\nexports.generateSvgSprite = generateSvgSprite;\nexports.copySvgSprite = copySvgSprite;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _gulpSvgSprites = _interopRequireDefault(require(\"gulp-svg-sprites\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Удаляет svg спрайт /src/img/svg/sprite.svg\r\n */\nfunction cleanSvgSprite(done) {\n  (0, _rimraf.default)(_config.default.svg.generated, done);\n}\n\n;\ncleanSvgSprite.description = 'Удаляет svg спрайт';\n/*\r\n * Генрит svg спрайт из файлов /src/img/svg/sprite/*.svg\r\n */\n\nfunction generateSvgSprite(done) {\n  return _gulp.default.src(_config.default.svg.sprite).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Svg sprite',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpSvgSprites.default)({\n    mode: 'symbols',\n    selector: 'icon-%f',\n    cssFile: false,\n    svg: {\n      sprite: 'sprite.svg',\n      symbols: 'sprite.svg'\n    },\n    preview: false\n  })).pipe(_gulp.default.dest(_config.default.svg.spriteGenerateDest));\n}\n\n;\ngenerateSvgSprite.description = 'Создает svg спрайт';\n\nfunction copySvgSprite(done) {\n  _gulp.default.src(_config.default.svg.generated).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'Copy svg sprite',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulp.default.dest(_config.default.svg.spriteDest));\n\n  done();\n}\n\n;\ncopySvgSprite.description = 'Копирует svg спрайт в /build директорию';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwcml0ZV9zdmcuanMiXSwibmFtZXMiOlsiY2xlYW5TdmdTcHJpdGUiLCJkb25lIiwiY29uZmlnIiwic3ZnIiwiZ2VuZXJhdGVkIiwiZGVzY3JpcHRpb24iLCJnZW5lcmF0ZVN2Z1Nwcml0ZSIsImd1bHAiLCJzcmMiLCJzcHJpdGUiLCJwaXBlIiwiZXJyb3JIYW5kbGVyIiwibm90aWZ5Iiwib25FcnJvciIsImVyciIsInRpdGxlIiwibWVzc2FnZSIsInRvU3RyaW5nIiwibW9kZSIsInNlbGVjdG9yIiwiY3NzRmlsZSIsInN5bWJvbHMiLCJwcmV2aWV3IiwiZGVzdCIsInNwcml0ZUdlbmVyYXRlRGVzdCIsImNvcHlTdmdTcHJpdGUiLCJzcHJpdGVEZXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBOzs7QUFJTyxTQUFTQSxjQUFULENBQXdCQyxJQUF4QixFQUE4QjtBQUNqQyx1QkFBT0MsZ0JBQU9DLEdBQVAsQ0FBV0MsU0FBbEIsRUFBNkJILElBQTdCO0FBQ0g7O0FBQUE7QUFDREQsY0FBYyxDQUFDSyxXQUFmLEdBQTZCLG9CQUE3QjtBQUVBOzs7O0FBSU8sU0FBU0MsaUJBQVQsQ0FBMkJMLElBQTNCLEVBQWlDO0FBQ3BDLFNBQU9NLGNBQUtDLEdBQUwsQ0FBU04sZ0JBQU9DLEdBQVAsQ0FBV00sTUFBcEIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRUMsb0JBQU9DLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLFlBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRlAsSUFQRSxDQU9HLDZCQUFVO0FBQ1pRLElBQUFBLElBQUksRUFBRSxTQURNO0FBRVpDLElBQUFBLFFBQVEsRUFBRSxTQUZFO0FBR1pDLElBQUFBLE9BQU8sRUFBRSxLQUhHO0FBSVpqQixJQUFBQSxHQUFHLEVBQUU7QUFDRE0sTUFBQUEsTUFBTSxFQUFFLFlBRFA7QUFFRFksTUFBQUEsT0FBTyxFQUFFO0FBRlIsS0FKTztBQVFaQyxJQUFBQSxPQUFPLEVBQUU7QUFSRyxHQUFWLENBUEgsRUFpQkZaLElBakJFLENBaUJHSCxjQUFLZ0IsSUFBTCxDQUFVckIsZ0JBQU9DLEdBQVAsQ0FBV3FCLGtCQUFyQixDQWpCSCxDQUFQO0FBa0JIOztBQUFBO0FBQ0RsQixpQkFBaUIsQ0FBQ0QsV0FBbEIsR0FBZ0Msb0JBQWhDOztBQUdPLFNBQVNvQixhQUFULENBQXVCeEIsSUFBdkIsRUFBNkI7QUFDaENNLGdCQUFLQyxHQUFMLENBQVNOLGdCQUFPQyxHQUFQLENBQVdDLFNBQXBCLEVBQ0tNLElBREwsQ0FDVSwwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVDLG9CQUFPQyxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxpQkFEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FEVixFQU9LUCxJQVBMLENBT1VILGNBQUtnQixJQUFMLENBQVVyQixnQkFBT0MsR0FBUCxDQUFXdUIsVUFBckIsQ0FQVjs7QUFTQXpCLEVBQUFBLElBQUk7QUFDUDs7QUFBQTtBQUNEd0IsYUFBYSxDQUFDcEIsV0FBZCxHQUE0Qix5Q0FBNUIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxNYXhcXERldlByb2plY3RzXFxJcTAwN1xcSVEwMDctZlxcaXFcXGd1bHBcXHRhc2tzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCByaW1yYWYgZnJvbSAncmltcmFmJztcclxuaW1wb3J0IHN2Z1Nwcml0ZSBmcm9tICdndWxwLXN2Zy1zcHJpdGVzJztcclxuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnXHJcblxyXG5cclxuLypcclxuICog0KPQtNCw0LvRj9C10YIgc3ZnINGB0L/RgNCw0LnRgiAvc3JjL2ltZy9zdmcvc3ByaXRlLnN2Z1xyXG4gKi9cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjbGVhblN2Z1Nwcml0ZShkb25lKSB7XHJcbiAgICByaW1yYWYoY29uZmlnLnN2Zy5nZW5lcmF0ZWQsIGRvbmUpO1xyXG59O1xyXG5jbGVhblN2Z1Nwcml0ZS5kZXNjcmlwdGlvbiA9ICfQo9C00LDQu9GP0LXRgiBzdmcg0YHQv9GA0LDQudGCJztcclxuXHJcbi8qXHJcbiAqINCT0LXQvdGA0LjRgiBzdmcg0YHQv9GA0LDQudGCINC40Lcg0YTQsNC50LvQvtCyIC9zcmMvaW1nL3N2Zy9zcHJpdGUvKi5zdmdcclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTdmdTcHJpdGUoZG9uZSkge1xyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5zdmcuc3ByaXRlKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdTdmcgc3ByaXRlJyxcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVyci50b1N0cmluZygpXHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgIH0pKVxyXG4gICAgICAgIC5waXBlKHN2Z1Nwcml0ZSh7XHJcbiAgICAgICAgICAgIG1vZGU6ICdzeW1ib2xzJyxcclxuICAgICAgICAgICAgc2VsZWN0b3I6ICdpY29uLSVmJyxcclxuICAgICAgICAgICAgY3NzRmlsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHN2Zzoge1xyXG4gICAgICAgICAgICAgICAgc3ByaXRlOiAnc3ByaXRlLnN2ZycsXHJcbiAgICAgICAgICAgICAgICBzeW1ib2xzOiAnc3ByaXRlLnN2ZydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcHJldmlldzogZmFsc2VcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLnN2Zy5zcHJpdGVHZW5lcmF0ZURlc3QpKTtcclxufTtcclxuZ2VuZXJhdGVTdmdTcHJpdGUuZGVzY3JpcHRpb24gPSAn0KHQvtC30LTQsNC10YIgc3ZnINGB0L/RgNCw0LnRgic7XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvcHlTdmdTcHJpdGUoZG9uZSkge1xyXG4gICAgZ3VscC5zcmMoY29uZmlnLnN2Zy5nZW5lcmF0ZWQpXHJcbiAgICAgICAgLnBpcGUocGx1bWJlcih7XHJcbiAgICAgICAgICAgIGVycm9ySGFuZGxlcjogbm90aWZ5Lm9uRXJyb3IoZXJyID0+ICh7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0NvcHkgc3ZnIHNwcml0ZScsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLnN2Zy5zcHJpdGVEZXN0KSk7XHJcblxyXG4gICAgZG9uZSgpO1xyXG59O1xyXG5jb3B5U3ZnU3ByaXRlLmRlc2NyaXB0aW9uID0gJ9Ca0L7Qv9C40YDRg9C10YIgc3ZnINGB0L/RgNCw0LnRgiDQsiAvYnVpbGQg0LTQuNGA0LXQutGC0L7RgNC40Y4nOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "sprite_svg.js"
      ],
      "names": [
        "cleanSvgSprite",
        "done",
        "config",
        "svg",
        "generated",
        "description",
        "generateSvgSprite",
        "gulp",
        "src",
        "sprite",
        "pipe",
        "errorHandler",
        "notify",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "mode",
        "selector",
        "cssFile",
        "symbols",
        "preview",
        "dest",
        "spriteGenerateDest",
        "copySvgSprite",
        "spriteDest"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGA;;;AAIO,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,uBAAOC,gBAAOC,GAAP,CAAWC,SAAlB,EAA6BH,IAA7B;AACH;;AAAA;AACDD,cAAc,CAACK,WAAf,GAA6B,oBAA7B;AAEA;;;;AAIO,SAASC,iBAAT,CAA2BL,IAA3B,EAAiC;AACpC,SAAOM,cAAKC,GAAL,CAASN,gBAAOC,GAAP,CAAWM,MAApB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,YAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFP,IAPE,CAOG,6BAAU;AACZQ,IAAAA,IAAI,EAAE,SADM;AAEZC,IAAAA,QAAQ,EAAE,SAFE;AAGZC,IAAAA,OAAO,EAAE,KAHG;AAIZjB,IAAAA,GAAG,EAAE;AACDM,MAAAA,MAAM,EAAE,YADP;AAEDY,MAAAA,OAAO,EAAE;AAFR,KAJO;AAQZC,IAAAA,OAAO,EAAE;AARG,GAAV,CAPH,EAiBFZ,IAjBE,CAiBGH,cAAKgB,IAAL,CAAUrB,gBAAOC,GAAP,CAAWqB,kBAArB,CAjBH,CAAP;AAkBH;;AAAA;AACDlB,iBAAiB,CAACD,WAAlB,GAAgC,oBAAhC;;AAGO,SAASoB,aAAT,CAAuBxB,IAAvB,EAA6B;AAChCM,gBAAKC,GAAL,CAASN,gBAAOC,GAAP,CAAWC,SAApB,EACKM,IADL,CACU,0BAAQ;AACVC,IAAAA,YAAY,EAAEC,oBAAOC,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,iBAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADV,EAOKP,IAPL,CAOUH,cAAKgB,IAAL,CAAUrB,gBAAOC,GAAP,CAAWuB,UAArB,CAPV;;AASAzB,EAAAA,IAAI;AACP;;AAAA;AACDwB,aAAa,CAACpB,WAAd,GAA4B,yCAA5B",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport rimraf from 'rimraf';\r\nimport svgSprite from 'gulp-svg-sprites';\r\nimport config from '../config'\r\n\r\n\r\n/*\r\n * Удаляет svg спрайт /src/img/svg/sprite.svg\r\n */\r\n\r\nexport function cleanSvgSprite(done) {\r\n    rimraf(config.svg.generated, done);\r\n};\r\ncleanSvgSprite.description = 'Удаляет svg спрайт';\r\n\r\n/*\r\n * Генрит svg спрайт из файлов /src/img/svg/sprite/*.svg\r\n */\r\n\r\nexport function generateSvgSprite(done) {\r\n    return gulp.src(config.svg.sprite)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Svg sprite',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(svgSprite({\r\n            mode: 'symbols',\r\n            selector: 'icon-%f',\r\n            cssFile: false,\r\n            svg: {\r\n                sprite: 'sprite.svg',\r\n                symbols: 'sprite.svg'\r\n            },\r\n            preview: false\r\n        }))\r\n        .pipe(gulp.dest(config.svg.spriteGenerateDest));\r\n};\r\ngenerateSvgSprite.description = 'Создает svg спрайт';\r\n\r\n\r\nexport function copySvgSprite(done) {\r\n    gulp.src(config.svg.generated)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'Copy svg sprite',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gulp.dest(config.svg.spriteDest));\r\n\r\n    done();\r\n};\r\ncopySvgSprite.description = 'Копирует svg спрайт в /build директорию';"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\js.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\js.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\js.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\js.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
        "sourceFileName": "js.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.jsInternal = jsInternal;\nexports.jsExternal = jsExternal;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpFileInclude = _interopRequireDefault(require(\"gulp-file-include\"));\n\nvar _gulpUglify = _interopRequireDefault(require(\"gulp-uglify\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Сборка js\r\n * Минификация\r\n */\nfunction jsInternal() {\n  _browserSync.default.notify('Compiling js internal');\n\n  return _gulp.default.src(_config.default.js.srcInternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'JS internal',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe((0, _gulpBabel.default)()).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpUglify.default)(_config.default.uglify) : _gulpUtil.default.noop()).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write()).pipe(_gulp.default.dest(_config.default.js.dest));\n}\n\njsInternal.description = 'Сборка internal js';\n\nfunction jsExternal() {\n  _browserSync.default.notify('Compiling js external');\n\n  return _gulp.default.src(_config.default.js.srcExternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'JS external',\n        message: err.toString()\n      };\n    })\n  })).pipe((0, _gulpFileInclude.default)({\n    prefix: '@@',\n    basepath: '@file',\n    indent: true\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpUglify.default)() : _gulpUtil.default.noop()).pipe(_gulp.default.dest(_config.default.js.dest));\n}\n\njsExternal.description = 'Сборка external js';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzLmpzIl0sIm5hbWVzIjpbImpzSW50ZXJuYWwiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjb25maWciLCJqcyIsInNyY0ludGVybmFsIiwicGlwZSIsImVycm9ySGFuZGxlciIsIm9uRXJyb3IiLCJlcnIiLCJ0aXRsZSIsIm1lc3NhZ2UiLCJ0b1N0cmluZyIsImd1dGlsIiwiZW52Iiwibm9vcCIsInNvdXJjZW1hcHMiLCJpbml0IiwicHJlZml4IiwiYmFzZXBhdGgiLCJpbmRlbnQiLCJ1Z2xpZnkiLCJ3cml0ZSIsImRlc3QiLCJkZXNjcmlwdGlvbiIsImpzRXh0ZXJuYWwiLCJzcmNFeHRlcm5hbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7O0FBS08sU0FBU0EsVUFBVCxHQUFzQjtBQUN6QkMsdUJBQVlDLE1BQVosQ0FBbUIsdUJBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU0MsZ0JBQU9DLEVBQVAsQ0FBVUMsV0FBbkIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRVAsb0JBQU9RLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLGFBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCRCxrQkFBTUUsSUFBTixFQUEzQixHQUEwQ0Msd0JBQVdDLElBQVgsRUFQN0MsRUFRRlgsSUFSRSxDQVFHLDhCQUFZO0FBQ2RZLElBQUFBLE1BQU0sRUFBRSxJQURNO0FBRWRDLElBQUFBLFFBQVEsRUFBRSxPQUZJO0FBR2RDLElBQUFBLE1BQU0sRUFBRTtBQUhNLEdBQVosQ0FSSCxFQWFGZCxJQWJFLENBYUcseUJBYkgsRUFjRkEsSUFkRSxDQWNHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLHlCQUFPWCxnQkFBT2tCLE1BQWQsQ0FBM0IsR0FBbURSLGtCQUFNRSxJQUFOLEVBZHRELEVBZUZULElBZkUsQ0FlR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQkQsa0JBQU1FLElBQU4sRUFBM0IsR0FBMENDLHdCQUFXTSxLQUFYLEVBZjdDLEVBZ0JGaEIsSUFoQkUsQ0FnQkdMLGNBQUtzQixJQUFMLENBQVVwQixnQkFBT0MsRUFBUCxDQUFVbUIsSUFBcEIsQ0FoQkgsQ0FBUDtBQWlCSDs7QUFDRHpCLFVBQVUsQ0FBQzBCLFdBQVgsR0FBeUIsb0JBQXpCOztBQUlPLFNBQVNDLFVBQVQsR0FBc0I7QUFDekIxQix1QkFBWUMsTUFBWixDQUFtQix1QkFBbkI7O0FBRUEsU0FBT0MsY0FBS0MsR0FBTCxDQUFTQyxnQkFBT0MsRUFBUCxDQUFVc0IsV0FBbkIsRUFDRnBCLElBREUsQ0FDRywwQkFBUTtBQUNWQyxJQUFBQSxZQUFZLEVBQUVQLG9CQUFPUSxPQUFQLENBQWUsVUFBQUMsR0FBRztBQUFBLGFBQUs7QUFDakNDLFFBQUFBLEtBQUssRUFBRSxhQUQwQjtBQUVqQ0MsUUFBQUEsT0FBTyxFQUFFRixHQUFHLENBQUNHLFFBQUo7QUFGd0IsT0FBTDtBQUFBLEtBQWxCO0FBREosR0FBUixDQURILEVBT0ZOLElBUEUsQ0FPRyw4QkFBWTtBQUNkWSxJQUFBQSxNQUFNLEVBQUUsSUFETTtBQUVkQyxJQUFBQSxRQUFRLEVBQUUsT0FGSTtBQUdkQyxJQUFBQSxNQUFNLEVBQUU7QUFITSxHQUFaLENBUEgsRUFZRmQsSUFaRSxDQVlHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLDBCQUEzQixHQUFzQ0Qsa0JBQU1FLElBQU4sRUFaekMsRUFhRlQsSUFiRSxDQWFHTCxjQUFLc0IsSUFBTCxDQUFVcEIsZ0JBQU9DLEVBQVAsQ0FBVW1CLElBQXBCLENBYkgsQ0FBUDtBQWNIOztBQUNERSxVQUFVLENBQUNELFdBQVgsR0FBeUIsb0JBQXpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcTWF4XFxEZXZQcm9qZWN0c1xcSXEwMDdcXElRMDA3LWZcXGlxXFxndWxwXFx0YXNrc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcbmltcG9ydCBiYWJlbCBmcm9tICdndWxwLWJhYmVsJztcclxuaW1wb3J0IGd1dGlsIGZyb20gJ2d1bHAtdXRpbCc7XHJcbmltcG9ydCBwbHVtYmVyIGZyb20gJ2d1bHAtcGx1bWJlcic7XHJcbmltcG9ydCBub3RpZnkgZnJvbSAnZ3VscC1ub3RpZnknO1xyXG5pbXBvcnQgYnJvd3NlcnN5bmMgZnJvbSAnYnJvd3Nlci1zeW5jJztcclxuaW1wb3J0IGZpbGVpbmNsdWRlIGZyb20gJ2d1bHAtZmlsZS1pbmNsdWRlJztcclxuaW1wb3J0IHVnbGlmeSBmcm9tICdndWxwLXVnbGlmeSc7XHJcbmltcG9ydCBzb3VyY2VtYXBzIGZyb20gJ2d1bHAtc291cmNlbWFwcyc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJ1xyXG5cclxuLypcclxuICog0KHQsdC+0YDQutCwIGpzXHJcbiAqINCc0LjQvdC40YTQuNC60LDRhtC40Y9cclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24ganNJbnRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIGpzIGludGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5qcy5zcmNJbnRlcm5hbClcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSlMgaW50ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy5pbml0KCkpXHJcbiAgICAgICAgLnBpcGUoZmlsZWluY2x1ZGUoe1xyXG4gICAgICAgICAgICBwcmVmaXg6ICdAQCcsXHJcbiAgICAgICAgICAgIGJhc2VwYXRoOiAnQGZpbGUnLFxyXG4gICAgICAgICAgICBpbmRlbnQ6IHRydWVcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShiYWJlbCgpKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IHVnbGlmeShjb25maWcudWdsaWZ5KSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndXRpbC5ub29wKCkgOiBzb3VyY2VtYXBzLndyaXRlKCkpXHJcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KGNvbmZpZy5qcy5kZXN0KSk7XHJcbn1cclxuanNJbnRlcm5hbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaW50ZXJuYWwganMnO1xyXG5cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24ganNFeHRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIGpzIGV4dGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5qcy5zcmNFeHRlcm5hbClcclxuICAgICAgICAucGlwZShwbHVtYmVyKHtcclxuICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiBub3RpZnkub25FcnJvcihlcnIgPT4gKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnSlMgZXh0ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZmlsZWluY2x1ZGUoe1xyXG4gICAgICAgICAgICBwcmVmaXg6ICdAQCcsXHJcbiAgICAgICAgICAgIGJhc2VwYXRoOiAnQGZpbGUnLFxyXG4gICAgICAgICAgICBpbmRlbnQ6IHRydWVcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyB1Z2xpZnkoKSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmpzLmRlc3QpKTtcclxufVxyXG5qc0V4dGVybmFsLmRlc2NyaXB0aW9uID0gJ9Ch0LHQvtGA0LrQsCBleHRlcm5hbCBqcyc7Il19",
    "map": {
      "version": 3,
      "sources": [
        "js.js"
      ],
      "names": [
        "jsInternal",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "config",
        "js",
        "srcInternal",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "gutil",
        "env",
        "noop",
        "sourcemaps",
        "init",
        "prefix",
        "basepath",
        "indent",
        "uglify",
        "write",
        "dest",
        "description",
        "jsExternal",
        "srcExternal"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;AAKO,SAASA,UAAT,GAAsB;AACzBC,uBAAYC,MAAZ,CAAmB,uBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAOC,EAAP,CAAUC,WAAnB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,aAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,8BAAY;AACdY,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CARH,EAaFd,IAbE,CAaG,yBAbH,EAcFA,IAdE,CAcGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,yBAAOX,gBAAOkB,MAAd,CAA3B,GAAmDR,kBAAME,IAAN,EAdtD,EAeFT,IAfE,CAeGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWM,KAAX,EAf7C,EAgBFhB,IAhBE,CAgBGL,cAAKsB,IAAL,CAAUpB,gBAAOC,EAAP,CAAUmB,IAApB,CAhBH,CAAP;AAiBH;;AACDzB,UAAU,CAAC0B,WAAX,GAAyB,oBAAzB;;AAIO,SAASC,UAAT,GAAsB;AACzB1B,uBAAYC,MAAZ,CAAmB,uBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASC,gBAAOC,EAAP,CAAUsB,WAAnB,EACFpB,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEP,oBAAOQ,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,aAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOG,8BAAY;AACdY,IAAAA,MAAM,EAAE,IADM;AAEdC,IAAAA,QAAQ,EAAE,OAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAAZ,CAPH,EAYFd,IAZE,CAYGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAA3B,GAAsCD,kBAAME,IAAN,EAZzC,EAaFT,IAbE,CAaGL,cAAKsB,IAAL,CAAUpB,gBAAOC,EAAP,CAAUmB,IAApB,CAbH,CAAP;AAcH;;AACDE,UAAU,CAACD,WAAX,GAAyB,oBAAzB",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport babel from 'gulp-babel';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport fileinclude from 'gulp-file-include';\r\nimport uglify from 'gulp-uglify';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport config from '../config'\r\n\r\n/*\r\n * Сборка js\r\n * Минификация\r\n */\r\n\r\nexport function jsInternal() {\r\n    browsersync.notify('Compiling js internal');\r\n\r\n    return gulp.src(config.js.srcInternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'JS internal',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(babel())\r\n        .pipe(gutil.env.env === 'prod' ? uglify(config.uglify) : gutil.noop())\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write())\r\n        .pipe(gulp.dest(config.js.dest));\r\n}\r\njsInternal.description = 'Сборка internal js';\r\n\r\n\r\n\r\nexport function jsExternal() {\r\n    browsersync.notify('Compiling js external');\r\n\r\n    return gulp.src(config.js.srcExternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'JS external',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(fileinclude({\r\n            prefix: '@@',\r\n            basepath: '@file',\r\n            indent: true\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? uglify() : gutil.noop())\r\n        .pipe(gulp.dest(config.js.dest));\r\n}\r\njsExternal.description = 'Сборка external js';"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"filename\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\\\\gulp\\\\tasks\\\\postcss.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Max\\\\DevProjects\\\\Iq007\\\\IQ007-f\\\\iq\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\postcss.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\postcss.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\postcss.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
        "sourceFileName": "postcss.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postcssInternal = postcssInternal;\nexports.postcssExternal = postcssExternal;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUtil = _interopRequireDefault(require(\"gulp-util\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpRename = _interopRequireDefault(require(\"gulp-rename\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpCssnano = _interopRequireDefault(require(\"gulp-cssnano\"));\n\nvar _postcssInlineSvg = _interopRequireDefault(require(\"postcss-inline-svg\"));\n\nvar _postcssImport = _interopRequireDefault(require(\"postcss-import\"));\n\nvar _precss = _interopRequireDefault(require(\"precss\"));\n\nvar _postcssSassyMixins = _interopRequireDefault(require(\"postcss-sassy-mixins\"));\n\nvar _lost = _interopRequireDefault(require(\"lost\"));\n\nvar _postcssCssnext = _interopRequireDefault(require(\"postcss-cssnext\"));\n\nvar _postcssPxtorem = _interopRequireDefault(require(\"postcss-pxtorem\"));\n\nvar _postcssHexrgba = _interopRequireDefault(require(\"postcss-hexrgba\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Компиляция POSTCSS в CSS\r\n * Создание sourcemaps\r\n * Минификация\r\n */\nvar processors = [(0, _postcssImport.default)(), (0, _postcssSassyMixins.default)(), (0, _precss.default)(), (0, _lost.default)(), (0, _postcssPxtorem.default)(), (0, _postcssHexrgba.default)(), (0, _postcssInlineSvg.default)(_config.default.svg.svgInStyle), (0, _postcssCssnext.default)()];\n\nfunction postcssInternal() {\n  _browserSync.default.notify('Compiling CSS internal');\n\n  return _gulp.default.src(_config.default.css.srcInternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'CSS internal',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpPostcss.default)(processors)).pipe((0, _gulpAutoprefixer.default)()).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpCssnano.default)(_config.default.cssnano) : _gulpUtil.default.noop()).pipe((0, _gulpRename.default)({\n    extname: '.css'\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write('.')).pipe(_gulp.default.dest(_config.default.css.dest));\n}\n\n;\npostcssInternal.description = 'Сборка internal css';\n\nfunction postcssExternal() {\n  _browserSync.default.notify('Compiling CSS external');\n\n  return _gulp.default.src(_config.default.css.srcExternal).pipe((0, _gulpPlumber.default)({\n    errorHandler: _gulpNotify.default.onError(function (err) {\n      return {\n        title: 'CSS external',\n        message: err.toString()\n      };\n    })\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.init()).pipe((0, _gulpPostcss.default)([(0, _postcssImport.default)()])).pipe(_gulpUtil.default.env.env === 'prod' ? (0, _gulpCssnano.default)(_config.default.cssnano) : _gulpUtil.default.noop()).pipe((0, _gulpRename.default)({\n    extname: '.css'\n  })).pipe(_gulpUtil.default.env.env === 'prod' ? _gulpUtil.default.noop() : _gulpSourcemaps.default.write('.')).pipe(_gulp.default.dest(_config.default.css.dest));\n}\n\n;\npostcssExternal.description = 'Сборка external css';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3Rjc3MuanMiXSwibmFtZXMiOlsicHJvY2Vzc29ycyIsImNvbmZpZyIsInN2ZyIsInN2Z0luU3R5bGUiLCJwb3N0Y3NzSW50ZXJuYWwiLCJicm93c2Vyc3luYyIsIm5vdGlmeSIsImd1bHAiLCJzcmMiLCJjc3MiLCJzcmNJbnRlcm5hbCIsInBpcGUiLCJlcnJvckhhbmRsZXIiLCJvbkVycm9yIiwiZXJyIiwidGl0bGUiLCJtZXNzYWdlIiwidG9TdHJpbmciLCJndXRpbCIsImVudiIsIm5vb3AiLCJzb3VyY2VtYXBzIiwiaW5pdCIsImNzc25hbm8iLCJleHRuYW1lIiwid3JpdGUiLCJkZXN0IiwiZGVzY3JpcHRpb24iLCJwb3N0Y3NzRXh0ZXJuYWwiLCJzcmNFeHRlcm5hbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7OztBQU1BLElBQU1BLFVBQVUsR0FBRyxDQUNmLDZCQURlLEVBRWYsa0NBRmUsRUFHZixzQkFIZSxFQUlmLG9CQUplLEVBS2YsOEJBTGUsRUFNZiw4QkFOZSxFQU9mLCtCQUFVQyxnQkFBT0MsR0FBUCxDQUFXQyxVQUFyQixDQVBlLEVBUWYsOEJBUmUsQ0FBbkI7O0FBYU8sU0FBU0MsZUFBVCxHQUEyQjtBQUM5QkMsdUJBQVlDLE1BQVosQ0FBbUIsd0JBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU1AsZ0JBQU9RLEdBQVAsQ0FBV0MsV0FBcEIsRUFDRkMsSUFERSxDQUNHLDBCQUFRO0FBQ1ZDLElBQUFBLFlBQVksRUFBRU4sb0JBQU9PLE9BQVAsQ0FBZSxVQUFBQyxHQUFHO0FBQUEsYUFBSztBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFLGNBRDBCO0FBRWpDQyxRQUFBQSxPQUFPLEVBQUVGLEdBQUcsQ0FBQ0csUUFBSjtBQUZ3QixPQUFMO0FBQUEsS0FBbEI7QUFESixHQUFSLENBREgsRUFPRk4sSUFQRSxDQU9HTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCRCxrQkFBTUUsSUFBTixFQUEzQixHQUEwQ0Msd0JBQVdDLElBQVgsRUFQN0MsRUFRRlgsSUFSRSxDQVFHLDBCQUFZWCxVQUFaLENBUkgsRUFTRlcsSUFURSxDQVNHLGdDQVRILEVBVUZBLElBVkUsQ0FVR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQiwwQkFBUWxCLGdCQUFPc0IsT0FBZixDQUEzQixHQUFxREwsa0JBQU1FLElBQU4sRUFWeEQsRUFXRlQsSUFYRSxDQVdHLHlCQUFPO0FBQUNhLElBQUFBLE9BQU8sRUFBRTtBQUFWLEdBQVAsQ0FYSCxFQVlGYixJQVpFLENBWUdPLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJELGtCQUFNRSxJQUFOLEVBQTNCLEdBQTBDQyx3QkFBV0ksS0FBWCxDQUFpQixHQUFqQixDQVo3QyxFQWFGZCxJQWJFLENBYUdKLGNBQUttQixJQUFMLENBQVV6QixnQkFBT1EsR0FBUCxDQUFXaUIsSUFBckIsQ0FiSCxDQUFQO0FBY0g7O0FBQUE7QUFDRHRCLGVBQWUsQ0FBQ3VCLFdBQWhCLEdBQThCLHFCQUE5Qjs7QUFHTyxTQUFTQyxlQUFULEdBQTJCO0FBQzlCdkIsdUJBQVlDLE1BQVosQ0FBbUIsd0JBQW5COztBQUVBLFNBQU9DLGNBQUtDLEdBQUwsQ0FBU1AsZ0JBQU9RLEdBQVAsQ0FBV29CLFdBQXBCLEVBQ0ZsQixJQURFLENBQ0csMEJBQVE7QUFDVkMsSUFBQUEsWUFBWSxFQUFFTixvQkFBT08sT0FBUCxDQUFlLFVBQUFDLEdBQUc7QUFBQSxhQUFLO0FBQ2pDQyxRQUFBQSxLQUFLLEVBQUUsY0FEMEI7QUFFakNDLFFBQUFBLE9BQU8sRUFBRUYsR0FBRyxDQUFDRyxRQUFKO0FBRndCLE9BQUw7QUFBQSxLQUFsQjtBQURKLEdBQVIsQ0FESCxFQU9GTixJQVBFLENBT0dPLGtCQUFNQyxHQUFOLENBQVVBLEdBQVYsS0FBa0IsTUFBbEIsR0FBMkJELGtCQUFNRSxJQUFOLEVBQTNCLEdBQTBDQyx3QkFBV0MsSUFBWCxFQVA3QyxFQVFGWCxJQVJFLENBUUcsMEJBQVksQ0FBQyw2QkFBRCxDQUFaLENBUkgsRUFTRkEsSUFURSxDQVNHTyxrQkFBTUMsR0FBTixDQUFVQSxHQUFWLEtBQWtCLE1BQWxCLEdBQTJCLDBCQUFRbEIsZ0JBQU9zQixPQUFmLENBQTNCLEdBQXFETCxrQkFBTUUsSUFBTixFQVR4RCxFQVVGVCxJQVZFLENBVUcseUJBQU87QUFBQ2EsSUFBQUEsT0FBTyxFQUFFO0FBQVYsR0FBUCxDQVZILEVBV0ZiLElBWEUsQ0FXR08sa0JBQU1DLEdBQU4sQ0FBVUEsR0FBVixLQUFrQixNQUFsQixHQUEyQkQsa0JBQU1FLElBQU4sRUFBM0IsR0FBMENDLHdCQUFXSSxLQUFYLENBQWlCLEdBQWpCLENBWDdDLEVBWUZkLElBWkUsQ0FZR0osY0FBS21CLElBQUwsQ0FBVXpCLGdCQUFPUSxHQUFQLENBQVdpQixJQUFyQixDQVpILENBQVA7QUFhSDs7QUFBQTtBQUNERSxlQUFlLENBQUNELFdBQWhCLEdBQThCLHFCQUE5QiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE1heFxcRGV2UHJvamVjdHNcXElxMDA3XFxJUTAwNy1mXFxpcVxcZ3VscFxcdGFza3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBndWxwIGZyb20gJ2d1bHAnO1xyXG5pbXBvcnQgZ3V0aWwgZnJvbSAnZ3VscC11dGlsJztcclxuaW1wb3J0IHBsdW1iZXIgZnJvbSAnZ3VscC1wbHVtYmVyJztcclxuaW1wb3J0IG5vdGlmeSBmcm9tICdndWxwLW5vdGlmeSc7XHJcbmltcG9ydCBicm93c2Vyc3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xyXG5pbXBvcnQgcmVuYW1lIGZyb20gJ2d1bHAtcmVuYW1lJztcclxuaW1wb3J0IHNvdXJjZW1hcHMgZnJvbSAnZ3VscC1zb3VyY2VtYXBzJztcclxuaW1wb3J0IHByZWZpeGVyIGZyb20gJ2d1bHAtYXV0b3ByZWZpeGVyJztcclxuaW1wb3J0IGd1bHBQb3N0Y3NzIGZyb20gJ2d1bHAtcG9zdGNzcyc7XHJcbmltcG9ydCBjc3NuYW5vIGZyb20gJ2d1bHAtY3NzbmFubyc7XHJcbmltcG9ydCBpbmxpbmVTdmcgZnJvbSAncG9zdGNzcy1pbmxpbmUtc3ZnJztcclxuaW1wb3J0IGF0SW1wb3J0IGZyb20gJ3Bvc3Rjc3MtaW1wb3J0JztcclxuaW1wb3J0IHByZWNzcyBmcm9tICdwcmVjc3MnO1xyXG5pbXBvcnQgbWl4aW5zIGZyb20gJ3Bvc3Rjc3Mtc2Fzc3ktbWl4aW5zJztcclxuaW1wb3J0IGxvc3QgZnJvbSAnbG9zdCc7XHJcbmltcG9ydCBuZXh0IGZyb20gJ3Bvc3Rjc3MtY3NzbmV4dCc7XHJcbmltcG9ydCBweHRvcmVtIGZyb20gJ3Bvc3Rjc3MtcHh0b3JlbSc7XHJcbmltcG9ydCBoZXhyZ2JhIGZyb20gJ3Bvc3Rjc3MtaGV4cmdiYSc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJztcclxuXHJcbi8qXHJcbiAqINCa0L7QvNC/0LjQu9GP0YbQuNGPIFBPU1RDU1Mg0LIgQ1NTXHJcbiAqINCh0L7Qt9C00LDQvdC40LUgc291cmNlbWFwc1xyXG4gKiDQnNC40L3QuNGE0LjQutCw0YbQuNGPXHJcbiAqL1xyXG5cclxuY29uc3QgcHJvY2Vzc29ycyA9IFtcclxuICAgIGF0SW1wb3J0KCksXHJcbiAgICBtaXhpbnMoKSxcclxuICAgIHByZWNzcygpLFxyXG4gICAgbG9zdCgpLFxyXG4gICAgcHh0b3JlbSgpLFxyXG4gICAgaGV4cmdiYSgpLFxyXG4gICAgaW5saW5lU3ZnKGNvbmZpZy5zdmcuc3ZnSW5TdHlsZSksXHJcbiAgICBuZXh0KClcclxuXTtcclxuXHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBvc3Rjc3NJbnRlcm5hbCgpIHtcclxuICAgIGJyb3dzZXJzeW5jLm5vdGlmeSgnQ29tcGlsaW5nIENTUyBpbnRlcm5hbCcpO1xyXG5cclxuICAgIHJldHVybiBndWxwLnNyYyhjb25maWcuY3NzLnNyY0ludGVybmFsKVxyXG4gICAgICAgIC5waXBlKHBsdW1iZXIoe1xyXG4gICAgICAgICAgICBlcnJvckhhbmRsZXI6IG5vdGlmeS5vbkVycm9yKGVyciA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdDU1MgaW50ZXJuYWwnLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy5pbml0KCkpXHJcbiAgICAgICAgLnBpcGUoZ3VscFBvc3Rjc3MocHJvY2Vzc29ycykpXHJcbiAgICAgICAgLnBpcGUocHJlZml4ZXIoKSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBjc3NuYW5vKGNvbmZpZy5jc3NuYW5vKSA6IGd1dGlsLm5vb3AoKSlcclxuICAgICAgICAucGlwZShyZW5hbWUoe2V4dG5hbWU6ICcuY3NzJ30pKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IGd1dGlsLm5vb3AoKSA6IHNvdXJjZW1hcHMud3JpdGUoJy4nKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLmNzcy5kZXN0KSk7XHJcbn07XHJcbnBvc3Rjc3NJbnRlcm5hbC5kZXNjcmlwdGlvbiA9ICfQodCx0L7RgNC60LAgaW50ZXJuYWwgY3NzJztcclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcG9zdGNzc0V4dGVybmFsKCkge1xyXG4gICAgYnJvd3NlcnN5bmMubm90aWZ5KCdDb21waWxpbmcgQ1NTIGV4dGVybmFsJyk7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5jc3Muc3JjRXh0ZXJuYWwpXHJcbiAgICAgICAgLnBpcGUocGx1bWJlcih7XHJcbiAgICAgICAgICAgIGVycm9ySGFuZGxlcjogbm90aWZ5Lm9uRXJyb3IoZXJyID0+ICh7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0NTUyBleHRlcm5hbCcsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZShndXRpbC5lbnYuZW52ID09PSAncHJvZCcgPyBndXRpbC5ub29wKCkgOiBzb3VyY2VtYXBzLmluaXQoKSlcclxuICAgICAgICAucGlwZShndWxwUG9zdGNzcyhbYXRJbXBvcnQoKV0pKVxyXG4gICAgICAgIC5waXBlKGd1dGlsLmVudi5lbnYgPT09ICdwcm9kJyA/IGNzc25hbm8oY29uZmlnLmNzc25hbm8pIDogZ3V0aWwubm9vcCgpKVxyXG4gICAgICAgIC5waXBlKHJlbmFtZSh7ZXh0bmFtZTogJy5jc3MnfSkpXHJcbiAgICAgICAgLnBpcGUoZ3V0aWwuZW52LmVudiA9PT0gJ3Byb2QnID8gZ3V0aWwubm9vcCgpIDogc291cmNlbWFwcy53cml0ZSgnLicpKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChjb25maWcuY3NzLmRlc3QpKTtcclxufTtcclxucG9zdGNzc0V4dGVybmFsLmRlc2NyaXB0aW9uID0gJ9Ch0LHQvtGA0LrQsCBleHRlcm5hbCBjc3MnO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "postcss.js"
      ],
      "names": [
        "processors",
        "config",
        "svg",
        "svgInStyle",
        "postcssInternal",
        "browsersync",
        "notify",
        "gulp",
        "src",
        "css",
        "srcInternal",
        "pipe",
        "errorHandler",
        "onError",
        "err",
        "title",
        "message",
        "toString",
        "gutil",
        "env",
        "noop",
        "sourcemaps",
        "init",
        "cssnano",
        "extname",
        "write",
        "dest",
        "description",
        "postcssExternal",
        "srcExternal"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;AAMA,IAAMA,UAAU,GAAG,CACf,6BADe,EAEf,kCAFe,EAGf,sBAHe,EAIf,oBAJe,EAKf,8BALe,EAMf,8BANe,EAOf,+BAAUC,gBAAOC,GAAP,CAAWC,UAArB,CAPe,EAQf,8BARe,CAAnB;;AAaO,SAASC,eAAT,GAA2B;AAC9BC,uBAAYC,MAAZ,CAAmB,wBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASP,gBAAOQ,GAAP,CAAWC,WAApB,EACFC,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEN,oBAAOO,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,cAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,0BAAYX,UAAZ,CARH,EASFW,IATE,CASG,gCATH,EAUFA,IAVE,CAUGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAAQlB,gBAAOsB,OAAf,CAA3B,GAAqDL,kBAAME,IAAN,EAVxD,EAWFT,IAXE,CAWG,yBAAO;AAACa,IAAAA,OAAO,EAAE;AAAV,GAAP,CAXH,EAYFb,IAZE,CAYGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWI,KAAX,CAAiB,GAAjB,CAZ7C,EAaFd,IAbE,CAaGJ,cAAKmB,IAAL,CAAUzB,gBAAOQ,GAAP,CAAWiB,IAArB,CAbH,CAAP;AAcH;;AAAA;AACDtB,eAAe,CAACuB,WAAhB,GAA8B,qBAA9B;;AAGO,SAASC,eAAT,GAA2B;AAC9BvB,uBAAYC,MAAZ,CAAmB,wBAAnB;;AAEA,SAAOC,cAAKC,GAAL,CAASP,gBAAOQ,GAAP,CAAWoB,WAApB,EACFlB,IADE,CACG,0BAAQ;AACVC,IAAAA,YAAY,EAAEN,oBAAOO,OAAP,CAAe,UAAAC,GAAG;AAAA,aAAK;AACjCC,QAAAA,KAAK,EAAE,cAD0B;AAEjCC,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ;AAFwB,OAAL;AAAA,KAAlB;AADJ,GAAR,CADH,EAOFN,IAPE,CAOGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWC,IAAX,EAP7C,EAQFX,IARE,CAQG,0BAAY,CAAC,6BAAD,CAAZ,CARH,EASFA,IATE,CASGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2B,0BAAQlB,gBAAOsB,OAAf,CAA3B,GAAqDL,kBAAME,IAAN,EATxD,EAUFT,IAVE,CAUG,yBAAO;AAACa,IAAAA,OAAO,EAAE;AAAV,GAAP,CAVH,EAWFb,IAXE,CAWGO,kBAAMC,GAAN,CAAUA,GAAV,KAAkB,MAAlB,GAA2BD,kBAAME,IAAN,EAA3B,GAA0CC,wBAAWI,KAAX,CAAiB,GAAjB,CAX7C,EAYFd,IAZE,CAYGJ,cAAKmB,IAAL,CAAUzB,gBAAOQ,GAAP,CAAWiB,IAArB,CAZH,CAAP;AAaH;;AAAA;AACDE,eAAe,CAACD,WAAhB,GAA8B,qBAA9B",
      "sourceRoot": "C:\\Users\\Max\\DevProjects\\Iq007\\IQ007-f\\iq\\gulp\\tasks\\",
      "sourcesContent": [
        "import gulp from 'gulp';\r\nimport gutil from 'gulp-util';\r\nimport plumber from 'gulp-plumber';\r\nimport notify from 'gulp-notify';\r\nimport browsersync from 'browser-sync';\r\nimport rename from 'gulp-rename';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport prefixer from 'gulp-autoprefixer';\r\nimport gulpPostcss from 'gulp-postcss';\r\nimport cssnano from 'gulp-cssnano';\r\nimport inlineSvg from 'postcss-inline-svg';\r\nimport atImport from 'postcss-import';\r\nimport precss from 'precss';\r\nimport mixins from 'postcss-sassy-mixins';\r\nimport lost from 'lost';\r\nimport next from 'postcss-cssnext';\r\nimport pxtorem from 'postcss-pxtorem';\r\nimport hexrgba from 'postcss-hexrgba';\r\nimport config from '../config';\r\n\r\n/*\r\n * Компиляция POSTCSS в CSS\r\n * Создание sourcemaps\r\n * Минификация\r\n */\r\n\r\nconst processors = [\r\n    atImport(),\r\n    mixins(),\r\n    precss(),\r\n    lost(),\r\n    pxtorem(),\r\n    hexrgba(),\r\n    inlineSvg(config.svg.svgInStyle),\r\n    next()\r\n];\r\n\r\n\r\n\r\nexport function postcssInternal() {\r\n    browsersync.notify('Compiling CSS internal');\r\n\r\n    return gulp.src(config.css.srcInternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'CSS internal',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(gulpPostcss(processors))\r\n        .pipe(prefixer())\r\n        .pipe(gutil.env.env === 'prod' ? cssnano(config.cssnano) : gutil.noop())\r\n        .pipe(rename({extname: '.css'}))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write('.'))\r\n        .pipe(gulp.dest(config.css.dest));\r\n};\r\npostcssInternal.description = 'Сборка internal css';\r\n\r\n\r\nexport function postcssExternal() {\r\n    browsersync.notify('Compiling CSS external');\r\n\r\n    return gulp.src(config.css.srcExternal)\r\n        .pipe(plumber({\r\n            errorHandler: notify.onError(err => ({\r\n                title: 'CSS external',\r\n                message: err.toString()\r\n            }))\r\n        }))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.init())\r\n        .pipe(gulpPostcss([atImport()]))\r\n        .pipe(gutil.env.env === 'prod' ? cssnano(config.cssnano) : gutil.noop())\r\n        .pipe(rename({extname: '.css'}))\r\n        .pipe(gutil.env.env === 'prod' ? gutil.noop() : sourcemaps.write('.'))\r\n        .pipe(gulp.dest(config.css.dest));\r\n};\r\npostcssExternal.description = 'Сборка external css';\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594733235197
  }
}